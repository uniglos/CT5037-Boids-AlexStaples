; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30038.1 

include listing.inc

INCLUDELIB MSVCRTD

CONST	SEGMENT
$SG20685 DB	'C', 00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0'
	DB	00H, '2', 00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H
	DB	'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd'
	DB	00H, 's', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H
	DB	'0', 00H, '.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 't', 00H
	DB	'e', 00H, 's', 00H, 't', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'r'
	DB	00H, 'e', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '_', 00H, 'v'
	DB	00H, 'e', 00H, 'c', 00H, '2', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H
	ORG $+6
$SG20686 DB	'v', 00H, '.', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H
	DB	't', 00H, 'h', 00H, '(', 00H, ')', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '2', 00H, 00H, 00H
$SG21827 DB	'invalid argument', 00H
	ORG $+3
$SG21828 DB	'%s', 00H
	ORG $+1
$SG21829 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.29.30037\include\xmemory', 00H
$SG21832 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG21830 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '9', 00H, '.', 00H, '3', 00H, '0', 00H
	DB	'0', 00H, '3', 00H, '7', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG21831 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
CONST	ENDS
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked
PUBLIC	?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
PUBLIC	?length@?$tvec2@M$0A@@glm@@SAHXZ		; glm::tvec2<float,0>::length
PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@XZ			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@M@Z			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	??E?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ		; glm::tvec2<float,0>::operator++
PUBLIC	??F?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ		; glm::tvec2<float,0>::operator--
PUBLIC	??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z		; glm::tvec2<float,0>::operator++
PUBLIC	??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z		; glm::tvec2<float,0>::operator--
PUBLIC	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z		; glm::tvec2<float,0>::tvec2<float,0><int,int>
PUBLIC	?test_vec2_operators@@YAHXZ			; test_vec2_operators
PUBLIC	??$?9M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z	; glm::operator!=<float,0>
PUBLIC	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z	; glm::operator==<float,0>
PUBLIC	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z	; glm::operator+<float,0>
PUBLIC	??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z	; glm::tvec2<float,0>::operator+=<float>
PUBLIC	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z	; glm::operator+<float,0>
PUBLIC	??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z	; glm::tvec2<float,0>::operator+=<float>
PUBLIC	??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z	; glm::operator-<float,0>
PUBLIC	??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z	; glm::tvec2<float,0>::operator-=<float>
PUBLIC	??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z	; glm::operator-<float,0>
PUBLIC	??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z	; glm::tvec2<float,0>::operator-=<float>
PUBLIC	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z	; glm::operator*<float,0>
PUBLIC	??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z	; glm::tvec2<float,0>::operator*=<float>
PUBLIC	??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z	; glm::operator/<float,0>
PUBLIC	??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z	; glm::tvec2<float,0>::operator/=<float>
PUBLIC	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z	; glm::operator*<float,0>
PUBLIC	??$?0HN@?$tvec2@M$0A@@glm@@QEAA@HN@Z		; glm::tvec2<float,0>::tvec2<float,0><int,double>
PUBLIC	??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z	; glm::operator/<float,0>
PUBLIC	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z	; glm::operator+<float,0>
PUBLIC	??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z	; glm::operator-<float,0>
PUBLIC	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z	; glm::operator*<float,0>
PUBLIC	??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z	; glm::operator/<float,0>
PUBLIC	??$?0NN@?$tvec2@M$0A@@glm@@QEAA@NN@Z		; glm::tvec2<float,0>::tvec2<float,0><double,double>
PUBLIC	??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z	; glm::tvec2<float,0>::operator*=<float>
PUBLIC	??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z	; glm::tvec2<float,0>::operator/=<float>
PUBLIC	??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z	; glm::operator-<float,0>
PUBLIC	?test_vec2_ctor@@YAHXZ				; test_vec2_ctor
PUBLIC	??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec2<float,0> >::allocator<glm::tvec2<float,0> >
PUBLIC	?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<float,0> >::deallocate
PUBLIC	?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<float,0> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::max_size
PUBLIC	??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
PUBLIC	??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
PUBLIC	?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::max_size
PUBLIC	?_Destroy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@M$0A@@glm@@0@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Destroy
PUBLIC	?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Xlength
PUBLIC	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first
PUBLIC	??0?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEAA@PEBU?$tvec2@M$0A@@glm@@0@Z ; std::initializer_list<glm::tvec2<float,0> >::initializer_list<glm::tvec2<float,0> >
PUBLIC	?begin@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ ; std::initializer_list<glm::tvec2<float,0> >::begin
PUBLIC	?end@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ ; std::initializer_list<glm::tvec2<float,0> >::end
PUBLIC	?length@?$tvec2@N$0A@@glm@@SAHXZ		; glm::tvec2<double,0>::length
PUBLIC	??0?$tvec2@N$0A@@glm@@QEAA@XZ			; glm::tvec2<double,0>::tvec2<double,0>
PUBLIC	??0?$tvec2@N$0A@@glm@@QEAA@N@Z			; glm::tvec2<double,0>::tvec2<double,0>
PUBLIC	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z		; glm::tvec2<double,0>::tvec2<double,0><int,int>
PUBLIC	??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec2<double,0> >::allocator<glm::tvec2<double,0> >
PUBLIC	?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<double,0> >::deallocate
PUBLIC	?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<double,0> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::max_size
PUBLIC	??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
PUBLIC	??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
PUBLIC	?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::max_size
PUBLIC	?_Destroy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@N$0A@@glm@@0@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Destroy
PUBLIC	?_Buy_raw@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Xlength
PUBLIC	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first
PUBLIC	??0?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEAA@PEBU?$tvec2@N$0A@@glm@@0@Z ; std::initializer_list<glm::tvec2<double,0> >::initializer_list<glm::tvec2<double,0> >
PUBLIC	?begin@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ ; std::initializer_list<glm::tvec2<double,0> >::begin
PUBLIC	?end@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ ; std::initializer_list<glm::tvec2<double,0> >::end
PUBLIC	??$?0MN@?$tvec2@M$0A@@glm@@QEAA@MN@Z		; glm::tvec2<float,0>::tvec2<float,0><float,double>
PUBLIC	??$?0N$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@N$0A@@1@@Z ; glm::tvec2<float,0>::tvec2<float,0><double,0>
PUBLIC	?length@?$tvec2@H$0A@@glm@@SAHXZ		; glm::tvec2<int,0>::length
PUBLIC	??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z		; glm::tvec2<int,0>::operator[]
PUBLIC	??0?$tvec2@H$0A@@glm@@QEAA@H@Z			; glm::tvec2<int,0>::tvec2<int,0>
PUBLIC	??E?$tvec2@H$0A@@glm@@QEAAAEAU01@XZ		; glm::tvec2<int,0>::operator++
PUBLIC	??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z		; glm::tvec2<int,0>::operator++
PUBLIC	??$?0H$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z ; glm::tvec2<float,0>::tvec2<float,0><int,0>
PUBLIC	?test_vec2_size@@YAHXZ				; test_vec2_size
PUBLIC	?test_operator_increment@@YAHXZ			; test_operator_increment
PUBLIC	??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec2>
PUBLIC	?length@?$tvec2@_N$0A@@glm@@SAHXZ		; glm::tvec2<bool,0>::length
PUBLIC	??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z		; glm::tvec2<bool,0>::operator[]
PUBLIC	??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z		; glm::tvec2<bool,0>::operator[]
PUBLIC	??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z		; glm::tvec2<bool,0>::tvec2<bool,0>
PUBLIC	??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z ; glm::all<0,glm::tvec2>
PUBLIC	main
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<double,0> >
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1><std::allocator<glm::tvec2<double,0> > const &>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Range_construct_or_tidy<glm::tvec2<double,0> const *>
PUBLIC	??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<float,0> >
PUBLIC	??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1><std::allocator<glm::tvec2<float,0> > const &>
PUBLIC	??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Range_construct_or_tidy<glm::tvec2<float,0> const *>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<double,0> > >
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<float,0> > >
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec2<double,0> > const &>
PUBLIC	??$distance@PEBU?$tvec2@N$0A@@glm@@@std@@YA_JPEBU?$tvec2@N$0A@@glm@@0@Z ; std::distance<glm::tvec2<double,0> const *>
PUBLIC	??1?$_Tidy_guard@V?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > > >
PUBLIC	??$_Ucopy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@N$0A@@glm@@PEBU23@0PEAU23@@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Ucopy<glm::tvec2<double,0> const *>
PUBLIC	??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec2<float,0> > const &>
PUBLIC	??$distance@PEBU?$tvec2@M$0A@@glm@@@std@@YA_JPEBU?$tvec2@M$0A@@glm@@0@Z ; std::distance<glm::tvec2<float,0> const *>
PUBLIC	??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >
PUBLIC	??$_Ucopy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@M$0A@@glm@@PEBU23@0PEAU23@@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Ucopy<glm::tvec2<float,0> const *>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Uninitialized_copy<glm::tvec2<double,0> const *,std::allocator<glm::tvec2<double,0> > >
PUBLIC	??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ; std::_Uninitialized_copy<glm::tvec2<float,0> const *,std::allocator<glm::tvec2<float,0> > >
PUBLIC	??$_Get_unwrapped@AEBQEBU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec2<double,0> const * const &>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Release
PUBLIC	??$_Emplace_back@AEBU?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@N$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Emplace_back<glm::tvec2<double,0> const &>
PUBLIC	??$_Get_unwrapped@AEBQEBU?$tvec2@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@M$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec2<float,0> const * const &>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Release
PUBLIC	??$_Emplace_back@AEBU?$tvec2@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@M$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Emplace_back<glm::tvec2<float,0> const &>
PUBLIC	??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec2<double,0> >
PUBLIC	??$forward@AEBU?$tvec2@N$0A@@glm@@@std@@YAAEBU?$tvec2@N$0A@@glm@@AEBU12@@Z ; std::forward<glm::tvec2<double,0> const &>
PUBLIC	??$construct@U?$tvec2@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@AEBU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::construct<glm::tvec2<double,0>,glm::tvec2<double,0> const &>
PUBLIC	??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec2<float,0> >
PUBLIC	??$forward@AEBU?$tvec2@M$0A@@glm@@@std@@YAAEBU?$tvec2@M$0A@@glm@@AEBU12@@Z ; std::forward<glm::tvec2<float,0> const &>
PUBLIC	??$construct@U?$tvec2@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@AEBU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::construct<glm::tvec2<float,0>,glm::tvec2<float,0> const &>
PUBLIC	??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec2<double,0> *>
PUBLIC	??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec2<float,0> *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@KDIDHNIL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@FOAKNOEL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_1KE@MOONLNIK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fd999999999999a
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff4000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4004000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@40400000
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@bf800000
PUBLIC	__real@c0000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__wassert:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
_BSS	SEGMENT
?v1@@3U?$tvec2@M$0A@@glm@@A DQ 01H DUP (?)		; v1
?v2@@3U?$tvec2@M$0A@@glm@@A DQ 01H DUP (?)		; v2
?v3@@3U?$tvec2@M$0A@@glm@@A DQ 01H DUP (?)		; v3
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+58
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+404
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+94
	DD	imagerel $unwind$?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??E?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??F?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??F?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Ev1@@YAXXZ DD imagerel ??__Ev1@@YAXXZ
	DD	imagerel ??__Ev1@@YAXXZ+24
	DD	imagerel $unwind$??__Ev1@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Ev2@@YAXXZ DD imagerel ??__Ev2@@YAXXZ
	DD	imagerel ??__Ev2@@YAXXZ+32
	DD	imagerel $unwind$??__Ev2@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Ev3@@YAXXZ DD imagerel ??__Ev3@@YAXXZ
	DD	imagerel ??__Ev3@@YAXXZ+35
	DD	imagerel $unwind$??__Ev3@@YAXXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?test_vec2_operators@@YAHXZ DD imagerel $LN87
	DD	imagerel $LN87+5390
	DD	imagerel $unwind$?test_vec2_operators@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?9M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z DD imagerel $LN5
	DD	imagerel $LN5+85
	DD	imagerel $unwind$??$?9M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z DD imagerel $LN5
	DD	imagerel $LN5+85
	DD	imagerel $unwind$??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HN@?$tvec2@M$0A@@glm@@QEAA@HN@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??$?0HN@?$tvec2@M$0A@@glm@@QEAA@HN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0NN@?$tvec2@M$0A@@glm@@QEAA@NN@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$?0NN@?$tvec2@M$0A@@glm@@QEAA@NN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_vec2_ctor@@YAHXZ DD imagerel $LN7
	DD	imagerel $LN7+760
	DD	imagerel $unwind$?test_vec2_ctor@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+260
	DD	imagerel $unwind$??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@M$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Destroy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@M$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+213
	DD	imagerel $unwind$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEAA@PEBU?$tvec2@M$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEAA@PEBU?$tvec2@M$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?begin@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?end@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$tvec2@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@N$0A@@glm@@QEAA@N@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$tvec2@N$0A@@glm@@QEAA@N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+260
	DD	imagerel $unwind$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@N$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Destroy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+152
	DD	imagerel $unwind$?_Buy_raw@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+213
	DD	imagerel $unwind$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEAA@PEBU?$tvec2@N$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEAA@PEBU?$tvec2@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?begin@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?end@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0MN@?$tvec2@M$0A@@glm@@QEAA@MN@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$?0MN@?$tvec2@M$0A@@glm@@QEAA@MN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0N$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@N$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$?0N$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@N$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@H$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@H$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@H$0A@@glm@@QEAA@H@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??0?$tvec2@H$0A@@glm@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$tvec2@H$0A@@glm@@QEAAAEAU01@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??E?$tvec2@H$0A@@glm@@QEAAAEAU01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0H$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$?0H$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_vec2_size@@YAHXZ DD imagerel $LN11
	DD	imagerel $LN11+252
	DD	imagerel $unwind$?test_vec2_size@@YAHXZ
$pdata$?test_operator_increment@@YAHXZ DD imagerel $LN15
	DD	imagerel $LN15+668
	DD	imagerel $unwind$?test_operator_increment@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+265
	DD	imagerel $unwind$??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@_N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@_N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN4
	DD	imagerel $LN4+176
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+196
	DD	imagerel $unwind$??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA DD imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+196
	DD	imagerel $unwind$??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA DD imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@PEBU?$tvec2@N$0A@@glm@@@std@@YA_JPEBU?$tvec2@N$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??$distance@PEBU?$tvec2@N$0A@@glm@@@std@@YA_JPEBU?$tvec2@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+40
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@N$0A@@glm@@PEBU23@0PEAU23@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??$_Ucopy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@N$0A@@glm@@PEBU23@0PEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@PEBU?$tvec2@M$0A@@glm@@@std@@YA_JPEBU?$tvec2@M$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??$distance@PEBU?$tvec2@M$0A@@glm@@@std@@YA_JPEBU?$tvec2@M$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+40
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@M$0A@@glm@@PEBU23@0PEAU23@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??$_Ucopy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@M$0A@@glm@@PEBU23@0PEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+259
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+67
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+206
	DD	imagerel $unwind$??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+206
	DD	imagerel $unwind$??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEBU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEBU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEBU?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@AEBU?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEBU?$tvec2@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEBU?$tvec2@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEBU?$tvec2@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@AEBU?$tvec2@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBU?$tvec2@N$0A@@glm@@@std@@YAAEBU?$tvec2@N$0A@@glm@@AEBU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBU?$tvec2@N$0A@@glm@@@std@@YAAEBU?$tvec2@N$0A@@glm@@AEBU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec2@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@AEBU34@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$construct@U?$tvec2@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@AEBU34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBU?$tvec2@M$0A@@glm@@@std@@YAAEBU?$tvec2@M$0A@@glm@@AEBU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBU?$tvec2@M$0A@@glm@@@std@@YAAEBU?$tvec2@M$0A@@glm@@AEBU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec2@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@AEBU34@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$construct@U?$tvec2@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@AEBU34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z
pdata	ENDS
CRT$XCU	SEGMENT
?v1$initializer$@@3P6AXXZEA DQ FLAT:??__Ev1@@YAXXZ	; v1$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4004000000000000
CONST	SEGMENT
__real@4004000000000000 DQ 04004000000000000r	; 2.5
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff4000000000000
CONST	SEGMENT
__real@3ff4000000000000 DQ 03ff4000000000000r	; 1.25
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd999999999999a
CONST	SEGMENT
__real@3fd999999999999a DQ 03fd999999999999ar	; 0.4
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
CONST	SEGMENT
??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ DB 'i'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'i', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, 't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '('
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, '2', 00H, '.', 00H, 'i'
	DB	00H, 'n', 00H, 'l', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
CONST	SEGMENT
??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@ DB 'x'
	DB	00H, '.', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H
	DB	'h', 00H, '(', 00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'y', 00H, '.', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H
	DB	't', 00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1KE@MOONLNIK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1KE@MOONLNIK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 'f', 00H, 'u', 00H, 'n', 00H, 'c', 00H
	DB	'_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '_', 00H, 'r', 00H, 'e', 00H, 'l', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'i'
	DB	00H, 'n', 00H, 'l', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@FOAKNOEL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@FOAKNOEL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '9', 00H, '.', 00H, '3', 00H, '0', 00H, '0', 00H
	DB	'3', 00H, '7', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@KDIDHNIL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@KDIDHNIL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30037\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec2@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@AEBU34@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBU?$tvec2@M$0A@@glm@@@std@@YAAEBU?$tvec2@M$0A@@glm@@AEBU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec2@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@AEBU34@@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBU?$tvec2@N$0A@@glm@@@std@@YAAEBU?$tvec2@N$0A@@glm@@AEBU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEBU?$tvec2@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@M$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEBU?$tvec2@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@M$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEBU?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@N$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEBU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d0H
	DB	02H
	DB	'x'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_copy<glm::tvec2<float,0> const *,std::allocator<glm::tvec2<float,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_copy<glm::tvec2<float,0> const *,std::allocator<glm::tvec2<float,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_copy<glm::tvec2<float,0> const *,std::allocator<glm::tvec2<float,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d0H
	DB	02H
	DB	'x'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_copy<glm::tvec2<double,0> const *,std::allocator<glm::tvec2<double,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_copy<glm::tvec2<double,0> const *,std::allocator<glm::tvec2<double,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_copy<glm::tvec2<double,0> const *,std::allocator<glm::tvec2<double,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 020a01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@M$0A@@glm@@PEBU23@0PEAU23@@Z DD 021901H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@PEBU?$tvec2@M$0A@@glm@@@std@@YA_JPEBU?$tvec2@M$0A@@glm@@0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@N$0A@@glm@@PEBU23@0PEAU23@@Z DD 021901H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@PEBU?$tvec2@N$0A@@glm@@@std@@YA_JPEBU?$tvec2@N$0A@@glm@@0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 020f19H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 020f19H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d8H
	DB	02H
	DB	'r'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z
	DD	imagerel $ip2state$??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z DD 022f11H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z$rtcName$0 DB 05fH ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Range_construct_or_tidy<glm::tvec2<float,0> const *>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+9
??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z$rtcVarDesc DD 038H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Range_construct_or_tidy<glm::tvec2<float,0> const *>
	DD	08H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z$rtcName$0
	ORG $+48
??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z$rtcFrameData DD 01H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Range_construct_or_tidy<glm::tvec2<float,0> const *>
	DD	00H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD 021301H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d8H
	DB	02H
	DB	'r'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z
	DD	imagerel $ip2state$??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z DD 022f11H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z$rtcName$0 DB 05fH ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Range_construct_or_tidy<glm::tvec2<double,0> const *>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+9
??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z$rtcVarDesc DD 038H ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Range_construct_or_tidy<glm::tvec2<double,0> const *>
	DD	08H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z$rtcName$0
	ORG $+48
??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z$rtcFrameData DD 01H ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Range_construct_or_tidy<glm::tvec2<double,0> const *>
	DD	00H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DD 021301H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@_N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z$rtcName$0 DB 052H ; glm::equal<int,0,glm::tvec2>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::equal<int,0,glm::tvec2>
	DD	02H
	DQ	FLAT:??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z$rtcName$0
	ORG $+48
??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z$rtcFrameData DD 01H ; glm::equal<int,0,glm::tvec2>
	DD	00H
	DQ	FLAT:??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0H$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z DD 022a01H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z$rtcName$0 DB 052H	; glm::tvec2<int,0>::operator++
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z$rtcVarDesc DD 028H	; glm::tvec2<int,0>::operator++
	DD	08H
	DQ	FLAT:??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z$rtcName$0
	ORG $+48
??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z$rtcFrameData DD 01H	; glm::tvec2<int,0>::operator++
	DD	00H
	DQ	FLAT:??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$tvec2@H$0A@@glm@@QEAAAEAU01@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@H$0A@@glm@@QEAA@H@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@H$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0N$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@N$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0MN@?$tvec2@M$0A@@glm@@QEAA@MN@Z DD 011201H
	DD	07012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEAA@PEBU?$tvec2@N$0A@@glm@@0@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@N$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'1', 02H
	DB	02H
	DB	090H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
	DD	imagerel $ip2state$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DD 023011H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z$rtcName$0 DB 024H ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
	DB	053H
	DB	032H
	DB	00H
??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z$rtcName$1 DB 05fH ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+5
??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z$rtcVarDesc DD 058H ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
	DD	010H
	DQ	FLAT:??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z$rtcName$0
	ORG $+96
??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z$rtcFrameData DD 02H ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
	DD	00H
	DQ	FLAT:??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@N$0A@@glm@@QEAA@N@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@N$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEAA@PEBU?$tvec2@M$0A@@glm@@0@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@M$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
	DB	053H
	DB	033H
	DB	00H
	ORG $+12
??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'1', 02H
	DB	02H
	DB	090H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
	DD	imagerel $ip2state$??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD 023011H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z$rtcName$0 DB 024H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
	DB	053H
	DB	034H
	DB	00H
??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z$rtcName$1 DB 05fH ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+5
??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z$rtcVarDesc DD 058H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
	DD	010H
	DQ	FLAT:??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z$rtcName$0
	ORG $+96
??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z$rtcFrameData DD 02H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
	DD	00H
	DQ	FLAT:??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
voltbl	SEGMENT
_volmd	DDSymXIndex: 	FLAT:?test_vec2_ctor@@YAHXZ
	DD	025H
	DD	02deH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0NN@?$tvec2@M$0A@@glm@@QEAA@NN@Z DD 011201H
	DD	07012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z DD 021501H
	DD	070113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z DD 021501H
	DD	070113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z DD 021501H
	DD	070113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z DD 021501H
	DD	070113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z DD 021501H
	DD	070113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HN@?$tvec2@M$0A@@glm@@QEAA@HN@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z DD 021501H
	DD	070113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z DD 021501H
	DD	070113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z DD 021501H
	DD	070113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?9M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
xdata	SEGMENT
$unwind$?test_vec2_operators@@YAHXZ DD 031a01H
	DD	0fe0109H
	DD	07002H
$unwind$?test_vec2_ctor@@YAHXZ DD 042d19H
	DD	059010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	02b8H
$unwind$?test_vec2_size@@YAHXZ DD 020601H
	DD	070029206H
$unwind$?test_operator_increment@@YAHXZ DD 031a01H
	DD	0200109H
	DD	07002H
$unwind$main DD	021701H
	DD	070029206H
xdata	ENDS
CONST	SEGMENT
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$0 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$1 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$2 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$3 DB 043H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$4 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$5 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$6 DB 043H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$7 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$8 DB 043H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$9 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$10 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$11 DB 043H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$12 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$13 DB 043H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$14 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$15 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$16 DB 043H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$17 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$18 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$19 DB 043H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$20 DB 044H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$21 DB 045H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$22 DB 046H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$23 DB 047H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$24 DB 048H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$25 DB 049H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$26 DB 04aH		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$27 DB 04bH		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$28 DB 04cH		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$29 DB 04dH		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$30 DB 04eH		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$31 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$32 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$33 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$34 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$35 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$36 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$37 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$38 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$39 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$40 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$41 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$42 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$43 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$44 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$45 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$46 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$47 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$48 DB 041H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcName$49 DB 042H		; test_vec2_operators
	DB	00H
	ORG $+2
?test_vec2_operators@@YAHXZ$rtcFrameData DD 032H	; test_vec2_operators
	DD	00H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcVarDesc
?test_vec2_ctor@@YAHXZ$rtcName$0 DB 041H		; test_vec2_ctor
	DB	00H
	ORG $+6
?test_vec2_operators@@YAHXZ$rtcVarDesc DD 0658H		; test_vec2_operators
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$49
	DD	0638H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$48
	DD	0618H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$47
	DD	05f8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$46
	DD	05d8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$45
	DD	05b8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$44
	DD	0598H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$43
	DD	0578H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$42
	DD	0558H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$41
	DD	0538H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$40
	DD	0518H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$39
	DD	04f8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$38
	DD	04d8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$37
	DD	04b8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$36
	DD	0498H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$35
	DD	0478H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$34
	DD	0458H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$33
	DD	0438H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$32
	DD	0418H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$31
	DD	03f8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$30
	DD	03d8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$29
	DD	03b8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$28
	DD	0398H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$27
	DD	0378H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$26
	DD	0358H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$25
	DD	0338H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$24
	DD	0318H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$23
	DD	02f8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$22
	DD	02d8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$21
	DD	02b8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$20
	DD	0298H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$19
	DD	0278H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$18
	DD	0258H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$17
	DD	0238H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$16
	DD	0218H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$15
	DD	01f8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$14
	DD	01d8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$13
	DD	01b8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$12
	DD	0198H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$11
	DD	0178H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$10
	DD	0158H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$9
	DD	0138H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$8
	DD	0118H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$7
	DD	0f8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$6
	DD	0d8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$5
	DD	0b8H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$4
	DD	098H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$3
	DD	078H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$2
	DD	058H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:?test_vec2_operators@@YAHXZ$rtcName$0
	ORG $+2400
?test_vec2_ctor@@YAHXZ$rtcName$1 DB 042H		; test_vec2_ctor
	DB	00H
	ORG $+2
?test_vec2_ctor@@YAHXZ$rtcName$2 DB 061H		; test_vec2_ctor
	DB	00H
	ORG $+2
?test_vec2_ctor@@YAHXZ$rtcName$3 DB 076H		; test_vec2_ctor
	DB	00H
	ORG $+2
?test_vec2_ctor@@YAHXZ$rtcName$4 DB 061H		; test_vec2_ctor
	DB	00H
	ORG $+2
?test_vec2_ctor@@YAHXZ$rtcName$5 DB 076H		; test_vec2_ctor
	DB	00H
	ORG $+2
?test_vec2_ctor@@YAHXZ$rtcName$6 DB 041H		; test_vec2_ctor
	DB	00H
	ORG $+2
?test_vec2_ctor@@YAHXZ$rtcName$7 DB 042H		; test_vec2_ctor
	DB	00H
	ORG $+2
?test_vec2_ctor@@YAHXZ$rtcName$8 DB 043H		; test_vec2_ctor
	DB	00H
	ORG $+2
?test_vec2_ctor@@YAHXZ$rtcName$9 DB 045H		; test_vec2_ctor
	DB	00H
	ORG $+2
?test_vec2_ctor@@YAHXZ$rtcName$10 DB 046H		; test_vec2_ctor
	DB	00H
	ORG $+2
?test_vec2_ctor@@YAHXZ$rtcFrameData DD 0bH		; test_vec2_ctor
	DD	00H
	DQ	FLAT:?test_vec2_ctor@@YAHXZ$rtcVarDesc
?test_operator_increment@@YAHXZ$rtcName$0 DB 076H	; test_operator_increment
	DB	030H
	DB	00H
	ORG $+5
?test_vec2_ctor@@YAHXZ$rtcVarDesc DD 0218H		; test_vec2_ctor
	DD	08H
	DQ	FLAT:?test_vec2_ctor@@YAHXZ$rtcName$10
	DD	01f8H
	DD	08H
	DQ	FLAT:?test_vec2_ctor@@YAHXZ$rtcName$9
	DD	01d8H
	DD	08H
	DQ	FLAT:?test_vec2_ctor@@YAHXZ$rtcName$8
	DD	01b8H
	DD	08H
	DQ	FLAT:?test_vec2_ctor@@YAHXZ$rtcName$7
	DD	0198H
	DD	08H
	DQ	FLAT:?test_vec2_ctor@@YAHXZ$rtcName$6
	DD	0128H
	DD	020H
	DQ	FLAT:?test_vec2_ctor@@YAHXZ$rtcName$5
	DD	0f8H
	DD	010H
	DQ	FLAT:?test_vec2_ctor@@YAHXZ$rtcName$4
	DD	098H
	DD	020H
	DQ	FLAT:?test_vec2_ctor@@YAHXZ$rtcName$3
	DD	078H
	DD	08H
	DQ	FLAT:?test_vec2_ctor@@YAHXZ$rtcName$2
	DD	058H
	DD	08H
	DQ	FLAT:?test_vec2_ctor@@YAHXZ$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:?test_vec2_ctor@@YAHXZ$rtcName$0
	ORG $+528
?test_operator_increment@@YAHXZ$rtcName$1 DB 076H	; test_operator_increment
	DB	031H
	DB	00H
	ORG $+1
?test_operator_increment@@YAHXZ$rtcName$2 DB 076H	; test_operator_increment
	DB	032H
	DB	00H
	ORG $+1
?test_operator_increment@@YAHXZ$rtcName$3 DB 076H	; test_operator_increment
	DB	033H
	DB	00H
	ORG $+1
?test_operator_increment@@YAHXZ$rtcName$4 DB 076H	; test_operator_increment
	DB	034H
	DB	00H
	ORG $+1
?test_operator_increment@@YAHXZ$rtcVarDesc DD 0b8H	; test_operator_increment
	DD	08H
	DQ	FLAT:?test_operator_increment@@YAHXZ$rtcName$4
	DD	098H
	DD	08H
	DQ	FLAT:?test_operator_increment@@YAHXZ$rtcName$3
	DD	078H
	DD	08H
	DQ	FLAT:?test_operator_increment@@YAHXZ$rtcName$2
	DD	058H
	DD	08H
	DQ	FLAT:?test_operator_increment@@YAHXZ$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:?test_operator_increment@@YAHXZ$rtcName$0
	ORG $+240
?test_operator_increment@@YAHXZ$rtcFrameData DD 05H	; test_operator_increment
	DD	00H
	DQ	FLAT:?test_operator_increment@@YAHXZ$rtcVarDesc
main$rtcName$0 DB 076H
	DB	00H
	ORG $+6
main$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:main$rtcVarDesc
	ORG $+8
main$rtcVarDesc DD 038H
	DD	08H
	DQ	FLAT:main$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Ev3@@YAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Ev2@@YAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Ev1@@YAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z DD 022a01H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z$rtcName$0 DB 052H	; glm::tvec2<float,0>::operator--
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z$rtcVarDesc DD 028H	; glm::tvec2<float,0>::operator--
	DD	08H
	DQ	FLAT:??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z$rtcName$0
	ORG $+48
??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z$rtcFrameData DD 01H	; glm::tvec2<float,0>::operator--
	DD	00H
	DQ	FLAT:??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z DD 022a01H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z$rtcName$0 DB 052H	; glm::tvec2<float,0>::operator++
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z$rtcVarDesc DD 028H	; glm::tvec2<float,0>::operator++
	DD	08H
	DQ	FLAT:??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z$rtcName$0
	ORG $+48
??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z$rtcFrameData DD 01H	; glm::tvec2<float,0>::operator++
	DD	00H
	DQ	FLAT:??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??F?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z DD 011201H
	DD	07012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ DD 022001H
	DD	07006720aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all_locked
	DD	04H
	DQ	FLAT:?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all_locked
	DD	00H
	DQ	FLAT:?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 020601H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
CRT$XCU	SEGMENT
?v2$initializer$@@3P6AXXZEA DQ FLAT:??__Ev2@@YAXXZ	; v2$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?v3$initializer$@@3P6AXXZEA DQ FLAT:??__Ev3@@YAXXZ	; v3$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z PROC ; std::_Voidify_iter<glm::tvec2<float,0> *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z ENDP ; std::_Voidify_iter<glm::tvec2<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z PROC ; std::_Voidify_iter<glm::tvec2<double,0> *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z ENDP ; std::_Voidify_iter<glm::tvec2<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$construct@U?$tvec2@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@AEBU34@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@U?$tvec2@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@AEBU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::construct<glm::tvec2<float,0>,glm::tvec2<float,0> const &>, COMDAT

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 708  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 709  :         if (_STD is_constant_evaluated()) {
; 710  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 711  :         } else
; 712  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 713  :         {
; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec2<float,0> *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEBU?$tvec2@M$0A@@glm@@@std@@YAAEBU?$tvec2@M$0A@@glm@@AEBU12@@Z ; std::forward<glm::tvec2<float,0> const &>
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rcx], rax

; 715  :         }
; 716  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@U?$tvec2@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@AEBU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::construct<glm::tvec2<float,0>,glm::tvec2<float,0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@AEBU?$tvec2@M$0A@@glm@@@std@@YAAEBU?$tvec2@M$0A@@glm@@AEBU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBU?$tvec2@M$0A@@glm@@@std@@YAAEBU?$tvec2@M$0A@@glm@@AEBU12@@Z PROC ; std::forward<glm::tvec2<float,0> const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@AEBU?$tvec2@M$0A@@glm@@@std@@YAAEBU?$tvec2@M$0A@@glm@@AEBU12@@Z ENDP ; std::forward<glm::tvec2<float,0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z PROC ; std::_Unfancy<glm::tvec2<float,0> >, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 289  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 290  : }

	pop	rdi
	ret	0
??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z ENDP ; std::_Unfancy<glm::tvec2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$construct@U?$tvec2@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@AEBU34@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U?$tvec2@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@AEBU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::construct<glm::tvec2<double,0>,glm::tvec2<double,0> const &>, COMDAT

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 708  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 709  :         if (_STD is_constant_evaluated()) {
; 710  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 711  :         } else
; 712  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 713  :         {
; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec2<double,0> *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEBU?$tvec2@N$0A@@glm@@@std@@YAAEBU?$tvec2@N$0A@@glm@@AEBU12@@Z ; std::forward<glm::tvec2<double,0> const &>
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 715  :         }
; 716  :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$construct@U?$tvec2@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@AEBU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::construct<glm::tvec2<double,0>,glm::tvec2<double,0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@AEBU?$tvec2@N$0A@@glm@@@std@@YAAEBU?$tvec2@N$0A@@glm@@AEBU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBU?$tvec2@N$0A@@glm@@@std@@YAAEBU?$tvec2@N$0A@@glm@@AEBU12@@Z PROC ; std::forward<glm::tvec2<double,0> const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@AEBU?$tvec2@N$0A@@glm@@@std@@YAAEBU?$tvec2@N$0A@@glm@@AEBU12@@Z ENDP ; std::forward<glm::tvec2<double,0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z PROC ; std::_Unfancy<glm::tvec2<double,0> >, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 289  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 290  : }

	pop	rdi
	ret	0
??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z ENDP ; std::_Unfancy<glm::tvec2<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Emplace_back@AEBU?$tvec2@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@M$0A@@glm@@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@AEBU?$tvec2@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@M$0A@@glm@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Emplace_back<glm::tvec2<float,0> const &>, COMDAT

; 1610 :     _CONSTEXPR20_DYNALLOC void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1611 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@AEBU?$tvec2@M$0A@@glm@@@std@@YAAEBU?$tvec2@M$0A@@glm@@AEBU12@@Z ; std::forward<glm::tvec2<float,0> const &>
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec2<float,0> >
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec2@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@AEBU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::construct<glm::tvec2<float,0>,glm::tvec2<float,0> const &>

; 1612 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 8
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1613 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@AEBU?$tvec2@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@M$0A@@glm@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Emplace_back<glm::tvec2<float,0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Release, COMDAT

; 1615 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1616 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1617 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1618 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >, COMDAT

; 1605 :     _CONSTEXPR20_DYNALLOC ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1606 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<float,0> > >

; 1607 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >, COMDAT

; 1600 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEBU?$tvec2@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@M$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEBU?$tvec2@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@M$0A@@glm@@@Z PROC ; std::_Get_unwrapped<glm::tvec2<float,0> const * const &>, COMDAT

; 1324 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1325 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1326 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1327 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1328 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1329 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1330 :     } else {
; 1331 :         return static_cast<_Iter&&>(_It);
; 1332 :     }
; 1333 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEBU?$tvec2@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@M$0A@@glm@@@Z ENDP ; std::_Get_unwrapped<glm::tvec2<float,0> const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Emplace_back@AEBU?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@N$0A@@glm@@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@AEBU?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@N$0A@@glm@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Emplace_back<glm::tvec2<double,0> const &>, COMDAT

; 1610 :     _CONSTEXPR20_DYNALLOC void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1611 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@AEBU?$tvec2@N$0A@@glm@@@std@@YAAEBU?$tvec2@N$0A@@glm@@AEBU12@@Z ; std::forward<glm::tvec2<double,0> const &>
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec2<double,0> >
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec2@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@AEBU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::construct<glm::tvec2<double,0>,glm::tvec2<double,0> const &>

; 1612 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1613 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@AEBU?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@N$0A@@glm@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Emplace_back<glm::tvec2<double,0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Release, COMDAT

; 1615 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1616 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1617 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1618 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >, COMDAT

; 1605 :     _CONSTEXPR20_DYNALLOC ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1606 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<double,0> > >

; 1607 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >, COMDAT

; 1600 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEBU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@N$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEBU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@N$0A@@glm@@@Z PROC ; std::_Get_unwrapped<glm::tvec2<double,0> const * const &>, COMDAT

; 1324 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1325 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1326 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1327 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1328 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1329 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1330 :     } else {
; 1331 :         return static_cast<_Iter&&>(_It);
; 1332 :     }
; 1333 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEBU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@N$0A@@glm@@@Z ENDP ; std::_Get_unwrapped<glm::tvec2<double,0> const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_copy<glm::tvec2<float,0> const *,std::allocator<glm::tvec2<float,0> > >, COMDAT

; 1629 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1630 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1631 :     // note: only called internally from elsewhere in the STL
; 1632 :     using _Ptrval = typename _Alloc::value_type*;
; 1633 : 
; 1634 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEBU?$tvec2@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@M$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec2<float,0> const * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1635 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEBU?$tvec2@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@M$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec2<float,0> const * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1636 : 
; 1637 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1638 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1639 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1640 :         if (!_STD is_constant_evaluated())
; 1641 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1642 :         {
; 1643 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1644 :             _Dest += _ULast - _UFirst;
; 1645 :             return _Dest;
; 1646 :         }
; 1647 :     }
; 1648 : 
; 1649 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
	npad	1

; 1650 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 8
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1651 :         _Backout._Emplace_back(*_UFirst);

	mov	rdx, QWORD PTR _UFirst$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@AEBU?$tvec2@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@M$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Emplace_back<glm::tvec2<float,0> const &>

; 1652 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1653 : 
; 1654 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
	mov	rax, QWORD PTR $T4[rsp]

; 1655 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_copy<glm::tvec2<float,0> const *,std::allocator<glm::tvec2<float,0> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<glm::tvec2<float,0> const *,std::allocator<glm::tvec2<float,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<glm::tvec2<float,0> const *,std::allocator<glm::tvec2<float,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<glm::tvec2<float,0> const *,std::allocator<glm::tvec2<float,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<glm::tvec2<float,0> const *,std::allocator<glm::tvec2<float,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_copy<glm::tvec2<double,0> const *,std::allocator<glm::tvec2<double,0> > >, COMDAT

; 1629 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1630 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1631 :     // note: only called internally from elsewhere in the STL
; 1632 :     using _Ptrval = typename _Alloc::value_type*;
; 1633 : 
; 1634 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEBU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec2<double,0> const * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1635 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEBU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec2@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec2<double,0> const * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1636 : 
; 1637 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1638 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1639 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1640 :         if (!_STD is_constant_evaluated())
; 1641 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1642 :         {
; 1643 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1644 :             _Dest += _ULast - _UFirst;
; 1645 :             return _Dest;
; 1646 :         }
; 1647 :     }
; 1648 : 
; 1649 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
	npad	1

; 1650 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 16
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1651 :         _Backout._Emplace_back(*_UFirst);

	mov	rdx, QWORD PTR _UFirst$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@AEBU?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec2@N$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Emplace_back<glm::tvec2<double,0> const &>

; 1652 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1653 : 
; 1654 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
	mov	rax, QWORD PTR $T4[rsp]

; 1655 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_copy<glm::tvec2<double,0> const *,std::allocator<glm::tvec2<double,0> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<glm::tvec2<double,0> const *,std::allocator<glm::tvec2<double,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<glm::tvec2<double,0> const *,std::allocator<glm::tvec2<double,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<glm::tvec2<double,0> const *,std::allocator<glm::tvec2<double,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<glm::tvec2<double,0> const *,std::allocator<glm::tvec2<double,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 693  :     static _CONSTEXPR20_DYNALLOC void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 694  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 695  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 696  :         if (_STD is_constant_evaluated()) {
; 697  :             _Al.deallocate(_Ptr, _Count);
; 698  :         } else
; 699  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 700  :         {
; 701  :             (void) _Al;
; 702  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 703  :         }
; 704  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 59   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 60   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 61   : 
; 62   :     if constexpr (_Overflow_is_possible) {
; 63   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 64   :         if (_Count > _Max_possible) {

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

	mov	rax, QWORD PTR _Count$[rsp]
	shl	rax, 3
$LN3@Get_size_o:

; 70   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT

; 66   :     const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 67   :     // return smaller of _Left and _Right
; 68   :     return _Right < _Left ? _Right : _Left;

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@min
	mov	rax, QWORD PTR _Right$[rsp]
	mov	QWORD PTR tv65[rsp], rax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	rax, QWORD PTR _Left$[rsp]
	mov	QWORD PTR tv65[rsp], rax
$LN4@min:
	mov	rax, QWORD PTR tv65[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]

; 69   : }

	add	rsp, 16
	pop	rdi
	ret	0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 134  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 135  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	rax, QWORD PTR _Bytes$[rsp]
	add	rax, 47					; 0000002fH
	mov	QWORD PTR _Block_size$[rsp], rax

; 137  :     if (_Block_size <= _Bytes) {

	mov	rax, QWORD PTR _Bytes$[rsp]
	cmp	QWORD PTR _Block_size$[rsp], rax
	ja	SHORT $LN8@Allocate_m

; 138  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	rcx, QWORD PTR _Block_size$[rsp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	mov	QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	QWORD PTR _Ptr_container$[rsp], 0
	je	SHORT $LN9@Allocate_m
	jmp	SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
	lea	rax, OFFSET FLAT:$SG21827
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG21828
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 142				; 0000008eH
	lea	rdx, OFFSET FLAT:$SG21829
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
	xor	eax, eax
$LN12@Allocate_m:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 142				; 0000008eH
	lea	r8, OFFSET FLAT:$SG21830
	lea	rdx, OFFSET FLAT:$SG21831
	lea	rcx, OFFSET FLAT:$SG21832
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN10@Allocate_m:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@Allocate_m

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	rax, QWORD PTR _Ptr_container$[rsp]
	add	rax, 47					; 0000002fH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR _Ptr$[rsp], rax

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, QWORD PTR _Ptr_container$[rsp]
	mov	QWORD PTR [rcx+rax], rdx

; 145  : 
; 146  : #ifdef _DEBUG
; 147  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	mov	QWORD PTR [rcx+rax], rdx

; 148  : #endif // _DEBUG
; 149  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 150  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z PROC ; std::_Voidify_iter<std::_Container_proxy *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ENDP ; std::_Voidify_iter<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 276  : }

	pop	rdi
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??$_Ucopy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@M$0A@@glm@@PEBU23@0PEAU23@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
??$_Ucopy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@M$0A@@glm@@PEBU23@0PEAU23@@Z PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Ucopy<glm::tvec2<float,0> const *>, COMDAT

; 1652 :     _CONSTEXPR20_CONTAINER pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1653 :         // copy [_First, _Last) to raw _Dest, using allocator
; 1654 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
	mov	r9, rax
	mov	r8, QWORD PTR _Dest$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Uninitialized_copy@PEBU?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ; std::_Uninitialized_copy<glm::tvec2<float,0> const *,std::allocator<glm::tvec2<float,0> > >

; 1655 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Ucopy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@M$0A@@glm@@PEBU23@0PEAU23@@Z ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Ucopy<glm::tvec2<float,0> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >, COMDAT

; 34   :     _CONSTEXPR20_DYNALLOC ~_Tidy_guard() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 35   :         if (_Target) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy_guard

; 36   :             _Target->_Tidy();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Tidy
$LN2@Tidy_guard:

; 37   :         }
; 38   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$distance@PEBU?$tvec2@M$0A@@glm@@@std@@YA_JPEBU?$tvec2@M$0A@@glm@@0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$distance@PEBU?$tvec2@M$0A@@glm@@@std@@YA_JPEBU?$tvec2@M$0A@@glm@@0@Z PROC ; std::distance<glm::tvec2<float,0> const *>, COMDAT

; 1588 : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1589 :     if constexpr (_Is_random_iter_v<_InIt>) {
; 1590 :         return _Last - _First; // assume the iterator will do debug checking

	mov	rax, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR _Last$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 3

; 1591 :     } else {
; 1592 :         _Adl_verify_range(_First, _Last);
; 1593 :         auto _UFirst             = _Get_unwrapped(_First);
; 1594 :         const auto _ULast        = _Get_unwrapped(_Last);
; 1595 :         _Iter_diff_t<_InIt> _Off = 0;
; 1596 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1597 :             ++_Off;
; 1598 :         }
; 1599 : 
; 1600 :         return _Off;
; 1601 :     }
; 1602 : }

	pop	rdi
	ret	0
??$distance@PEBU?$tvec2@M$0A@@glm@@@std@@YA_JPEBU?$tvec2@M$0A@@glm@@0@Z ENDP ; std::distance<glm::tvec2<float,0> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<glm::tvec2<float,0> > const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<glm::tvec2<float,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??$_Ucopy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@N$0A@@glm@@PEBU23@0PEAU23@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
??$_Ucopy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@N$0A@@glm@@PEBU23@0PEAU23@@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Ucopy<glm::tvec2<double,0> const *>, COMDAT

; 1652 :     _CONSTEXPR20_CONTAINER pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1653 :         // copy [_First, _Last) to raw _Dest, using allocator
; 1654 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	r9, rax
	mov	r8, QWORD PTR _Dest$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Uninitialized_copy@PEBU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Uninitialized_copy<glm::tvec2<double,0> const *,std::allocator<glm::tvec2<double,0> > >

; 1655 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Ucopy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@N$0A@@glm@@PEBU23@0PEAU23@@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Ucopy<glm::tvec2<double,0> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > > >, COMDAT

; 34   :     _CONSTEXPR20_DYNALLOC ~_Tidy_guard() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 35   :         if (_Target) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy_guard

; 36   :             _Target->_Tidy();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Tidy
$LN2@Tidy_guard:

; 37   :         }
; 38   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Tidy_guard@V?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$distance@PEBU?$tvec2@N$0A@@glm@@@std@@YA_JPEBU?$tvec2@N$0A@@glm@@0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$distance@PEBU?$tvec2@N$0A@@glm@@@std@@YA_JPEBU?$tvec2@N$0A@@glm@@0@Z PROC ; std::distance<glm::tvec2<double,0> const *>, COMDAT

; 1588 : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1589 :     if constexpr (_Is_random_iter_v<_InIt>) {
; 1590 :         return _Last - _First; // assume the iterator will do debug checking

	mov	rax, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR _Last$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 4

; 1591 :     } else {
; 1592 :         _Adl_verify_range(_First, _Last);
; 1593 :         auto _UFirst             = _Get_unwrapped(_First);
; 1594 :         const auto _ULast        = _Get_unwrapped(_Last);
; 1595 :         _Iter_diff_t<_InIt> _Off = 0;
; 1596 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1597 :             ++_Off;
; 1598 :         }
; 1599 : 
; 1600 :         return _Off;
; 1601 :     }
; 1602 : }

	pop	rdi
	ret	0
??$distance@PEBU?$tvec2@N$0A@@glm@@@std@@YA_JPEBU?$tvec2@N$0A@@glm@@0@Z ENDP ; std::distance<glm::tvec2<double,0> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<glm::tvec2<double,0> > const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<glm::tvec2<double,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 985  : _CONSTEXPR20_DYNALLOC void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 986  :     // deallocate a plain pointer using an allocator
; 987  :     using _Alloc_traits = allocator_traits<_Alloc>;
; 988  :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 989  :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

	mov	r8d, 1
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	npad	1

; 990  :     } else {
; 991  :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 992  :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 993  :     }
; 994  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z PROC ; std::_Destroy_range<std::allocator<glm::tvec2<float,0> > >, COMDAT

; 945  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 946  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 947  :     using _Ty = typename _Alloc::value_type;
; 948  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 949  :         for (; _First != _Last; ++_First) {
; 950  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 951  :         }
; 952  :     }
; 953  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<glm::tvec2<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 251  : _CONSTEXPR20_DYNALLOC void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 252  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 253  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 254  :     if (_STD is_constant_evaluated()) {
; 255  :         ::operator delete(_Ptr);
; 256  :     } else
; 257  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 258  :     {
; 259  : #if defined(_M_IX86) || defined(_M_X64)
; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rsp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 261  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	rdx, QWORD PTR _Bytes$[rsp]
	lea	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
$LN2@Deallocate:

; 262  :         }
; 263  : #endif // defined(_M_IX86) || defined(_M_X64)
; 264  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, QWORD PTR _Bytes$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1

; 265  :     }
; 266  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z PROC ; std::_Destroy_range<std::allocator<glm::tvec2<double,0> > >, COMDAT

; 945  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 946  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 947  :     using _Ty = typename _Alloc::value_type;
; 948  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 949  :         for (; _First != _Last; ++_First) {
; 950  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 951  :         }
; 952  :     }
; 953  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<glm::tvec2<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 230  : __declspec(allocator) _CONSTEXPR20_DYNALLOC void* _Allocate(const size_t _Bytes) {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 231  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 232  : #if defined(_M_IX86) || defined(_M_X64)
; 233  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 234  :     if (!_STD is_constant_evaluated())
; 235  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 236  :     {
; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rsp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

	cmp	QWORD PTR _Bytes$[rsp], 0
	je	SHORT $LN3@Allocate

; 244  :         return _Traits::_Allocate(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 248  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 59   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 60   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 61   : 
; 62   :     if constexpr (_Overflow_is_possible) {
; 63   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 64   :         if (_Count > _Max_possible) {

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 70   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {
; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 155  :     } else
; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Obj$[rsp]
	call	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 159  :     }
; 160  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 276  : }

	pop	rdi
	ret	0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 289  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 290  : }

	pop	rdi
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Range_construct_or_tidy<glm::tvec2<float,0> const *>, COMDAT

; 524  :     _CONSTEXPR20_CONTAINER void _Range_construct_or_tidy(_Iter _First, _Iter _Last, forward_iterator_tag) {

$LN5:
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 525  :         const auto _Count = _Convert_size<size_type>(static_cast<size_t>(_STD distance(_First, _Last)));

	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$distance@PEBU?$tvec2@M$0A@@glm@@@std@@YA_JPEBU?$tvec2@M$0A@@glm@@0@Z ; std::distance<glm::tvec2<float,0> const *>
	mov	rcx, rax
	call	??$_Convert_size@_K@std@@YA_K_K@Z	; std::_Convert_size<unsigned __int64>
	mov	QWORD PTR _Count$[rsp], rax

; 526  :         if (_Count != 0) {

	cmp	QWORD PTR _Count$[rsp], 0
	je	SHORT $LN2@Range_cons

; 527  :             _Buy_nonzero(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_nonzero

; 528  :             _Tidy_guard<vector> _Guard{this};

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _Guard$4[rsp], rax

; 529  :             auto& _My_data   = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$5[rsp], rax

; 530  :             _My_data._Mylast = _Ucopy(_First, _Last, _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$5[rsp]
	mov	r9, QWORD PTR [rax+8]
	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Ucopy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@M$0A@@glm@@PEBU23@0PEAU23@@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Ucopy<glm::tvec2<float,0> const *>
	mov	rcx, QWORD PTR _My_data$5[rsp]
	mov	QWORD PTR [rcx+16], rax

; 531  :             _Guard._Target   = nullptr;

	mov	QWORD PTR _Guard$4[rsp], 0

; 532  :         }

	lea	rcx, QWORD PTR _Guard$4[rsp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >
$LN2@Range_cons:

; 533  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Range_construct_or_tidy<glm::tvec2<float,0> const *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Range_construct_or_tidy<glm::tvec2<float,0> const *>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Guard$4[rbp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Range_construct_or_tidy<glm::tvec2<float,0> const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Range_construct_or_tidy<glm::tvec2<float,0> const *>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Guard$4[rbp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Range_construct_or_tidy<glm::tvec2<float,0> const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1><std::allocator<glm::tvec2<float,0> > const &>, COMDAT

; 1375 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec2<float,0> > const &>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1><std::allocator<glm::tvec2<float,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<float,0> >, COMDAT

; 829  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Range_construct_or_tidy<glm::tvec2<double,0> const *>, COMDAT

; 524  :     _CONSTEXPR20_CONTAINER void _Range_construct_or_tidy(_Iter _First, _Iter _Last, forward_iterator_tag) {

$LN5:
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 525  :         const auto _Count = _Convert_size<size_type>(static_cast<size_t>(_STD distance(_First, _Last)));

	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$distance@PEBU?$tvec2@N$0A@@glm@@@std@@YA_JPEBU?$tvec2@N$0A@@glm@@0@Z ; std::distance<glm::tvec2<double,0> const *>
	mov	rcx, rax
	call	??$_Convert_size@_K@std@@YA_K_K@Z	; std::_Convert_size<unsigned __int64>
	mov	QWORD PTR _Count$[rsp], rax

; 526  :         if (_Count != 0) {

	cmp	QWORD PTR _Count$[rsp], 0
	je	SHORT $LN2@Range_cons

; 527  :             _Buy_nonzero(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_nonzero@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Buy_nonzero

; 528  :             _Tidy_guard<vector> _Guard{this};

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _Guard$4[rsp], rax

; 529  :             auto& _My_data   = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$5[rsp], rax

; 530  :             _My_data._Mylast = _Ucopy(_First, _Last, _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$5[rsp]
	mov	r9, QWORD PTR [rax+8]
	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Ucopy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec2@N$0A@@glm@@PEBU23@0PEAU23@@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Ucopy<glm::tvec2<double,0> const *>
	mov	rcx, QWORD PTR _My_data$5[rsp]
	mov	QWORD PTR [rcx+16], rax

; 531  :             _Guard._Target   = nullptr;

	mov	QWORD PTR _Guard$4[rsp], 0

; 532  :         }

	lea	rcx, QWORD PTR _Guard$4[rsp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > > >
$LN2@Range_cons:

; 533  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Range_construct_or_tidy<glm::tvec2<double,0> const *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Range_construct_or_tidy<glm::tvec2<double,0> const *>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Guard$4[rbp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Range_construct_or_tidy<glm::tvec2<double,0> const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Range_construct_or_tidy<glm::tvec2<double,0> const *>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Guard$4[rbp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Range_construct_or_tidy<glm::tvec2<double,0> const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1333 :     _CONSTEXPR20_CONTAINER ~_Container_proxy_ptr12() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1334 :         if (_Ptr) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Container_

; 1335 :             _Delete_plain_internal(_Al, _Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1336 :         }
; 1337 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1319 :     _CONSTEXPR20_CONTAINER _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont) : _Al(_Al_) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 1320 :         // create a new _Container_proxy pointing at _Mycont
; 1321 :         _Ptr = _Unfancy(_Al_.allocate(1));

	mov	edx, 1
	mov	rcx, QWORD PTR _Al_$[rsp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 1322 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

	mov	rcx, QWORD PTR _Mycont$[rsp]
	call	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1323 :         _Mycont._Myproxy = _Ptr;

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 1324 :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1><std::allocator<glm::tvec2<double,0> > const &>, COMDAT

; 1375 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec2<double,0> > const &>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1><std::allocator<glm::tvec2<double,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 998  : _CONSTEXPR20_DYNALLOC void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 999  :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1000 :     using _Ty = typename _Alloc::value_type;
; 1001 :     _Ptr->~_Ty();
; 1002 :     _Deallocate_plain(_Al, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1003 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 614  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 615  :     // assign _New_val to _Val, return previous _Val
; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Old_val$[rsp], rax

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rcx, QWORD PTR _New_val$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 618  :     return _Old_val;

	mov	rax, QWORD PTR _Old_val$[rsp]

; 619  : }

	add	rsp, 16
	pop	rdi
	ret	0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<double,0> >, COMDAT

; 829  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 840  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\core\core_type_vec2.cpp
_TEXT	SEGMENT
Error$ = 32
v$ = 56
main	PROC

; 306  : {

$LN4:
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 307  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 308  : 
; 309  : 	glm::vec2 v;

	lea	rcx, QWORD PTR v$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@XZ		; glm::tvec2<float,0>::tvec2<float,0>

; 310  : 	assert(v.length() == 2);

	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	cmp	eax, 2
	je	SHORT $LN3@main
	mov	r8d, 310				; 00000136H
	lea	rdx, OFFSET FLAT:$SG20685
	lea	rcx, OFFSET FLAT:$SG20686
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@main:

; 311  : 
; 312  : 	Error += test_vec2_size();

	call	?test_vec2_size@@YAHXZ			; test_vec2_size
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 313  : 	Error += test_vec2_ctor();

	call	?test_vec2_ctor@@YAHXZ			; test_vec2_ctor
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 314  : 	Error += test_vec2_operators();

	call	?test_vec2_operators@@YAHXZ		; test_vec2_operators
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 315  : 	Error += test_operator_increment();

	call	?test_operator_increment@@YAHXZ		; test_operator_increment
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 316  : 
; 317  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 318  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:main$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z PROC ; glm::all<0,glm::tvec2>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec2@_N$0A@@glm@@SAHXZ	; glm::tvec2<bool,0>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec2<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z ENDP ; glm::all<0,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec2<bool,0>::tvec2<bool,0>, COMDAT

; 47   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec2<bool,0>::tvec2<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z PROC		; glm::tvec2<bool,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@_N$0A@@glm@@SAHXZ	; glm::tvec2<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z ENDP		; glm::tvec2<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z PROC		; glm::tvec2<bool,0>::operator[], COMDAT

; 102  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 103  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@_N$0A@@glm@@SAHXZ	; glm::tvec2<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 103				; 00000067H
	lea	rdx, OFFSET FLAT:??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 104  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 105  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z ENDP		; glm::tvec2<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@_N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@_N$0A@@glm@@SAHXZ PROC			; glm::tvec2<bool,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@_N$0A@@glm@@SAHXZ ENDP			; glm::tvec2<bool,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z PROC ; glm::equal<int,0,glm::tvec2>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec2@H$0A@@glm@@SAHXZ	; glm::tvec2<int,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec2@H$0A@@glm@@SAHXZ	; glm::tvec2<int,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1KE@MOONLNIK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec2<bool,0>::tvec2<bool,0>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec2@H$0A@@glm@@SAHXZ	; glm::tvec2<int,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec2<int,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec2<int,0>::operator[]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR tv80[rsp]
	cmp	DWORD PTR [rcx], eax
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec2<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	movzx	ecx, WORD PTR Result$[rsp]
	mov	WORD PTR [rax], cx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z ENDP ; glm::equal<int,0,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\core\core_type_vec2.cpp
_TEXT	SEGMENT
Error$ = 32
v0$ = 56
v1$ = 88
v2$ = 120
v3$ = 152
v4$ = 184
i0$ = 196
i1$ = 200
i2$ = 204
i3$ = 208
i4$ = 212
$T8 = 216
$T9 = 218
$T10 = 220
tv80 = 224
tv90 = 228
tv132 = 232
tv137 = 236
tv140 = 240
tv143 = 244
?test_operator_increment@@YAHXZ PROC			; test_operator_increment

; 279  : {

$LN15:
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 280  : 	int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 281  : 
; 282  : 	glm::ivec2 v0(1);

	mov	edx, 1
	lea	rcx, QWORD PTR v0$[rsp]
	call	??0?$tvec2@H$0A@@glm@@QEAA@H@Z		; glm::tvec2<int,0>::tvec2<int,0>

; 283  : 	glm::ivec2 v1(v0);

	mov	rax, QWORD PTR v0$[rsp]
	mov	QWORD PTR v1$[rsp], rax

; 284  : 	glm::ivec2 v2(v0);

	mov	rax, QWORD PTR v0$[rsp]
	mov	QWORD PTR v2$[rsp], rax

; 285  : 	glm::ivec2 v3 = ++v1;

	lea	rcx, QWORD PTR v1$[rsp]
	call	??E?$tvec2@H$0A@@glm@@QEAAAEAU01@XZ	; glm::tvec2<int,0>::operator++
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR v3$[rsp], rax

; 286  : 	glm::ivec2 v4 = v2++;

	xor	r8d, r8d
	lea	rdx, QWORD PTR v4$[rsp]
	lea	rcx, QWORD PTR v2$[rsp]
	call	??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z	; glm::tvec2<int,0>::operator++

; 287  : 
; 288  : 	Error += glm::all(glm::equal(v0, v4)) ? 0 : 1;

	lea	r8, QWORD PTR v4$[rsp]
	lea	rdx, QWORD PTR v0$[rsp]
	lea	rcx, QWORD PTR $T8[rsp]
	call	??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec2>
	mov	rcx, rax
	call	??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z ; glm::all<0,glm::tvec2>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@test_opera
	mov	DWORD PTR tv80[rsp], 0
	jmp	SHORT $LN4@test_opera
$LN3@test_opera:
	mov	DWORD PTR tv80[rsp], 1
$LN4@test_opera:
	mov	eax, DWORD PTR tv80[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 289  : 	Error += glm::all(glm::equal(v1, v2)) ? 0 : 1;

	lea	r8, QWORD PTR v2$[rsp]
	lea	rdx, QWORD PTR v1$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec2>
	mov	rcx, rax
	call	??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z ; glm::all<0,glm::tvec2>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@test_opera
	mov	DWORD PTR tv90[rsp], 0
	jmp	SHORT $LN6@test_opera
$LN5@test_opera:
	mov	DWORD PTR tv90[rsp], 1
$LN6@test_opera:
	mov	eax, DWORD PTR tv90[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 290  : 	Error += glm::all(glm::equal(v1, v3)) ? 0 : 1;

	lea	r8, QWORD PTR v3$[rsp]
	lea	rdx, QWORD PTR v1$[rsp]
	lea	rcx, QWORD PTR $T10[rsp]
	call	??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec2>
	mov	rcx, rax
	call	??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z ; glm::all<0,glm::tvec2>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@test_opera
	mov	DWORD PTR tv132[rsp], 0
	jmp	SHORT $LN8@test_opera
$LN7@test_opera:
	mov	DWORD PTR tv132[rsp], 1
$LN8@test_opera:
	mov	eax, DWORD PTR tv132[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 291  : 
; 292  : 	int i0(1);

	mov	DWORD PTR i0$[rsp], 1

; 293  : 	int i1(i0);

	mov	eax, DWORD PTR i0$[rsp]
	mov	DWORD PTR i1$[rsp], eax

; 294  : 	int i2(i0);

	mov	eax, DWORD PTR i0$[rsp]
	mov	DWORD PTR i2$[rsp], eax

; 295  : 	int i3 = ++i1;

	mov	eax, DWORD PTR i1$[rsp]
	inc	eax
	mov	DWORD PTR i1$[rsp], eax
	mov	eax, DWORD PTR i1$[rsp]
	mov	DWORD PTR i3$[rsp], eax

; 296  : 	int i4 = i2++;

	mov	eax, DWORD PTR i2$[rsp]
	mov	DWORD PTR i4$[rsp], eax
	mov	eax, DWORD PTR i2$[rsp]
	inc	eax
	mov	DWORD PTR i2$[rsp], eax

; 297  : 
; 298  : 	Error += i0 == i4 ? 0 : 1;

	mov	eax, DWORD PTR i4$[rsp]
	cmp	DWORD PTR i0$[rsp], eax
	jne	SHORT $LN9@test_opera
	mov	DWORD PTR tv137[rsp], 0
	jmp	SHORT $LN10@test_opera
$LN9@test_opera:
	mov	DWORD PTR tv137[rsp], 1
$LN10@test_opera:
	mov	eax, DWORD PTR tv137[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 299  : 	Error += i1 == i2 ? 0 : 1;

	mov	eax, DWORD PTR i2$[rsp]
	cmp	DWORD PTR i1$[rsp], eax
	jne	SHORT $LN11@test_opera
	mov	DWORD PTR tv140[rsp], 0
	jmp	SHORT $LN12@test_opera
$LN11@test_opera:
	mov	DWORD PTR tv140[rsp], 1
$LN12@test_opera:
	mov	eax, DWORD PTR tv140[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 300  : 	Error += i1 == i3 ? 0 : 1;

	mov	eax, DWORD PTR i3$[rsp]
	cmp	DWORD PTR i1$[rsp], eax
	jne	SHORT $LN13@test_opera
	mov	DWORD PTR tv143[rsp], 0
	jmp	SHORT $LN14@test_opera
$LN13@test_opera:
	mov	DWORD PTR tv143[rsp], 1
$LN14@test_opera:
	mov	eax, DWORD PTR tv143[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 301  : 
; 302  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 303  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_operator_increment@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 256				; 00000100H
	pop	rdi
	ret	0
?test_operator_increment@@YAHXZ ENDP			; test_operator_increment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\core\core_type_vec2.cpp
_TEXT	SEGMENT
Error$ = 32
$T1 = 36
$T2 = 48
tv67 = 64
tv72 = 68
tv76 = 72
tv80 = 76
?test_vec2_size@@YAHXZ PROC				; test_vec2_size

; 263  : {

$LN11:
	push	rdi
	sub	rsp, 80					; 00000050H

; 264  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 265  : 
; 266  : 	Error += sizeof(glm::vec2) == sizeof(glm::mediump_vec2) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 267  : 	Error += 8 == sizeof(glm::mediump_vec2) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 268  : 	Error += sizeof(glm::dvec2) == sizeof(glm::highp_dvec2) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 269  : 	Error += 16 == sizeof(glm::highp_dvec2) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 270  : 	Error += glm::vec2().length() == 2 ? 0 : 1;

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@XZ		; glm::tvec2<float,0>::tvec2<float,0>
	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	cmp	eax, 2
	jne	SHORT $LN3@test_vec2_
	mov	DWORD PTR tv67[rsp], 0
	jmp	SHORT $LN4@test_vec2_
$LN3@test_vec2_:
	mov	DWORD PTR tv67[rsp], 1
$LN4@test_vec2_:
	mov	eax, DWORD PTR tv67[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 271  : 	Error += glm::dvec2().length() == 2 ? 0 : 1;

	lea	rcx, QWORD PTR $T2[rsp]
	call	??0?$tvec2@N$0A@@glm@@QEAA@XZ		; glm::tvec2<double,0>::tvec2<double,0>
	call	?length@?$tvec2@N$0A@@glm@@SAHXZ	; glm::tvec2<double,0>::length
	cmp	eax, 2
	jne	SHORT $LN5@test_vec2_
	mov	DWORD PTR tv72[rsp], 0
	jmp	SHORT $LN6@test_vec2_
$LN5@test_vec2_:
	mov	DWORD PTR tv72[rsp], 1
$LN6@test_vec2_:
	mov	eax, DWORD PTR tv72[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 272  : 	Error += glm::vec2::length() == 2 ? 0 : 1;

	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	cmp	eax, 2
	jne	SHORT $LN7@test_vec2_
	mov	DWORD PTR tv76[rsp], 0
	jmp	SHORT $LN8@test_vec2_
$LN7@test_vec2_:
	mov	DWORD PTR tv76[rsp], 1
$LN8@test_vec2_:
	mov	eax, DWORD PTR tv76[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 273  : 	Error += glm::dvec2::length() == 2 ? 0 : 1;

	call	?length@?$tvec2@N$0A@@glm@@SAHXZ	; glm::tvec2<double,0>::length
	cmp	eax, 2
	jne	SHORT $LN9@test_vec2_
	mov	DWORD PTR tv80[rsp], 0
	jmp	SHORT $LN10@test_vec2_
$LN9@test_vec2_:
	mov	DWORD PTR tv80[rsp], 1
$LN10@test_vec2_:
	mov	eax, DWORD PTR tv80[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 274  : 
; 275  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 276  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?test_vec2_size@@YAHXZ ENDP				; test_vec2_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0H$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0H$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z PROC ; glm::tvec2<float,0>::tvec2<float,0><int,0>, COMDAT

; 82   : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 80   : 		: x(static_cast<T>(v.x))

	mov	rax, QWORD PTR v$[rsp]
	cvtsi2ss xmm0, DWORD PTR [rax]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 81   : 		, y(static_cast<T>(v.y))

	mov	rax, QWORD PTR v$[rsp]
	cvtsi2ss xmm0, DWORD PTR [rax+4]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 82   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0H$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z ENDP ; glm::tvec2<float,0>::tvec2<float,0><int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z
_TEXT	SEGMENT
Result$ = 40
this$ = 80
__$ReturnUdt$ = 88
__formal$ = 96
??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z PROC		; glm::tvec2<int,0>::operator++, COMDAT

; 263  : 	{

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 264  : 		tvec2<T, P> Result(*this);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR Result$[rsp], rax

; 265  : 		++*this;

	mov	rcx, QWORD PTR this$[rsp]
	call	??E?$tvec2@H$0A@@glm@@QEAAAEAU01@XZ	; glm::tvec2<int,0>::operator++

; 266  : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR Result$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 267  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??E?$tvec2@H$0A@@glm@@QEAA?AU01@H@Z ENDP		; glm::tvec2<int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$tvec2@H$0A@@glm@@QEAAAEAU01@XZ
_TEXT	SEGMENT
this$ = 16
??E?$tvec2@H$0A@@glm@@QEAAAEAU01@XZ PROC		; glm::tvec2<int,0>::operator++, COMDAT

; 247  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 248  : 		++this->x;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx], eax

; 249  : 		++this->y;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+4]
	inc	eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+4], eax

; 250  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 251  : 	}

	pop	rdi
	ret	0
??E?$tvec2@H$0A@@glm@@QEAAAEAU01@XZ ENDP		; glm::tvec2<int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@H$0A@@glm@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec2@H$0A@@glm@@QEAA@H@Z PROC			; glm::tvec2<int,0>::tvec2<int,0>, COMDAT

; 52   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 51   : 		: x(scalar), y(scalar)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax+4], ecx

; 52   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@H$0A@@glm@@QEAA@H@Z ENDP			; glm::tvec2<int,0>::tvec2<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z PROC			; glm::tvec2<int,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@H$0A@@glm@@SAHXZ	; glm::tvec2<int,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z ENDP			; glm::tvec2<int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@H$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@H$0A@@glm@@SAHXZ PROC			; glm::tvec2<int,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@H$0A@@glm@@SAHXZ ENDP			; glm::tvec2<int,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0N$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@N$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0N$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@N$0A@@1@@Z PROC ; glm::tvec2<float,0>::tvec2<float,0><double,0>, COMDAT

; 82   : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 80   : 		: x(static_cast<T>(v.x))

	mov	rax, QWORD PTR v$[rsp]
	cvtsd2ss xmm0, QWORD PTR [rax]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 81   : 		, y(static_cast<T>(v.y))

	mov	rax, QWORD PTR v$[rsp]
	cvtsd2ss xmm0, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 82   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0N$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@N$0A@@1@@Z ENDP ; glm::tvec2<float,0>::tvec2<float,0><double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0MN@?$tvec2@M$0A@@glm@@QEAA@MN@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0MN@?$tvec2@M$0A@@glm@@QEAA@MN@Z PROC		; glm::tvec2<float,0>::tvec2<float,0><float,double>, COMDAT

; 66   : 	{}

$LN3:
	movsd	QWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	cvtsd2ss xmm0, QWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0MN@?$tvec2@M$0A@@glm@@QEAA@MN@Z ENDP		; glm::tvec2<float,0>::tvec2<float,0><float,double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\initializer_list
;	COMDAT ?end@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?end@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ PROC ; std::initializer_list<glm::tvec2<double,0> >::end, COMDAT

; 42   :     _NODISCARD constexpr const _Elem* end() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 43   :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 44   :     }

	pop	rdi
	ret	0
?end@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ ENDP ; std::initializer_list<glm::tvec2<double,0> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\initializer_list
;	COMDAT ?begin@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?begin@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ PROC ; std::initializer_list<glm::tvec2<double,0> >::begin, COMDAT

; 38   :     _NODISCARD constexpr const _Elem* begin() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 39   :         return _First;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]

; 40   :     }

	pop	rdi
	ret	0
?begin@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ ENDP ; std::initializer_list<glm::tvec2<double,0> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\initializer_list
;	COMDAT ??0?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEAA@PEBU?$tvec2@N$0A@@glm@@0@Z
_TEXT	SEGMENT
this$ = 16
_First_arg$ = 24
_Last_arg$ = 32
??0?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEAA@PEBU?$tvec2@N$0A@@glm@@0@Z PROC ; std::initializer_list<glm::tvec2<double,0> >::initializer_list<glm::tvec2<double,0> >, COMDAT

; 36   :         : _First(_First_arg), _Last(_Last_arg) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _First_arg$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Last_arg$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEAA@PEBU?$tvec2@N$0A@@glm@@0@Z ENDP ; std::initializer_list<glm::tvec2<double,0> >::initializer_list<glm::tvec2<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >, COMDAT

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal, COMDAT

; 1821 :     _NODISCARD _CONSTEXPR20_CONTAINER const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1822 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first

; 1823 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal, COMDAT

; 1817 :     _NODISCARD _CONSTEXPR20_CONTAINER _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1818 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first

; 1819 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Xlength, COMDAT

; 1773 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1774 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1775 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1756 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1757 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1758 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1759 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1760 : 
; 1761 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Destroy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@N$0A@@glm@@0@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Destroy

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR tv82[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	rcx, QWORD PTR tv82[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<double,0> >::deallocate

; 1766 : 
; 1767 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1768 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1769 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1770 :         }
; 1771 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Buy_nonzero, COMDAT

; 1717 :     _CONSTEXPR20_CONTAINER void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1718 :         // allocate array with _Newcapacity elements
; 1719 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1720 :         auto& _My_data    = _Mypair._Myval2;
; 1721 :         pointer& _Myfirst = _My_data._Myfirst;
; 1722 :         pointer& _Mylast  = _My_data._Mylast;
; 1723 :         pointer& _Myend   = _My_data._Myend;
; 1724 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1725 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1726 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1727 : 
; 1728 :         if (_Newcapacity > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::max_size
	cmp	QWORD PTR _Newcapacity$[rsp], rax
	jbe	SHORT $LN2@Buy_nonzer

; 1729 :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Xlength
$LN2@Buy_nonzer:

; 1730 :         }
; 1731 : 
; 1732 :         _Buy_raw(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_raw@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Buy_raw
$LN3@Buy_nonzer:

; 1733 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Buy_nonzero@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Buy_raw@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Buy_raw, COMDAT

; 1701 :     _CONSTEXPR20_CONTAINER void _Buy_raw(const size_type _Newcapacity) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1702 :         // allocate array with _Newcapacity elements
; 1703 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1704 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1705 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1706 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1707 : 
; 1708 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1709 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1710 : 
; 1711 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, rax
	call	?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<double,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1712 :         _Myfirst           = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1713 :         _Mylast            = _Newvec;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1714 :         _Myend             = _Newvec + _Newcapacity;

	imul	rax, QWORD PTR _Newcapacity$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1715 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Buy_raw@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Destroy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@N$0A@@glm@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@N$0A@@glm@@0@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Destroy, COMDAT

; 1678 :     _CONSTEXPR20_CONTAINER void _Destroy(pointer _First, pointer _Last) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1679 :         // destroy [_First, _Last) using allocator
; 1680 :         _Destroy_range(_First, _Last, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<double,0> > >

; 1681 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Destroy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@N$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::max_size, COMDAT

; 1552 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1553 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1554 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1555 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 712  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Tidy

; 713  : #if _ITERATOR_DEBUG_LEVEL != 0
; 714  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S1$[rsp]
	call	??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<double,0> >
	lea	rax, QWORD PTR $S1$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 715  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 716  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 717  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S2$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >, COMDAT

; 547  :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 128				; 00000080H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 24
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	movzx	edx, BYTE PTR $T5[rsp]
	mov	rcx, rax
	call	??$?0AEBV?$allocator@U?$tvec2@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1><std::allocator<glm::tvec2<double,0> > const &>

; 548  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S2$[rsp]
	call	??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<double,0> >
	lea	rax, QWORD PTR $S2$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 549  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, rax
	mov	rdx, QWORD PTR _Alproxy$[rsp]
	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 550  :         _Range_construct_or_tidy(_Ilist.begin(), _Ilist.end(), random_access_iterator_tag{});

	mov	rcx, QWORD PTR _Ilist$[rsp]
	call	?end@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ ; std::initializer_list<glm::tvec2<double,0> >::end
	mov	QWORD PTR tv90[rsp], rax
	mov	rcx, QWORD PTR _Ilist$[rsp]
	call	?begin@?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEBAPEBU?$tvec2@N$0A@@glm@@XZ ; std::initializer_list<glm::tvec2<double,0> >::begin
	movzx	r9d, BYTE PTR $T6[rsp]
	mov	rcx, QWORD PTR tv90[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Range_construct_or_tidy@PEBU?$tvec2@N$0A@@glm@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@N$0A@@glm@@0Uforward_iterator_tag@1@@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Range_construct_or_tidy<glm::tvec2<double,0> const *>

; 551  :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 552  :     }

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S2$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
?dtor$0@?0???0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z@4HA PROC ; `std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z@4HA ENDP ; `std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S2$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
?dtor$0@?0???0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z@4HA PROC ; `std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z@4HA ENDP ; `std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::max_size, COMDAT

; 727  :     _NODISCARD static _CONSTEXPR20_DYNALLOC size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 728  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 729  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec2<double,0> >::allocate, COMDAT

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 840  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec2<double,0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec2<double,0> >::deallocate, COMDAT

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 836  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec2<double,0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ PROC	; std::allocator<glm::tvec2<double,0> >::allocator<glm::tvec2<double,0> >, COMDAT

; 825  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ ENDP	; std::allocator<glm::tvec2<double,0> >::allocator<glm::tvec2<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z PROC		; glm::tvec2<double,0>::tvec2<double,0><int,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	cvtsi2sd xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	cvtsi2sd xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+8], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z ENDP		; glm::tvec2<double,0>::tvec2<double,0><int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@N$0A@@glm@@QEAA@N@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec2@N$0A@@glm@@QEAA@N@Z PROC			; glm::tvec2<double,0>::tvec2<double,0>, COMDAT

; 52   : 	{}

$LN3:
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 51   : 		: x(scalar), y(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movsd	xmm0, QWORD PTR scalar$[rsp]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movsd	xmm0, QWORD PTR scalar$[rsp]
	movsd	QWORD PTR [rax+8], xmm0

; 52   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@N$0A@@glm@@QEAA@N@Z ENDP			; glm::tvec2<double,0>::tvec2<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec2@N$0A@@glm@@QEAA@XZ PROC			; glm::tvec2<double,0>::tvec2<double,0>, COMDAT

; 27   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 25   : 				: x(0), y(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+8], xmm0

; 27   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@N$0A@@glm@@QEAA@XZ ENDP			; glm::tvec2<double,0>::tvec2<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@N$0A@@glm@@SAHXZ PROC			; glm::tvec2<double,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@N$0A@@glm@@SAHXZ ENDP			; glm::tvec2<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\initializer_list
;	COMDAT ?end@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?end@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ PROC ; std::initializer_list<glm::tvec2<float,0> >::end, COMDAT

; 42   :     _NODISCARD constexpr const _Elem* end() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 43   :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 44   :     }

	pop	rdi
	ret	0
?end@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ ENDP ; std::initializer_list<glm::tvec2<float,0> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\initializer_list
;	COMDAT ?begin@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?begin@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ PROC ; std::initializer_list<glm::tvec2<float,0> >::begin, COMDAT

; 38   :     _NODISCARD constexpr const _Elem* begin() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 39   :         return _First;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]

; 40   :     }

	pop	rdi
	ret	0
?begin@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ ENDP ; std::initializer_list<glm::tvec2<float,0> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\initializer_list
;	COMDAT ??0?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEAA@PEBU?$tvec2@M$0A@@glm@@0@Z
_TEXT	SEGMENT
this$ = 16
_First_arg$ = 24
_Last_arg$ = 32
??0?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEAA@PEBU?$tvec2@M$0A@@glm@@0@Z PROC ; std::initializer_list<glm::tvec2<float,0> >::initializer_list<glm::tvec2<float,0> >, COMDAT

; 36   :         : _First(_First_arg), _Last(_Last_arg) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _First_arg$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Last_arg$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEAA@PEBU?$tvec2@M$0A@@glm@@0@Z ENDP ; std::initializer_list<glm::tvec2<float,0> >::initializer_list<glm::tvec2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >, COMDAT

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal, COMDAT

; 1821 :     _NODISCARD _CONSTEXPR20_CONTAINER const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1822 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first

; 1823 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal, COMDAT

; 1817 :     _NODISCARD _CONSTEXPR20_CONTAINER _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1818 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first

; 1819 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Xlength, COMDAT

; 1773 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1774 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1775 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1756 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1757 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1758 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1759 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1760 : 
; 1761 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Destroy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@M$0A@@glm@@0@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Destroy

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3
	mov	QWORD PTR tv82[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
	mov	rcx, QWORD PTR tv82[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<float,0> >::deallocate

; 1766 : 
; 1767 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1768 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1769 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1770 :         }
; 1771 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_nonzero, COMDAT

; 1717 :     _CONSTEXPR20_CONTAINER void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1718 :         // allocate array with _Newcapacity elements
; 1719 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1720 :         auto& _My_data    = _Mypair._Myval2;
; 1721 :         pointer& _Myfirst = _My_data._Myfirst;
; 1722 :         pointer& _Mylast  = _My_data._Mylast;
; 1723 :         pointer& _Myend   = _My_data._Myend;
; 1724 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1725 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1726 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1727 : 
; 1728 :         if (_Newcapacity > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::max_size
	cmp	QWORD PTR _Newcapacity$[rsp], rax
	jbe	SHORT $LN2@Buy_nonzer

; 1729 :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Xlength
$LN2@Buy_nonzer:

; 1730 :         }
; 1731 : 
; 1732 :         _Buy_raw(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_raw
$LN3@Buy_nonzer:

; 1733 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_raw, COMDAT

; 1701 :     _CONSTEXPR20_CONTAINER void _Buy_raw(const size_type _Newcapacity) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1702 :         // allocate array with _Newcapacity elements
; 1703 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1704 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1705 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1706 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1707 : 
; 1708 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1709 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1710 : 
; 1711 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, rax
	call	?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<float,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1712 :         _Myfirst           = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1713 :         _Mylast            = _Newvec;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1714 :         _Myend             = _Newvec + _Newcapacity;

	mov	rax, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR _Newcapacity$[rsp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1715 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?_Destroy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@M$0A@@glm@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@M$0A@@glm@@0@Z PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Destroy, COMDAT

; 1678 :     _CONSTEXPR20_CONTAINER void _Destroy(pointer _First, pointer _Last) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1679 :         // destroy [_First, _Last) using allocator
; 1680 :         _Destroy_range(_First, _Last, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<float,0> > >

; 1681 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Destroy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEAU?$tvec2@M$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::max_size, COMDAT

; 1552 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1553 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1554 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1555 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S3$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 712  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Tidy

; 713  : #if _ITERATOR_DEBUG_LEVEL != 0
; 714  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S3$[rsp]
	call	??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<float,0> >
	lea	rax, QWORD PTR $S3$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 715  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 716  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 717  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vector
;	COMDAT ??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S4$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >, COMDAT

; 547  :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 128				; 00000080H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 24
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	movzx	edx, BYTE PTR $T5[rsp]
	mov	rcx, rax
	call	??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1><std::allocator<glm::tvec2<float,0> > const &>

; 548  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S4$[rsp]
	call	??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<float,0> >
	lea	rax, QWORD PTR $S4$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 549  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, rax
	mov	rdx, QWORD PTR _Alproxy$[rsp]
	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 550  :         _Range_construct_or_tidy(_Ilist.begin(), _Ilist.end(), random_access_iterator_tag{});

	mov	rcx, QWORD PTR _Ilist$[rsp]
	call	?end@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ ; std::initializer_list<glm::tvec2<float,0> >::end
	mov	QWORD PTR tv90[rsp], rax
	mov	rcx, QWORD PTR _Ilist$[rsp]
	call	?begin@?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEBAPEBU?$tvec2@M$0A@@glm@@XZ ; std::initializer_list<glm::tvec2<float,0> >::begin
	movzx	r9d, BYTE PTR $T6[rsp]
	mov	rcx, QWORD PTR tv90[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Range_construct_or_tidy@PEBU?$tvec2@M$0A@@glm@@@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXPEBU?$tvec2@M$0A@@glm@@0Uforward_iterator_tag@1@@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Range_construct_or_tidy<glm::tvec2<float,0> const *>

; 551  :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 552  :     }

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S4$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
?dtor$0@?0???0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z@4HA PROC ; `std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z@4HA ENDP ; `std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S4$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
?dtor$0@?0???0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z@4HA PROC ; `std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z@4HA ENDP ; `std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::max_size, COMDAT

; 727  :     _NODISCARD static _CONSTEXPR20_DYNALLOC size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 728  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 729  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec2<float,0> >::allocate, COMDAT

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 840  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec2<float,0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec2<float,0> >::deallocate, COMDAT

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	shl	rax, 3
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 836  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec2<float,0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ PROC	; std::allocator<glm::tvec2<float,0> >::allocator<glm::tvec2<float,0> >, COMDAT

; 825  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ ENDP	; std::allocator<glm::tvec2<float,0> >::allocator<glm::tvec2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\core\core_type_vec2.cpp
_TEXT	SEGMENT
Error$ = 32
A$14 = 56
B$15 = 88
a$16 = 120
v$17 = 152
$T18 = 200
a$19 = 248
v$20 = 296
$T21 = 344
A$22 = 408
B$23 = 440
C$24 = 472
E$25 = 504
F$26 = 536
$T27 = 560
$T28 = 568
$T29 = 584
$T30 = 592
$T31 = 608
$T32 = 624
$T33 = 640
$T34 = 656
tv71 = 672
tv79 = 680
tv135 = 688
__$ArrayPad$ = 696
?test_vec2_ctor@@YAHXZ PROC				; test_vec2_ctor

; 199  : {

$LN7:
	push	rsi
	push	rdi
	sub	rsp, 712				; 000002c8H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 170				; 000000aaH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 200  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 201  : 
; 202  : 	{
; 203  : 		glm::vec2 A(1);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$14[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 204  : 		glm::vec2 B(A);

	mov	rax, QWORD PTR A$14[rsp]
	mov	QWORD PTR B$15[rsp], rax

; 205  : 		Error += A == B ? 0 : 1;

	lea	rdx, QWORD PTR B$15[rsp]
	lea	rcx, QWORD PTR A$14[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@test_vec2_
	mov	DWORD PTR tv71[rsp], 0
	jmp	SHORT $LN4@test_vec2_
$LN3@test_vec2_:
	mov	DWORD PTR tv71[rsp], 1
$LN4@test_vec2_:
	mov	eax, DWORD PTR tv71[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 206  : 	}
; 207  : 
; 208  : #	if GLM_HAS_TRIVIAL_QUERIES
; 209  : 	//	Error += std::is_trivially_default_constructible<glm::vec2>::value ? 0 : 1;
; 210  : 	//	Error += std::is_trivially_copy_assignable<glm::vec2>::value ? 0 : 1;
; 211  : 		Error += std::is_trivially_copyable<glm::vec2>::value ? 0 : 1;
; 212  : 		Error += std::is_trivially_copyable<glm::dvec2>::value ? 0 : 1;
; 213  : 		Error += std::is_trivially_copyable<glm::ivec2>::value ? 0 : 1;
; 214  : 		Error += std::is_trivially_copyable<glm::uvec2>::value ? 0 : 1;
; 215  : 
; 216  : 		Error += std::is_copy_constructible<glm::vec2>::value ? 0 : 1;
; 217  : #	endif
; 218  : 
; 219  : #if GLM_HAS_INITIALIZER_LISTS
; 220  : 	{
; 221  : 		glm::vec2 a{ 0, 1 };

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR a$16[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>

; 222  : 		std::vector<glm::vec2> v = {

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	r8d, 5
	mov	edx, 4
	lea	rcx, QWORD PTR $T18[rsp+8]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	r8d, 9
	mov	edx, 8
	lea	rcx, QWORD PTR $T18[rsp+16]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	lea	rcx, QWORD PTR $T27[rsp]
	call	??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec2<float,0> >::allocator<glm::tvec2<float,0> >
	mov	QWORD PTR tv79[rsp], rax
	lea	rcx, QWORD PTR $T18[rsp+24]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T18[rsp]
	lea	rcx, QWORD PTR $T28[rsp]
	call	??0?$initializer_list@U?$tvec2@M$0A@@glm@@@std@@QEAA@PEBU?$tvec2@M$0A@@glm@@0@Z ; std::initializer_list<glm::tvec2<float,0> >::initializer_list<glm::tvec2<float,0> >
	lea	rcx, QWORD PTR $T33[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR tv79[rsp]
	mov	r8, rax
	lea	rdx, QWORD PTR $T33[rsp]
	lea	rcx, QWORD PTR v$17[rsp]
	call	??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >

; 223  : 			{0, 1},
; 224  : 			{4, 5},
; 225  : 			{8, 9}};
; 226  : 	}

	lea	rcx, QWORD PTR v$17[rsp]
	call	??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >

; 227  : 
; 228  : 	{
; 229  : 		glm::dvec2 a{ 0, 1 };

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR a$19[rsp]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>

; 230  : 		std::vector<glm::dvec2> v = {

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T21[rsp]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>
	mov	r8d, 5
	mov	edx, 4
	lea	rcx, QWORD PTR $T21[rsp+16]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>
	mov	r8d, 9
	mov	edx, 8
	lea	rcx, QWORD PTR $T21[rsp+32]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>
	lea	rcx, QWORD PTR $T29[rsp]
	call	??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec2<double,0> >::allocator<glm::tvec2<double,0> >
	mov	QWORD PTR tv135[rsp], rax
	lea	rcx, QWORD PTR $T21[rsp+48]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T21[rsp]
	lea	rcx, QWORD PTR $T30[rsp]
	call	??0?$initializer_list@U?$tvec2@N$0A@@glm@@@std@@QEAA@PEBU?$tvec2@N$0A@@glm@@0@Z ; std::initializer_list<glm::tvec2<double,0> >::initializer_list<glm::tvec2<double,0> >
	lea	rcx, QWORD PTR $T34[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR tv135[rsp]
	mov	r8, rax
	lea	rdx, QWORD PTR $T34[rsp]
	lea	rcx, QWORD PTR v$20[rsp]
	call	??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec2@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >

; 231  : 			{0, 1},
; 232  : 			{4, 5},
; 233  : 			{8, 9}};
; 234  : 	}

	lea	rcx, QWORD PTR v$20[rsp]
	call	??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >

; 235  : #endif
; 236  : 
; 237  : #if GLM_HAS_UNRESTRICTED_UNIONS && defined(GLM_FORCE_SWIZZLE)
; 238  : 	{
; 239  : 		glm::vec2 A = glm::vec2(1.0f, 2.0f);
; 240  : 		glm::vec2 B = A.xy;
; 241  : 		glm::vec2 C(A.xy);
; 242  : 		glm::vec2 D(A.xy());
; 243  : 
; 244  : 		Error += glm::all(glm::equal(A, B)) ? 0 : 1;
; 245  : 		Error += glm::all(glm::equal(A, C)) ? 0 : 1;
; 246  : 		Error += glm::all(glm::equal(A, D)) ? 0 : 1;
; 247  : 	}
; 248  : #endif//GLM_HAS_UNRESTRICTED_UNIONS && defined(GLM_FORCE_SWIZZLE)
; 249  : 
; 250  : 	{
; 251  : 		glm::vec2 A = glm::vec2(2.0f);

	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR A$22[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 252  : 		glm::vec2 B = glm::vec2(2.0f, 3.0f);

	movss	xmm2, DWORD PTR __real@40400000
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR B$23[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 253  : 		glm::vec2 C = glm::vec2(2.0f, 3.0);

	movsd	xmm2, QWORD PTR __real@4008000000000000
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR C$24[rsp]
	call	??$?0MN@?$tvec2@M$0A@@glm@@QEAA@MN@Z	; glm::tvec2<float,0>::tvec2<float,0><float,double>

; 254  : 		//glm::vec2 D = glm::dvec2(2.0); // Build error TODO: What does the specification says?
; 255  : 		glm::vec2 E(glm::dvec2(2.0));

	movsd	xmm1, QWORD PTR __real@4000000000000000
	lea	rcx, QWORD PTR $T31[rsp]
	call	??0?$tvec2@N$0A@@glm@@QEAA@N@Z		; glm::tvec2<double,0>::tvec2<double,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR E$25[rsp]
	call	??$?0N$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@N$0A@@1@@Z ; glm::tvec2<float,0>::tvec2<float,0><double,0>

; 256  : 		glm::vec2 F(glm::ivec2(2));

	mov	edx, 2
	lea	rcx, QWORD PTR $T32[rsp]
	call	??0?$tvec2@H$0A@@glm@@QEAA@H@Z		; glm::tvec2<int,0>::tvec2<int,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR F$26[rsp]
	call	??$?0H$0A@@?$tvec2@M$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z ; glm::tvec2<float,0>::tvec2<float,0><int,0>

; 257  : 	}
; 258  : 
; 259  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 260  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_vec2_ctor@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 712				; 000002c8H
	pop	rdi
	pop	rsi
	ret	0
?test_vec2_ctor@@YAHXZ ENDP				; test_vec2_ctor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v$ = 56
??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z PROC	; glm::operator-<float,0>, COMDAT

; 451  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 452  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR [rax]
	xorps	xmm1, DWORD PTR __xmm@80000000800000008000000080000000
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 453  : 			-v.x, 
; 454  : 			-v.y);
; 455  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z ENDP	; glm::operator-<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z PROC		; glm::tvec2<float,0>::operator/=<float>, COMDAT

; 219  : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 220  : 		this->x /= static_cast<T>(scalar);

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	divss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 221  : 		this->y /= static_cast<T>(scalar);

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	divss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 222  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 223  : 	}

	pop	rdi
	ret	0
??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z ENDP		; glm::tvec2<float,0>::operator/=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z PROC	; glm::tvec2<float,0>::operator*=<float>, COMDAT

; 210  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 211  : 		this->x *= static_cast<T>(v.x);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 212  : 		this->y *= static_cast<T>(v.y);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	mulss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 213  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 214  : 	}

	pop	rdi
	ret	0
??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ENDP	; glm::tvec2<float,0>::operator*=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0NN@?$tvec2@M$0A@@glm@@QEAA@NN@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0NN@?$tvec2@M$0A@@glm@@QEAA@NN@Z PROC		; glm::tvec2<float,0>::tvec2<float,0><double,double>, COMDAT

; 66   : 	{}

$LN3:
	movsd	QWORD PTR [rsp+24], xmm2
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	cvtsd2ss xmm0, QWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	cvtsd2ss xmm0, QWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0NN@?$tvec2@M$0A@@glm@@QEAA@NN@Z ENDP		; glm::tvec2<float,0>::tvec2<float,0><double,double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
scalar$ = 56
v$ = 64
??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z PROC	; glm::operator/<float,0>, COMDAT

; 597  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 598  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	divss	xmm0, DWORD PTR [rax+4]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR scalar$[rsp]
	divss	xmm1, DWORD PTR [rax]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 599  : 			scalar / v.x,
; 600  : 			scalar / v.y);
; 601  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ENDP	; glm::operator/<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
scalar$ = 56
v$ = 64
??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z PROC	; glm::operator*<float,0>, COMDAT

; 557  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 558  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	mulss	xmm0, DWORD PTR [rax+4]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR scalar$[rsp]
	mulss	xmm1, DWORD PTR [rax]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 559  : 			scalar * v.x,
; 560  : 			scalar * v.y);
; 561  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
scalar$ = 56
v$ = 64
??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z PROC	; glm::operator-<float,0>, COMDAT

; 517  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 518  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	subss	xmm0, DWORD PTR [rax+4]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR scalar$[rsp]
	subss	xmm1, DWORD PTR [rax]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 519  : 			scalar - v.x,
; 520  : 			scalar - v.y);
; 521  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ENDP	; glm::operator-<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
scalar$ = 56
v$ = 64
??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z PROC	; glm::operator+<float,0>, COMDAT

; 477  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 478  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	addss	xmm0, DWORD PTR [rax+4]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR scalar$[rsp]
	addss	xmm1, DWORD PTR [rax]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 479  : 			scalar + v.x,
; 480  : 			scalar + v.y);
; 481  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ENDP	; glm::operator+<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v$ = 56
scalar$ = 64
??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z PROC	; glm::operator/<float,0>, COMDAT

; 581  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 582  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	divss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR [rax]
	divss	xmm1, DWORD PTR scalar$[rsp]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 583  : 			v.x / scalar,
; 584  : 			v.y / scalar);
; 585  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator/<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HN@?$tvec2@M$0A@@glm@@QEAA@HN@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HN@?$tvec2@M$0A@@glm@@QEAA@HN@Z PROC		; glm::tvec2<float,0>::tvec2<float,0><int,double>, COMDAT

; 66   : 	{}

$LN3:
	movsd	QWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	cvtsd2ss xmm0, QWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HN@?$tvec2@M$0A@@glm@@QEAA@HN@Z ENDP		; glm::tvec2<float,0>::tvec2<float,0><int,double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v1$ = 56
v2$ = 64
??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z PROC	; glm::operator*<float,0>, COMDAT

; 573  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 574  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	mulss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR [rax]
	mulss	xmm1, DWORD PTR [rcx]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 575  : 			v1.x * v2.x,
; 576  : 			v1.y * v2.y);
; 577  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z PROC	; glm::tvec2<float,0>::operator/=<float>, COMDAT

; 237  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 238  : 		this->x /= static_cast<T>(v.x);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax]
	divss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 239  : 		this->y /= static_cast<T>(v.y);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	divss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 240  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 241  : 	}

	pop	rdi
	ret	0
??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ENDP	; glm::tvec2<float,0>::operator/=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v1$ = 56
v2$ = 64
??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z PROC	; glm::operator/<float,0>, COMDAT

; 613  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 614  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	divss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR [rax]
	divss	xmm1, DWORD PTR [rcx]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 615  : 			v1.x / v2.x,
; 616  : 			v1.y / v2.y);
; 617  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ENDP	; glm::operator/<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z PROC		; glm::tvec2<float,0>::operator*=<float>, COMDAT

; 192  : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 193  : 		this->x *= static_cast<T>(scalar);

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 194  : 		this->y *= static_cast<T>(scalar);

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	mulss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 195  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 196  : 	}

	pop	rdi
	ret	0
??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z ENDP		; glm::tvec2<float,0>::operator*=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v$ = 56
scalar$ = 64
??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z PROC	; glm::operator*<float,0>, COMDAT

; 541  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 542  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	mulss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR [rax]
	mulss	xmm1, DWORD PTR scalar$[rsp]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 543  : 			v.x * scalar,
; 544  : 			v.y * scalar);
; 545  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z PROC	; glm::tvec2<float,0>::operator-=<float>, COMDAT

; 183  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 184  : 		this->x -= static_cast<T>(v.x);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 185  : 		this->y -= static_cast<T>(v.y);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 186  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 187  : 	}

	pop	rdi
	ret	0
??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ENDP	; glm::tvec2<float,0>::operator-=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v1$ = 56
v2$ = 64
??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z PROC	; glm::operator-<float,0>, COMDAT

; 533  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 534  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR [rax]
	subss	xmm1, DWORD PTR [rcx]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 535  : 			v1.x - v2.x,
; 536  : 			v1.y - v2.y);
; 537  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ENDP	; glm::operator-<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z PROC		; glm::tvec2<float,0>::operator-=<float>, COMDAT

; 165  : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 166  : 		this->x -= static_cast<T>(scalar);

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 167  : 		this->y -= static_cast<T>(scalar);

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 168  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 169  : 	}

	pop	rdi
	ret	0
??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z ENDP		; glm::tvec2<float,0>::operator-=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v$ = 56
scalar$ = 64
??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z PROC	; glm::operator-<float,0>, COMDAT

; 501  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 502  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR [rax]
	subss	xmm1, DWORD PTR scalar$[rsp]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 503  : 			v.x - scalar,
; 504  : 			v.y - scalar);
; 505  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator-<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z PROC	; glm::tvec2<float,0>::operator+=<float>, COMDAT

; 156  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 157  : 		this->x += static_cast<T>(v.x);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 158  : 		this->y += static_cast<T>(v.y);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	addss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 159  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 160  : 	}

	pop	rdi
	ret	0
??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ENDP	; glm::tvec2<float,0>::operator+=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v1$ = 56
v2$ = 64
??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z PROC	; glm::operator+<float,0>, COMDAT

; 493  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 494  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	addss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR [rax]
	addss	xmm1, DWORD PTR [rcx]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 495  : 			v1.x + v2.x,
; 496  : 			v1.y + v2.y);
; 497  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ENDP	; glm::operator+<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z PROC		; glm::tvec2<float,0>::operator+=<float>, COMDAT

; 138  : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 139  : 		this->x += static_cast<T>(scalar);

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 140  : 		this->y += static_cast<T>(scalar);

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	addss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 141  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 142  : 	}

	pop	rdi
	ret	0
??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z ENDP		; glm::tvec2<float,0>::operator+=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v$ = 56
scalar$ = 64
??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z PROC	; glm::operator+<float,0>, COMDAT

; 461  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 462  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	addss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR [rax]
	addss	xmm1, DWORD PTR scalar$[rsp]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 463  : 			v.x + scalar,
; 464  : 			v.y + scalar);
; 465  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator+<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z
_TEXT	SEGMENT
tv70 = 0
v1$ = 32
v2$ = 40
??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z PROC	; glm::operator==<float,0>, COMDAT

; 873  : 	{

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 874  : 		return (v1.x == v2.x) && (v1.y == v2.y);

	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax]
	ucomiss	xmm0, DWORD PTR [rcx]
	jp	SHORT $LN3@operator
	jne	SHORT $LN3@operator
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	ucomiss	xmm0, DWORD PTR [rcx+4]
	jp	SHORT $LN3@operator
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv70[rsp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[rsp], 0
$LN4@operator:
	movzx	eax, BYTE PTR tv70[rsp]

; 875  : 	}

	add	rsp, 16
	pop	rdi
	ret	0
??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ENDP	; glm::operator==<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?9M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z
_TEXT	SEGMENT
tv70 = 0
v1$ = 32
v2$ = 40
??$?9M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z PROC	; glm::operator!=<float,0>, COMDAT

; 879  : 	{

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 880  : 		return (v1.x != v2.x) || (v1.y != v2.y);

	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax]
	ucomiss	xmm0, DWORD PTR [rcx]
	jp	SHORT $LN3@operator
	jne	SHORT $LN3@operator
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	ucomiss	xmm0, DWORD PTR [rcx+4]
	jp	SHORT $LN3@operator
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv70[rsp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[rsp], 1
$LN4@operator:
	movzx	eax, BYTE PTR tv70[rsp]

; 881  : 	}

	add	rsp, 16
	pop	rdi
	ret	0
??$?9M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ENDP	; glm::operator!=<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\core\core_type_vec2.cpp
_TEXT	SEGMENT
Error$ = 32
A$53 = 56
B$54 = 88
A$55 = 120
C$56 = 152
A$57 = 184
B$58 = 216
C$59 = 248
A$60 = 280
C$61 = 312
A$62 = 344
B$63 = 376
C$64 = 408
A$65 = 440
C$66 = 472
A$67 = 504
B$68 = 536
C$69 = 568
A$70 = 600
B$71 = 632
C$72 = 664
D$73 = 696
E$74 = 728
F$75 = 760
G$76 = 792
H$77 = 824
I$78 = 856
J$79 = 888
K$80 = 920
L$81 = 952
M$82 = 984
N$83 = 1016
A$84 = 1048
B$85 = 1080
A$86 = 1112
B$87 = 1144
A$88 = 1176
B$89 = 1208
A$90 = 1240
B$91 = 1272
B$92 = 1304
A$93 = 1336
B$94 = 1368
A$95 = 1400
B$96 = 1432
A$97 = 1464
B$98 = 1496
A$99 = 1528
B$100 = 1560
A$101 = 1592
B$102 = 1624
$T103 = 1636
$T104 = 1644
$T105 = 1652
$T106 = 1660
$T107 = 1668
$T108 = 1676
$T109 = 1684
$T110 = 1692
$T111 = 1700
$T112 = 1708
$T113 = 1716
$T114 = 1724
$T115 = 1732
$T116 = 1740
$T117 = 1748
$T118 = 1756
$T119 = 1764
$T120 = 1772
$T121 = 1780
$T122 = 1788
$T123 = 1796
$T124 = 1804
$T125 = 1812
$T126 = 1820
$T127 = 1828
$T128 = 1836
$T129 = 1844
$T130 = 1852
tv73 = 1860
tv80 = 1864
tv91 = 1868
tv95 = 1872
tv141 = 1876
tv145 = 1880
tv156 = 1884
tv160 = 1888
tv174 = 1892
tv178 = 1896
tv189 = 1900
tv225 = 1904
tv238 = 1908
tv242 = 1912
tv262 = 1916
tv276 = 1920
tv290 = 1924
tv304 = 1928
tv318 = 1932
tv364 = 1936
tv378 = 1940
tv392 = 1944
tv406 = 1948
tv420 = 1952
tv434 = 1956
tv448 = 1960
tv467 = 1964
tv480 = 1968
tv499 = 1972
tv512 = 1976
tv531 = 1980
tv544 = 1984
tv563 = 1988
tv608 = 1992
tv622 = 1996
tv638 = 2000
tv655 = 2004
tv672 = 2008
tv683 = 2012
tv700 = 2016
tv717 = 2020
tv728 = 2024
?test_vec2_operators@@YAHXZ PROC			; test_vec2_operators

; 14   : {

$LN87:
	push	rdi
	sub	rsp, 2032				; 000007f0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 500				; 000001f4H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 15   : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 16   : 
; 17   : 	{
; 18   : 		glm::vec2 A(1.0f);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$53[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 19   : 		glm::vec2 B(1.0f);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR B$54[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 20   : 		Error += A != B ? 1 : 0;

	lea	rdx, QWORD PTR B$54[rsp]
	lea	rcx, QWORD PTR A$53[rsp]
	call	??$?9M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator!=<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@test_vec2_
	mov	DWORD PTR tv73[rsp], 1
	jmp	SHORT $LN4@test_vec2_
$LN3@test_vec2_:
	mov	DWORD PTR tv73[rsp], 0
$LN4@test_vec2_:
	mov	eax, DWORD PTR tv73[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 21   : 		Error += A == B ? 0 : 1;

	lea	rdx, QWORD PTR B$54[rsp]
	lea	rcx, QWORD PTR A$53[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@test_vec2_
	mov	DWORD PTR tv80[rsp], 0
	jmp	SHORT $LN6@test_vec2_
$LN5@test_vec2_:
	mov	DWORD PTR tv80[rsp], 1
$LN6@test_vec2_:
	mov	eax, DWORD PTR tv80[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 22   : 	}
; 23   : 
; 24   : 	{
; 25   : 		glm::vec2 A(1.0f);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$55[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 26   : 		glm::vec2 C = A + 1.0f;

	movss	xmm2, DWORD PTR __real@3f800000
	lea	rdx, QWORD PTR A$55[rsp]
	lea	rcx, QWORD PTR C$56[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ; glm::operator+<float,0>

; 27   : 		A += 1.0f;

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$55[rsp]
	call	??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec2<float,0>::operator+=<float>

; 28   : 		Error += A.x == 2.0f && A.y == 2.0f ? 0 : 1;

	movss	xmm0, DWORD PTR A$55[rsp]
	ucomiss	xmm0, DWORD PTR __real@40000000
	jp	SHORT $LN7@test_vec2_
	jne	SHORT $LN7@test_vec2_
	movss	xmm0, DWORD PTR A$55[rsp+4]
	ucomiss	xmm0, DWORD PTR __real@40000000
	jp	SHORT $LN7@test_vec2_
	jne	SHORT $LN7@test_vec2_
	mov	DWORD PTR tv91[rsp], 0
	jmp	SHORT $LN8@test_vec2_
$LN7@test_vec2_:
	mov	DWORD PTR tv91[rsp], 1
$LN8@test_vec2_:
	mov	eax, DWORD PTR tv91[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 29   : 		Error += A.x == C.x && A.y == C.y ? 0 : 1;

	movss	xmm0, DWORD PTR A$55[rsp]
	ucomiss	xmm0, DWORD PTR C$56[rsp]
	jp	SHORT $LN9@test_vec2_
	jne	SHORT $LN9@test_vec2_
	movss	xmm0, DWORD PTR A$55[rsp+4]
	ucomiss	xmm0, DWORD PTR C$56[rsp+4]
	jp	SHORT $LN9@test_vec2_
	jne	SHORT $LN9@test_vec2_
	mov	DWORD PTR tv95[rsp], 0
	jmp	SHORT $LN10@test_vec2_
$LN9@test_vec2_:
	mov	DWORD PTR tv95[rsp], 1
$LN10@test_vec2_:
	mov	eax, DWORD PTR tv95[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 30   : 	}
; 31   : 
; 32   : 	{
; 33   : 		glm::vec2 A(1.0f);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$57[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 34   : 		glm::vec2 B(2.0f,-1.0f);

	movss	xmm2, DWORD PTR __real@bf800000
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR B$58[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 35   : 		glm::vec2 C = A + B;

	lea	r8, QWORD PTR B$58[rsp]
	lea	rdx, QWORD PTR A$57[rsp]
	lea	rcx, QWORD PTR C$59[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>

; 36   : 		A += B;

	lea	rdx, QWORD PTR B$58[rsp]
	lea	rcx, QWORD PTR A$57[rsp]
	call	??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec2<float,0>::operator+=<float>

; 37   : 		Error += A.x == 3.0f && A.y == 0.0f ? 0 : 1;

	movss	xmm0, DWORD PTR A$57[rsp]
	ucomiss	xmm0, DWORD PTR __real@40400000
	jp	SHORT $LN11@test_vec2_
	jne	SHORT $LN11@test_vec2_
	movss	xmm0, DWORD PTR A$57[rsp+4]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN11@test_vec2_
	jne	SHORT $LN11@test_vec2_
	mov	DWORD PTR tv141[rsp], 0
	jmp	SHORT $LN12@test_vec2_
$LN11@test_vec2_:
	mov	DWORD PTR tv141[rsp], 1
$LN12@test_vec2_:
	mov	eax, DWORD PTR tv141[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 38   : 		Error += A.x == C.x && A.y == C.y ? 0 : 1;

	movss	xmm0, DWORD PTR A$57[rsp]
	ucomiss	xmm0, DWORD PTR C$59[rsp]
	jp	SHORT $LN13@test_vec2_
	jne	SHORT $LN13@test_vec2_
	movss	xmm0, DWORD PTR A$57[rsp+4]
	ucomiss	xmm0, DWORD PTR C$59[rsp+4]
	jp	SHORT $LN13@test_vec2_
	jne	SHORT $LN13@test_vec2_
	mov	DWORD PTR tv145[rsp], 0
	jmp	SHORT $LN14@test_vec2_
$LN13@test_vec2_:
	mov	DWORD PTR tv145[rsp], 1
$LN14@test_vec2_:
	mov	eax, DWORD PTR tv145[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 39   : 	}
; 40   : 
; 41   : 	{
; 42   : 		glm::vec2 A(1.0f);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$60[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 43   : 		glm::vec2 C = A - 1.0f;

	movss	xmm2, DWORD PTR __real@3f800000
	lea	rdx, QWORD PTR A$60[rsp]
	lea	rcx, QWORD PTR C$61[rsp]
	call	??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ; glm::operator-<float,0>

; 44   : 		A -= 1.0f;

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$60[rsp]
	call	??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec2<float,0>::operator-=<float>

; 45   : 		Error += A.x == 0.0f && A.y == 0.0f ? 0 : 1;

	movss	xmm0, DWORD PTR A$60[rsp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN15@test_vec2_
	jne	SHORT $LN15@test_vec2_
	movss	xmm0, DWORD PTR A$60[rsp+4]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN15@test_vec2_
	jne	SHORT $LN15@test_vec2_
	mov	DWORD PTR tv156[rsp], 0
	jmp	SHORT $LN16@test_vec2_
$LN15@test_vec2_:
	mov	DWORD PTR tv156[rsp], 1
$LN16@test_vec2_:
	mov	eax, DWORD PTR tv156[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 46   : 		Error += A.x == C.x && A.y == C.y ? 0 : 1;

	movss	xmm0, DWORD PTR A$60[rsp]
	ucomiss	xmm0, DWORD PTR C$61[rsp]
	jp	SHORT $LN17@test_vec2_
	jne	SHORT $LN17@test_vec2_
	movss	xmm0, DWORD PTR A$60[rsp+4]
	ucomiss	xmm0, DWORD PTR C$61[rsp+4]
	jp	SHORT $LN17@test_vec2_
	jne	SHORT $LN17@test_vec2_
	mov	DWORD PTR tv160[rsp], 0
	jmp	SHORT $LN18@test_vec2_
$LN17@test_vec2_:
	mov	DWORD PTR tv160[rsp], 1
$LN18@test_vec2_:
	mov	eax, DWORD PTR tv160[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 47   : 	}
; 48   : 
; 49   : 	{
; 50   : 		glm::vec2 A(1.0f);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$62[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 51   : 		glm::vec2 B(2.0f,-1.0f);

	movss	xmm2, DWORD PTR __real@bf800000
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR B$63[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 52   : 		glm::vec2 C = A - B;

	lea	r8, QWORD PTR B$63[rsp]
	lea	rdx, QWORD PTR A$62[rsp]
	lea	rcx, QWORD PTR C$64[rsp]
	call	??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator-<float,0>

; 53   : 		A -= B;

	lea	rdx, QWORD PTR B$63[rsp]
	lea	rcx, QWORD PTR A$62[rsp]
	call	??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec2<float,0>::operator-=<float>

; 54   : 		Error += A.x == -1.0f && A.y == 2.0f ? 0 : 1;

	movss	xmm0, DWORD PTR A$62[rsp]
	ucomiss	xmm0, DWORD PTR __real@bf800000
	jp	SHORT $LN19@test_vec2_
	jne	SHORT $LN19@test_vec2_
	movss	xmm0, DWORD PTR A$62[rsp+4]
	ucomiss	xmm0, DWORD PTR __real@40000000
	jp	SHORT $LN19@test_vec2_
	jne	SHORT $LN19@test_vec2_
	mov	DWORD PTR tv174[rsp], 0
	jmp	SHORT $LN20@test_vec2_
$LN19@test_vec2_:
	mov	DWORD PTR tv174[rsp], 1
$LN20@test_vec2_:
	mov	eax, DWORD PTR tv174[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 55   : 		Error += A.x == C.x && A.y == C.y ? 0 : 1;

	movss	xmm0, DWORD PTR A$62[rsp]
	ucomiss	xmm0, DWORD PTR C$64[rsp]
	jp	SHORT $LN21@test_vec2_
	jne	SHORT $LN21@test_vec2_
	movss	xmm0, DWORD PTR A$62[rsp+4]
	ucomiss	xmm0, DWORD PTR C$64[rsp+4]
	jp	SHORT $LN21@test_vec2_
	jne	SHORT $LN21@test_vec2_
	mov	DWORD PTR tv178[rsp], 0
	jmp	SHORT $LN22@test_vec2_
$LN21@test_vec2_:
	mov	DWORD PTR tv178[rsp], 1
$LN22@test_vec2_:
	mov	eax, DWORD PTR tv178[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 56   : 	}
; 57   : 
; 58   : 	{
; 59   : 		glm::vec2 A(1.0f);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$65[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 60   : 		glm::vec2 C = A * 2.0f;

	movss	xmm2, DWORD PTR __real@40000000
	lea	rdx, QWORD PTR A$65[rsp]
	lea	rcx, QWORD PTR C$66[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ; glm::operator*<float,0>

; 61   : 		A *= 2.0f;

	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR A$65[rsp]
	call	??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec2<float,0>::operator*=<float>

; 62   : 		Error += A.x == 2.0f && A.y == 2.0f ? 0 : 1;

	movss	xmm0, DWORD PTR A$65[rsp]
	ucomiss	xmm0, DWORD PTR __real@40000000
	jp	SHORT $LN23@test_vec2_
	jne	SHORT $LN23@test_vec2_
	movss	xmm0, DWORD PTR A$65[rsp+4]
	ucomiss	xmm0, DWORD PTR __real@40000000
	jp	SHORT $LN23@test_vec2_
	jne	SHORT $LN23@test_vec2_
	mov	DWORD PTR tv189[rsp], 0
	jmp	SHORT $LN24@test_vec2_
$LN23@test_vec2_:
	mov	DWORD PTR tv189[rsp], 1
$LN24@test_vec2_:
	mov	eax, DWORD PTR tv189[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 63   : 		Error += A.x == C.x && A.y == C.y ? 0 : 1;

	movss	xmm0, DWORD PTR A$65[rsp]
	ucomiss	xmm0, DWORD PTR C$66[rsp]
	jp	SHORT $LN25@test_vec2_
	jne	SHORT $LN25@test_vec2_
	movss	xmm0, DWORD PTR A$65[rsp+4]
	ucomiss	xmm0, DWORD PTR C$66[rsp+4]
	jp	SHORT $LN25@test_vec2_
	jne	SHORT $LN25@test_vec2_
	mov	DWORD PTR tv225[rsp], 0
	jmp	SHORT $LN26@test_vec2_
$LN25@test_vec2_:
	mov	DWORD PTR tv225[rsp], 1
$LN26@test_vec2_:
	mov	eax, DWORD PTR tv225[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 64   : 	}
; 65   : 
; 66   : 	{
; 67   : 		glm::vec2 A(2.0f);

	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR A$67[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 68   : 		glm::vec2 B(2.0f);

	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR B$68[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 69   : 		glm::vec2 C = A / B;

	lea	r8, QWORD PTR B$68[rsp]
	lea	rdx, QWORD PTR A$67[rsp]
	lea	rcx, QWORD PTR C$69[rsp]
	call	??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator/<float,0>

; 70   : 		A /= B;

	lea	rdx, QWORD PTR B$68[rsp]
	lea	rcx, QWORD PTR A$67[rsp]
	call	??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec2<float,0>::operator/=<float>

; 71   : 		Error += A.x == 1.0f && A.y == 1.0f ? 0 : 1;

	movss	xmm0, DWORD PTR A$67[rsp]
	ucomiss	xmm0, DWORD PTR __real@3f800000
	jp	SHORT $LN27@test_vec2_
	jne	SHORT $LN27@test_vec2_
	movss	xmm0, DWORD PTR A$67[rsp+4]
	ucomiss	xmm0, DWORD PTR __real@3f800000
	jp	SHORT $LN27@test_vec2_
	jne	SHORT $LN27@test_vec2_
	mov	DWORD PTR tv238[rsp], 0
	jmp	SHORT $LN28@test_vec2_
$LN27@test_vec2_:
	mov	DWORD PTR tv238[rsp], 1
$LN28@test_vec2_:
	mov	eax, DWORD PTR tv238[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 72   : 		Error += A.x == C.x && A.y == C.y ? 0 : 1;

	movss	xmm0, DWORD PTR A$67[rsp]
	ucomiss	xmm0, DWORD PTR C$69[rsp]
	jp	SHORT $LN29@test_vec2_
	jne	SHORT $LN29@test_vec2_
	movss	xmm0, DWORD PTR A$67[rsp+4]
	ucomiss	xmm0, DWORD PTR C$69[rsp+4]
	jp	SHORT $LN29@test_vec2_
	jne	SHORT $LN29@test_vec2_
	mov	DWORD PTR tv242[rsp], 0
	jmp	SHORT $LN30@test_vec2_
$LN29@test_vec2_:
	mov	DWORD PTR tv242[rsp], 1
$LN30@test_vec2_:
	mov	eax, DWORD PTR tv242[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 73   : 	}
; 74   : 
; 75   : 	{
; 76   : 		glm::vec2 A(1.0f, 2.0f);

	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$70[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 77   : 		glm::vec2 B(4.0f, 5.0f);

	movss	xmm2, DWORD PTR __real@40a00000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR B$71[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 78   : 
; 79   : 		glm::vec2 C = A + B;

	lea	r8, QWORD PTR B$71[rsp]
	lea	rdx, QWORD PTR A$70[rsp]
	lea	rcx, QWORD PTR C$72[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>

; 80   : 		Error += C == glm::vec2(5, 7) ? 0 : 1;

	mov	r8d, 7
	mov	edx, 5
	lea	rcx, QWORD PTR $T103[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR C$72[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN31@test_vec2_
	mov	DWORD PTR tv262[rsp], 0
	jmp	SHORT $LN32@test_vec2_
$LN31@test_vec2_:
	mov	DWORD PTR tv262[rsp], 1
$LN32@test_vec2_:
	mov	eax, DWORD PTR tv262[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 81   : 
; 82   : 		glm::vec2 D = B - A;

	lea	r8, QWORD PTR A$70[rsp]
	lea	rdx, QWORD PTR B$71[rsp]
	lea	rcx, QWORD PTR D$73[rsp]
	call	??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator-<float,0>

; 83   : 		Error += D == glm::vec2(3, 3) ? 0 : 1;

	mov	r8d, 3
	mov	edx, 3
	lea	rcx, QWORD PTR $T104[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR D$73[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN33@test_vec2_
	mov	DWORD PTR tv276[rsp], 0
	jmp	SHORT $LN34@test_vec2_
$LN33@test_vec2_:
	mov	DWORD PTR tv276[rsp], 1
$LN34@test_vec2_:
	mov	eax, DWORD PTR tv276[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 84   : 
; 85   : 		glm::vec2 E = A * B;

	lea	r8, QWORD PTR B$71[rsp]
	lea	rdx, QWORD PTR A$70[rsp]
	lea	rcx, QWORD PTR E$74[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator*<float,0>

; 86   : 		Error += E == glm::vec2(4, 10) ? 0 : 1;

	mov	r8d, 10
	mov	edx, 4
	lea	rcx, QWORD PTR $T105[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR E$74[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN35@test_vec2_
	mov	DWORD PTR tv290[rsp], 0
	jmp	SHORT $LN36@test_vec2_
$LN35@test_vec2_:
	mov	DWORD PTR tv290[rsp], 1
$LN36@test_vec2_:
	mov	eax, DWORD PTR tv290[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 87   : 
; 88   : 		glm::vec2 F = B / A;

	lea	r8, QWORD PTR A$70[rsp]
	lea	rdx, QWORD PTR B$71[rsp]
	lea	rcx, QWORD PTR F$75[rsp]
	call	??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator/<float,0>

; 89   : 		Error += F == glm::vec2(4, 2.5) ? 0 : 1;

	movsd	xmm2, QWORD PTR __real@4004000000000000
	mov	edx, 4
	lea	rcx, QWORD PTR $T106[rsp]
	call	??$?0HN@?$tvec2@M$0A@@glm@@QEAA@HN@Z	; glm::tvec2<float,0>::tvec2<float,0><int,double>
	mov	rdx, rax
	lea	rcx, QWORD PTR F$75[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN37@test_vec2_
	mov	DWORD PTR tv304[rsp], 0
	jmp	SHORT $LN38@test_vec2_
$LN37@test_vec2_:
	mov	DWORD PTR tv304[rsp], 1
$LN38@test_vec2_:
	mov	eax, DWORD PTR tv304[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 90   : 
; 91   : 		glm::vec2 G = A + 1.0f;

	movss	xmm2, DWORD PTR __real@3f800000
	lea	rdx, QWORD PTR A$70[rsp]
	lea	rcx, QWORD PTR G$76[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ; glm::operator+<float,0>

; 92   : 		Error += G == glm::vec2(2, 3) ? 0 : 1;

	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR $T107[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR G$76[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN39@test_vec2_
	mov	DWORD PTR tv318[rsp], 0
	jmp	SHORT $LN40@test_vec2_
$LN39@test_vec2_:
	mov	DWORD PTR tv318[rsp], 1
$LN40@test_vec2_:
	mov	eax, DWORD PTR tv318[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 93   : 
; 94   : 		glm::vec2 H = B - 1.0f;

	movss	xmm2, DWORD PTR __real@3f800000
	lea	rdx, QWORD PTR B$71[rsp]
	lea	rcx, QWORD PTR H$77[rsp]
	call	??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ; glm::operator-<float,0>

; 95   : 		Error += H == glm::vec2(3, 4) ? 0 : 1;

	mov	r8d, 4
	mov	edx, 3
	lea	rcx, QWORD PTR $T108[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR H$77[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN41@test_vec2_
	mov	DWORD PTR tv364[rsp], 0
	jmp	SHORT $LN42@test_vec2_
$LN41@test_vec2_:
	mov	DWORD PTR tv364[rsp], 1
$LN42@test_vec2_:
	mov	eax, DWORD PTR tv364[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 96   : 
; 97   : 		glm::vec2 I = A * 2.0f;

	movss	xmm2, DWORD PTR __real@40000000
	lea	rdx, QWORD PTR A$70[rsp]
	lea	rcx, QWORD PTR I$78[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ; glm::operator*<float,0>

; 98   : 		Error += I == glm::vec2(2, 4) ? 0 : 1;

	mov	r8d, 4
	mov	edx, 2
	lea	rcx, QWORD PTR $T109[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR I$78[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN43@test_vec2_
	mov	DWORD PTR tv378[rsp], 0
	jmp	SHORT $LN44@test_vec2_
$LN43@test_vec2_:
	mov	DWORD PTR tv378[rsp], 1
$LN44@test_vec2_:
	mov	eax, DWORD PTR tv378[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 99   : 
; 100  : 		glm::vec2 J = B / 2.0f;

	movss	xmm2, DWORD PTR __real@40000000
	lea	rdx, QWORD PTR B$71[rsp]
	lea	rcx, QWORD PTR J$79[rsp]
	call	??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ; glm::operator/<float,0>

; 101  : 		Error += J == glm::vec2(2, 2.5) ? 0 : 1;

	movsd	xmm2, QWORD PTR __real@4004000000000000
	mov	edx, 2
	lea	rcx, QWORD PTR $T110[rsp]
	call	??$?0HN@?$tvec2@M$0A@@glm@@QEAA@HN@Z	; glm::tvec2<float,0>::tvec2<float,0><int,double>
	mov	rdx, rax
	lea	rcx, QWORD PTR J$79[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN45@test_vec2_
	mov	DWORD PTR tv392[rsp], 0
	jmp	SHORT $LN46@test_vec2_
$LN45@test_vec2_:
	mov	DWORD PTR tv392[rsp], 1
$LN46@test_vec2_:
	mov	eax, DWORD PTR tv392[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 102  : 
; 103  : 		glm::vec2 K = 1.0f + A;

	lea	r8, QWORD PTR A$70[rsp]
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR K$80[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ; glm::operator+<float,0>

; 104  : 		Error += K == glm::vec2(2, 3) ? 0 : 1;

	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR $T111[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR K$80[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN47@test_vec2_
	mov	DWORD PTR tv406[rsp], 0
	jmp	SHORT $LN48@test_vec2_
$LN47@test_vec2_:
	mov	DWORD PTR tv406[rsp], 1
$LN48@test_vec2_:
	mov	eax, DWORD PTR tv406[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 105  : 
; 106  : 		glm::vec2 L = 1.0f - B;

	lea	r8, QWORD PTR B$71[rsp]
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR L$81[rsp]
	call	??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ; glm::operator-<float,0>

; 107  : 		Error += L == glm::vec2(-3, -4) ? 0 : 1;

	mov	r8d, -4
	mov	edx, -3
	lea	rcx, QWORD PTR $T112[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR L$81[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN49@test_vec2_
	mov	DWORD PTR tv420[rsp], 0
	jmp	SHORT $LN50@test_vec2_
$LN49@test_vec2_:
	mov	DWORD PTR tv420[rsp], 1
$LN50@test_vec2_:
	mov	eax, DWORD PTR tv420[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 108  : 
; 109  : 		glm::vec2 M = 2.0f * A;

	lea	r8, QWORD PTR A$70[rsp]
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR M$82[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>

; 110  : 		Error += M == glm::vec2(2, 4) ? 0 : 1;

	mov	r8d, 4
	mov	edx, 2
	lea	rcx, QWORD PTR $T113[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR M$82[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN51@test_vec2_
	mov	DWORD PTR tv434[rsp], 0
	jmp	SHORT $LN52@test_vec2_
$LN51@test_vec2_:
	mov	DWORD PTR tv434[rsp], 1
$LN52@test_vec2_:
	mov	eax, DWORD PTR tv434[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 111  : 
; 112  : 		glm::vec2 N = 2.0f / B;

	lea	r8, QWORD PTR B$71[rsp]
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR N$83[rsp]
	call	??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ; glm::operator/<float,0>

; 113  : 		Error += N == glm::vec2(0.5, 2.0 / 5.0) ? 0 : 1;

	movsd	xmm2, QWORD PTR __real@3fd999999999999a
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	lea	rcx, QWORD PTR $T114[rsp]
	call	??$?0NN@?$tvec2@M$0A@@glm@@QEAA@NN@Z	; glm::tvec2<float,0>::tvec2<float,0><double,double>
	mov	rdx, rax
	lea	rcx, QWORD PTR N$83[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN53@test_vec2_
	mov	DWORD PTR tv448[rsp], 0
	jmp	SHORT $LN54@test_vec2_
$LN53@test_vec2_:
	mov	DWORD PTR tv448[rsp], 1
$LN54@test_vec2_:
	mov	eax, DWORD PTR tv448[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 114  : 	}
; 115  : 
; 116  : 	{
; 117  : 		glm::vec2 A(1.0f, 2.0f);

	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$84[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 118  : 		glm::vec2 B(4.0f, 5.0f);

	movss	xmm2, DWORD PTR __real@40a00000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR B$85[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 119  : 
; 120  : 		A += B;

	lea	rdx, QWORD PTR B$85[rsp]
	lea	rcx, QWORD PTR A$84[rsp]
	call	??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec2<float,0>::operator+=<float>

; 121  : 		Error += A == glm::vec2(5, 7) ? 0 : 1;

	mov	r8d, 7
	mov	edx, 5
	lea	rcx, QWORD PTR $T115[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR A$84[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN55@test_vec2_
	mov	DWORD PTR tv467[rsp], 0
	jmp	SHORT $LN56@test_vec2_
$LN55@test_vec2_:
	mov	DWORD PTR tv467[rsp], 1
$LN56@test_vec2_:
	mov	eax, DWORD PTR tv467[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 122  : 
; 123  : 		A += 1.0f;

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$84[rsp]
	call	??$?YM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec2<float,0>::operator+=<float>

; 124  : 		Error += A == glm::vec2(6, 8) ? 0 : 1;

	mov	r8d, 8
	mov	edx, 6
	lea	rcx, QWORD PTR $T116[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR A$84[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN57@test_vec2_
	mov	DWORD PTR tv480[rsp], 0
	jmp	SHORT $LN58@test_vec2_
$LN57@test_vec2_:
	mov	DWORD PTR tv480[rsp], 1
$LN58@test_vec2_:
	mov	eax, DWORD PTR tv480[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 125  : 	}
; 126  : 	{
; 127  : 		glm::vec2 A(1.0f, 2.0f);

	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$86[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 128  : 		glm::vec2 B(4.0f, 5.0f);

	movss	xmm2, DWORD PTR __real@40a00000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR B$87[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 129  : 
; 130  : 		B -= A;

	lea	rdx, QWORD PTR A$86[rsp]
	lea	rcx, QWORD PTR B$87[rsp]
	call	??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec2<float,0>::operator-=<float>

; 131  : 		Error += B == glm::vec2(3, 3) ? 0 : 1;

	mov	r8d, 3
	mov	edx, 3
	lea	rcx, QWORD PTR $T117[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$87[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN59@test_vec2_
	mov	DWORD PTR tv499[rsp], 0
	jmp	SHORT $LN60@test_vec2_
$LN59@test_vec2_:
	mov	DWORD PTR tv499[rsp], 1
$LN60@test_vec2_:
	mov	eax, DWORD PTR tv499[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 132  : 
; 133  : 		B -= 1.0f;

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR B$87[rsp]
	call	??$?ZM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec2<float,0>::operator-=<float>

; 134  : 		Error += B == glm::vec2(2, 2) ? 0 : 1;

	mov	r8d, 2
	mov	edx, 2
	lea	rcx, QWORD PTR $T118[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$87[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN61@test_vec2_
	mov	DWORD PTR tv512[rsp], 0
	jmp	SHORT $LN62@test_vec2_
$LN61@test_vec2_:
	mov	DWORD PTR tv512[rsp], 1
$LN62@test_vec2_:
	mov	eax, DWORD PTR tv512[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 135  : 	}
; 136  : 	{
; 137  : 		glm::vec2 A(1.0f, 2.0f);

	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$88[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 138  : 		glm::vec2 B(4.0f, 5.0f);

	movss	xmm2, DWORD PTR __real@40a00000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR B$89[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 139  : 
; 140  : 		A *= B;

	lea	rdx, QWORD PTR B$89[rsp]
	lea	rcx, QWORD PTR A$88[rsp]
	call	??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec2<float,0>::operator*=<float>

; 141  : 		Error += A == glm::vec2(4, 10) ? 0 : 1;

	mov	r8d, 10
	mov	edx, 4
	lea	rcx, QWORD PTR $T119[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR A$88[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN63@test_vec2_
	mov	DWORD PTR tv531[rsp], 0
	jmp	SHORT $LN64@test_vec2_
$LN63@test_vec2_:
	mov	DWORD PTR tv531[rsp], 1
$LN64@test_vec2_:
	mov	eax, DWORD PTR tv531[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 142  : 
; 143  : 		A *= 2.0f;

	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR A$88[rsp]
	call	??$?XM@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec2<float,0>::operator*=<float>

; 144  : 		Error += A == glm::vec2(8, 20) ? 0 : 1;

	mov	r8d, 20
	mov	edx, 8
	lea	rcx, QWORD PTR $T120[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR A$88[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN65@test_vec2_
	mov	DWORD PTR tv544[rsp], 0
	jmp	SHORT $LN66@test_vec2_
$LN65@test_vec2_:
	mov	DWORD PTR tv544[rsp], 1
$LN66@test_vec2_:
	mov	eax, DWORD PTR tv544[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 145  : 	}
; 146  : 	{
; 147  : 		glm::vec2 A(1.0f, 2.0f);

	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$90[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 148  : 		glm::vec2 B(4.0f, 5.0f);

	movss	xmm2, DWORD PTR __real@40a00000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR B$91[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 149  : 
; 150  : 		B /= A;

	lea	rdx, QWORD PTR A$90[rsp]
	lea	rcx, QWORD PTR B$91[rsp]
	call	??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec2<float,0>::operator/=<float>

; 151  : 		Error += B == glm::vec2(4, 2.5) ? 0 : 1;

	movsd	xmm2, QWORD PTR __real@4004000000000000
	mov	edx, 4
	lea	rcx, QWORD PTR $T121[rsp]
	call	??$?0HN@?$tvec2@M$0A@@glm@@QEAA@HN@Z	; glm::tvec2<float,0>::tvec2<float,0><int,double>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$91[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN67@test_vec2_
	mov	DWORD PTR tv563[rsp], 0
	jmp	SHORT $LN68@test_vec2_
$LN67@test_vec2_:
	mov	DWORD PTR tv563[rsp], 1
$LN68@test_vec2_:
	mov	eax, DWORD PTR tv563[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 152  : 
; 153  : 		B /= 2.0f;

	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR B$91[rsp]
	call	??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec2<float,0>::operator/=<float>

; 154  : 		Error += B == glm::vec2(2, 1.25) ? 0 : 1;

	movsd	xmm2, QWORD PTR __real@3ff4000000000000
	mov	edx, 2
	lea	rcx, QWORD PTR $T122[rsp]
	call	??$?0HN@?$tvec2@M$0A@@glm@@QEAA@HN@Z	; glm::tvec2<float,0>::tvec2<float,0><int,double>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$91[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN69@test_vec2_
	mov	DWORD PTR tv608[rsp], 0
	jmp	SHORT $LN70@test_vec2_
$LN69@test_vec2_:
	mov	DWORD PTR tv608[rsp], 1
$LN70@test_vec2_:
	mov	eax, DWORD PTR tv608[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 155  : 	}
; 156  : 	{
; 157  : 		glm::vec2 B(2.0f);

	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR B$92[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 158  : 
; 159  : 		B /= B.y;

	movss	xmm1, DWORD PTR B$92[rsp+4]
	lea	rcx, QWORD PTR B$92[rsp]
	call	??$?_0M@?$tvec2@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec2<float,0>::operator/=<float>

; 160  : 		Error += B == glm::vec2(1.0f) ? 0 : 1;

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T123[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$92[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN71@test_vec2_
	mov	DWORD PTR tv622[rsp], 0
	jmp	SHORT $LN72@test_vec2_
$LN71@test_vec2_:
	mov	DWORD PTR tv622[rsp], 1
$LN72@test_vec2_:
	mov	eax, DWORD PTR tv622[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 161  : 	}
; 162  : 
; 163  : 	{
; 164  : 		glm::vec2 A(1.0f, 2.0f);

	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$93[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 165  : 		glm::vec2 B = -A;

	lea	rdx, QWORD PTR A$93[rsp]
	lea	rcx, QWORD PTR B$94[rsp]
	call	??$?GM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z ; glm::operator-<float,0>

; 166  : 		Error += B == glm::vec2(-1.0f, -2.0f) ? 0 : 1;

	movss	xmm2, DWORD PTR __real@c0000000
	movss	xmm1, DWORD PTR __real@bf800000
	lea	rcx, QWORD PTR $T124[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$94[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN73@test_vec2_
	mov	DWORD PTR tv638[rsp], 0
	jmp	SHORT $LN74@test_vec2_
$LN73@test_vec2_:
	mov	DWORD PTR tv638[rsp], 1
$LN74@test_vec2_:
	mov	eax, DWORD PTR tv638[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 167  : 	}
; 168  : 
; 169  : 	{
; 170  : 		glm::vec2 A(1.0f, 2.0f);

	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$95[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 171  : 		glm::vec2 B = --A;

	lea	rcx, QWORD PTR A$95[rsp]
	call	??F?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ	; glm::tvec2<float,0>::operator--
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR B$96[rsp], rax

; 172  : 		Error += B == glm::vec2(0.0f, 1.0f) ? 0 : 1;

	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T125[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$96[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN75@test_vec2_
	mov	DWORD PTR tv655[rsp], 0
	jmp	SHORT $LN76@test_vec2_
$LN75@test_vec2_:
	mov	DWORD PTR tv655[rsp], 1
$LN76@test_vec2_:
	mov	eax, DWORD PTR tv655[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 173  : 	}
; 174  : 
; 175  : 	{
; 176  : 		glm::vec2 A(1.0f, 2.0f);

	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$97[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 177  : 		glm::vec2 B = A--;

	xor	r8d, r8d
	lea	rdx, QWORD PTR B$98[rsp]
	lea	rcx, QWORD PTR A$97[rsp]
	call	??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z	; glm::tvec2<float,0>::operator--

; 178  : 		Error += B == glm::vec2(1.0f, 2.0f) ? 0 : 1;

	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T126[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$98[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN77@test_vec2_
	mov	DWORD PTR tv672[rsp], 0
	jmp	SHORT $LN78@test_vec2_
$LN77@test_vec2_:
	mov	DWORD PTR tv672[rsp], 1
$LN78@test_vec2_:
	mov	eax, DWORD PTR tv672[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 179  : 		Error += A == glm::vec2(0.0f, 1.0f) ? 0 : 1;

	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T127[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR A$97[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN79@test_vec2_
	mov	DWORD PTR tv683[rsp], 0
	jmp	SHORT $LN80@test_vec2_
$LN79@test_vec2_:
	mov	DWORD PTR tv683[rsp], 1
$LN80@test_vec2_:
	mov	eax, DWORD PTR tv683[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 180  : 	}
; 181  : 
; 182  : 	{
; 183  : 		glm::vec2 A(1.0f, 2.0f);

	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$99[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 184  : 		glm::vec2 B = ++A;

	lea	rcx, QWORD PTR A$99[rsp]
	call	??E?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ	; glm::tvec2<float,0>::operator++
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR B$100[rsp], rax

; 185  : 		Error += B == glm::vec2(2.0f, 3.0f) ? 0 : 1;

	movss	xmm2, DWORD PTR __real@40400000
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR $T128[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$100[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN81@test_vec2_
	mov	DWORD PTR tv700[rsp], 0
	jmp	SHORT $LN82@test_vec2_
$LN81@test_vec2_:
	mov	DWORD PTR tv700[rsp], 1
$LN82@test_vec2_:
	mov	eax, DWORD PTR tv700[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 186  : 	}
; 187  : 
; 188  : 	{
; 189  : 		glm::vec2 A(1.0f, 2.0f);

	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$101[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 190  : 		glm::vec2 B = A++;

	xor	r8d, r8d
	lea	rdx, QWORD PTR B$102[rsp]
	lea	rcx, QWORD PTR A$101[rsp]
	call	??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z	; glm::tvec2<float,0>::operator++

; 191  : 		Error += B == glm::vec2(1.0f, 2.0f) ? 0 : 1;

	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T129[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$102[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN83@test_vec2_
	mov	DWORD PTR tv717[rsp], 0
	jmp	SHORT $LN84@test_vec2_
$LN83@test_vec2_:
	mov	DWORD PTR tv717[rsp], 1
$LN84@test_vec2_:
	mov	eax, DWORD PTR tv717[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 192  : 		Error += A == glm::vec2(2.0f, 3.0f) ? 0 : 1;

	movss	xmm2, DWORD PTR __real@40400000
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR $T130[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR A$101[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec2@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN85@test_vec2_
	mov	DWORD PTR tv728[rsp], 0
	jmp	SHORT $LN86@test_vec2_
$LN85@test_vec2_:
	mov	DWORD PTR tv728[rsp], 1
$LN86@test_vec2_:
	mov	eax, DWORD PTR tv728[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 193  : 	}
; 194  : 
; 195  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 196  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_vec2_operators@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 2032				; 000007f0H
	pop	rdi
	ret	0
?test_vec2_operators@@YAHXZ ENDP			; test_vec2_operators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\core\core_type_vec2.cpp
;	COMDAT ??__Ev3@@YAXXZ
text$di	SEGMENT
??__Ev3@@YAXXZ PROC					; `dynamic initializer for 'v3'', COMDAT

; 11   : static glm::vec2 v3(1, 1);

	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r8d, 1
	mov	edx, 1
	lea	rcx, OFFSET FLAT:?v3@@3U?$tvec2@M$0A@@glm@@A
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??__Ev3@@YAXXZ ENDP					; `dynamic initializer for 'v3''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z PROC		; glm::tvec2<float,0>::tvec2<float,0><int,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z ENDP		; glm::tvec2<float,0>::tvec2<float,0><int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\core\core_type_vec2.cpp
;	COMDAT ??__Ev2@@YAXXZ
text$di	SEGMENT
??__Ev2@@YAXXZ PROC					; `dynamic initializer for 'v2'', COMDAT

; 10   : static glm::vec2 v2(1);

	push	rdi
	sub	rsp, 32					; 00000020H
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, OFFSET FLAT:?v2@@3U?$tvec2@M$0A@@glm@@A
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??__Ev2@@YAXXZ ENDP					; `dynamic initializer for 'v2''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\core\core_type_vec2.cpp
;	COMDAT ??__Ev1@@YAXXZ
text$di	SEGMENT
??__Ev1@@YAXXZ PROC					; `dynamic initializer for 'v1'', COMDAT

; 9    : static glm::vec2 v1;

	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rcx, OFFSET FLAT:?v1@@3U?$tvec2@M$0A@@glm@@A
	call	??0?$tvec2@M$0A@@glm@@QEAA@XZ		; glm::tvec2<float,0>::tvec2<float,0>
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??__Ev1@@YAXXZ ENDP					; `dynamic initializer for 'v1''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z
_TEXT	SEGMENT
Result$ = 40
this$ = 80
__$ReturnUdt$ = 88
__formal$ = 96
??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z PROC		; glm::tvec2<float,0>::operator--, COMDAT

; 271  : 	{

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 272  : 		tvec2<T, P> Result(*this);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR Result$[rsp], rax

; 273  : 		--*this;

	mov	rcx, QWORD PTR this$[rsp]
	call	??F?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ	; glm::tvec2<float,0>::operator--

; 274  : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR Result$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 275  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??F?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z ENDP		; glm::tvec2<float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z
_TEXT	SEGMENT
Result$ = 40
this$ = 80
__$ReturnUdt$ = 88
__formal$ = 96
??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z PROC		; glm::tvec2<float,0>::operator++, COMDAT

; 263  : 	{

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 264  : 		tvec2<T, P> Result(*this);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR Result$[rsp], rax

; 265  : 		++*this;

	mov	rcx, QWORD PTR this$[rsp]
	call	??E?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ	; glm::tvec2<float,0>::operator++

; 266  : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR Result$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 267  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??E?$tvec2@M$0A@@glm@@QEAA?AU01@H@Z ENDP		; glm::tvec2<float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ
_TEXT	SEGMENT
this$ = 16
??F?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ PROC		; glm::tvec2<float,0>::operator--, COMDAT

; 255  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 256  : 		--this->x;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 257  : 		--this->y;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 258  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 259  : 	}

	pop	rdi
	ret	0
??F?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ ENDP		; glm::tvec2<float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ
_TEXT	SEGMENT
this$ = 16
??E?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ PROC		; glm::tvec2<float,0>::operator++, COMDAT

; 247  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 248  : 		++this->x;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 249  : 		++this->y;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 250  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 251  : 	}

	pop	rdi
	ret	0
??E?$tvec2@M$0A@@glm@@QEAAAEAU01@XZ ENDP		; glm::tvec2<float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@MM@Z
_TEXT	SEGMENT
this$ = 16
s1$ = 24
s2$ = 32
??0?$tvec2@M$0A@@glm@@QEAA@MM@Z PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 57   : 	{}

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 56   : 		: x(s1), y(s2)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR s1$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR s2$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 57   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@MM@Z ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec2@M$0A@@glm@@QEAA@M@Z PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 52   : 	{}

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 51   : 		: x(scalar), y(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 52   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec2@M$0A@@glm@@QEAA@XZ PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 27   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 25   : 				: x(0), y(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0

; 27   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@XZ ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@M$0A@@glm@@SAHXZ PROC			; glm::tvec2<float,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@M$0A@@glm@@SAHXZ ENDP			; glm::tvec2<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ PROC	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12, COMDAT

; 1303 :     _CONSTEXPR20_CONTAINER _Basic_container_proxy_ptr12()             = default;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1296 :     _Container_proxy* _Ptr = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1303 :     _CONSTEXPR20_CONTAINER _Basic_container_proxy_ptr12()             = default;

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ENDP	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1298 :     constexpr void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1299 :         _Ptr = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1300 :     }

	pop	rdi
	ret	0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ PROC	; std::_Container_base12::_Orphan_all_locked, COMDAT

; 1095 :     void _Orphan_all_locked() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 1096 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1097 :         _Orphan_all_unlocked();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked

; 1098 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ ENDP	; std::_Container_base12::_Orphan_all_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 0
this$ = 32
?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked, COMDAT

; 1220 : _CONSTEXPR20_CONTAINER void _Container_base12::_Orphan_all_unlocked() noexcept {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1221 :     for (auto& _Pnext = _Myproxy->_Myfirstiter; _Pnext; _Pnext = _Pnext->_Mynextiter) { // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rsp], rax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN4@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_all

; 1222 :         _Pnext->_Myproxy = nullptr;

	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0

; 1223 :     }

	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1224 :     _Myproxy->_Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax+8], 0

; 1225 : }

	add	rsp, 16
	pop	rdi
	ret	0
?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1227 : _CONSTEXPR20_CONTAINER void _Container_base12::_Orphan_all() noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1228 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1229 :     if (_Myproxy) { // proxy allocated, drain it

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Orphan_all

; 1230 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1231 :         if (_STD is_constant_evaluated()) {
; 1232 :             _Orphan_all_unlocked();
; 1233 :         } else
; 1234 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1235 :         {
; 1236 :             _Orphan_all_locked();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked
$LN2@Orphan_all:

; 1237 :         }
; 1238 :     }
; 1239 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1240 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1064 :     _CONSTEXPR20_CONTAINER _Container_base12() noexcept = default;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1065 : 
; 1066 :     _Container_base12(const _Container_base12&) = delete;
; 1067 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1068 : 
; 1069 :     _CONSTEXPR20_CONTAINER void _Orphan_all() noexcept;
; 1070 :     _CONSTEXPR20_CONTAINER void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1071 : 
; 1072 :     template <class _Alloc>
; 1073 :     _CONSTEXPR20_CONTAINER void _Alloc_proxy(_Alloc&& _Al) {
; 1074 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1075 :         _Construct_in_place(*_New_proxy, this);
; 1076 :         _Myproxy            = _New_proxy;
; 1077 :         _New_proxy->_Mycont = this;
; 1078 :     }
; 1079 : 
; 1080 :     template <class _Alloc>
; 1081 :     _CONSTEXPR20_CONTAINER void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1082 :         // pre: no iterators refer to the existing proxy
; 1083 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1084 :         _Construct_in_place(*_New_proxy, this);
; 1085 :         _New_proxy->_Mycont = this;
; 1086 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1087 :     }
; 1088 : 
; 1089 :     _Container_proxy* _Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1064 :     _CONSTEXPR20_CONTAINER _Container_base12() noexcept = default;

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1056 :     _CONSTEXPR20_CONTAINER _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Mycont_$[rsp]
	mov	QWORD PTR [rax], rcx

; 1057 : 
; 1058 :     const _Container_base12* _Mycont       = nullptr;
; 1059 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 1056 :     _CONSTEXPR20_CONTAINER _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 16
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 978  : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 979  :     // convert size_t to size_t, unchanged
; 980  :     return _Len;

	mov	rax, QWORD PTR _Len$[rsp]

; 981  : }

	pop	rdi
	ret	0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 153  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 154  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 155  :     _Bytes += _Non_user_size;

	mov	rax, QWORD PTR _Bytes$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 47					; 0000002fH
	mov	rcx, QWORD PTR _Bytes$[rsp]
	mov	QWORD PTR [rcx], rax

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr_user$[rsp], rax

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr_user$[rsp]
	mov	rax, QWORD PTR [rcx+rax]
	mov	QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr_user$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	cmp	QWORD PTR [rcx+rax], rdx
	jne	SHORT $LN14@Adjust_man
	jmp	SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 162				; 000000a2H
	lea	rdx, OFFSET FLAT:??_C@_0GI@KDIDHNIL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
	xor	eax, eax
$LN19@Adjust_man:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 162				; 000000a2H
	lea	r8, OFFSET FLAT:??_C@_1NA@FOAKNOEL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN15@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Adjust_man

; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	QWORD PTR _Min_back_shift$[rsp], 16

; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptr_container$[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	QWORD PTR _Back_shift$[rsp], 16
	jb	SHORT $LN16@Adjust_man
	cmp	QWORD PTR _Back_shift$[rsp], 47		; 0000002fH
	ja	SHORT $LN16@Adjust_man
	jmp	SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 172				; 000000acH
	lea	rdx, OFFSET FLAT:??_C@_0GI@KDIDHNIL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
	xor	eax, eax
$LN20@Adjust_man:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 172				; 000000acH
	lea	r8, OFFSET FLAT:??_C@_1NA@FOAKNOEL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN17@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Adjust_man

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptr_container$[rsp]
	mov	QWORD PTR [rax], rcx

; 174  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 84   :         void* _Allocate(const size_t _Bytes) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 85   :         return ::operator new(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	??2@YAPEAX_K@Z				; operator new

; 86   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
	push	rdi
	sub	rsp, 64					; 00000040H

; 321  :     _THROW(bad_array_new_length{});

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0bad_array_new_length@std@@QEAA@XZ	; std::bad_array_new_length::bad_array_new_length
	lea	rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
$LN2@Throw_bad_:

; 322  : }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_array_new_length@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0bad_alloc@std@@QEAA@AEBV01@@Z
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_alloc@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 141  :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 140  :         : bad_alloc("bad array new length")

	lea	rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	rcx, QWORD PTR this$[rsp]
	call	??0bad_alloc@std@@AEAA@QEBD@Z		; std::bad_alloc::bad_alloc

; 141  :     {

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx

; 142  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_alloc@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 130  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 129  :         : exception(_Message, 1)

	mov	r8d, 1
	mov	rdx, QWORD PTR _Message$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@QEBDH@Z		; std::exception::exception

; 130  :     {

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx

; 131  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 94   :     {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@what
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN4@what
$LN3@what:
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	mov	QWORD PTR tv69[rsp], rax
$LN4@what:
	mov	rax, QWORD PTR tv69[rsp]

; 96   :     }

	add	rsp, 16
	pop	rdi
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 90   :         __std_exception_destroy(&_Data);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	__std_exception_destroy

; 91   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 71   :         : _Data()

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, QWORD PTR _Other$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	__std_exception_copy

; 74   :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 65   :         : _Data()

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 67   :         _Data._What = _Message;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Message$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 68   :     }

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 167  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 168  :         (void)_Size;
; 169  :         return _Where;

	mov	rax, QWORD PTR _Where$[rsp]

; 170  :     }

	pop	rdi
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 647  :     _NODISCARD static constexpr long long(max)() noexcept {

$LN3:
	push	rdi

; 648  :         return LLONG_MAX;

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 649  :     }

	pop	rdi
	ret	0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
END
