; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30038.1 

include listing.inc

INCLUDELIB MSVCRTD

CONST	SEGMENT
$SG90127 DB	'quat', 00H
	ORG $+3
$SG90130 DB	'vec2', 00H
	ORG $+3
$SG90133 DB	'vec3', 00H
	ORG $+3
$SG90136 DB	'vec4', 00H
	ORG $+3
$SG90139 DB	'mat2x2', 00H
	ORG $+1
$SG90142 DB	'mat2x3', 00H
	ORG $+1
$SG90145 DB	'mat2x4', 00H
	ORG $+1
$SG90148 DB	'mat3x2', 00H
	ORG $+1
$SG90151 DB	'mat3x3', 00H
	ORG $+1
$SG90154 DB	'mat3x4', 00H
	ORG $+1
$SG90157 DB	'mat4x2', 00H
	ORG $+1
$SG90160 DB	'mat4x3', 00H
	ORG $+1
$SG90163 DB	'mat4x4', 00H
	ORG $+1
$SG90164 DB	'unknown', 00H
$SG90426 DB	'quat', 00H
	ORG $+3
$SG90429 DB	'vec2', 00H
	ORG $+3
$SG90432 DB	'vec3', 00H
	ORG $+3
$SG90435 DB	'vec4', 00H
	ORG $+3
$SG90438 DB	'mat2x2', 00H
	ORG $+1
$SG90441 DB	'mat2x3', 00H
	ORG $+1
$SG90444 DB	'mat2x4', 00H
	ORG $+1
$SG90447 DB	'mat3x2', 00H
	ORG $+1
$SG90450 DB	'mat3x3', 00H
	ORG $+1
$SG90453 DB	'mat3x4', 00H
	ORG $+1
$SG90456 DB	'mat4x2', 00H
	ORG $+1
$SG90459 DB	'mat4x3', 00H
	ORG $+1
$SG90462 DB	'mat4x4', 00H
	ORG $+1
$SG90463 DB	'unknown', 00H
$SG82314 DB	': ', 00H
	ORG $+1
$SG82315 DB	': ', 00H
	ORG $+1
$SG82450 DB	': ', 00H
	ORG $+1
$SG82451 DB	': ', 00H
	ORG $+1
$SG82562 DB	': ', 00H
	ORG $+1
$SG82563 DB	': ', 00H
	ORG $+1
$SG82607 DB	': ', 00H
	ORG $+1
$SG82608 DB	': ', 00H
	ORG $+1
$SG82719 DB	': ', 00H
	ORG $+1
$SG82720 DB	': ', 00H
	ORG $+1
$SG82764 DB	': ', 00H
	ORG $+1
$SG82765 DB	': ', 00H
	ORG $+1
$SG83053 DB	': ', 00H
	ORG $+1
$SG83054 DB	': ', 00H
	ORG $+1
$SG83055 DB	': ', 00H
	ORG $+1
$SG83056 DB	': ', 00H
	ORG $+1
$SG83057 DB	': ', 00H
	ORG $+1
$SG83058 DB	': ', 00H
	ORG $+1
$SG83141 DB	': ', 00H
	ORG $+1
$SG83142 DB	': ', 00H
	ORG $+1
$SG83143 DB	': ', 00H
	ORG $+1
$SG83144 DB	': ', 00H
	ORG $+1
$SG83145 DB	': ', 00H
	ORG $+1
$SG83146 DB	': ', 00H
	ORG $+1
$SG91424 DB	'quat', 00H
	ORG $+3
$SG91427 DB	'vec2', 00H
	ORG $+3
$SG91430 DB	'vec3', 00H
	ORG $+3
$SG91433 DB	'vec4', 00H
	ORG $+3
$SG91436 DB	'mat2x2', 00H
	ORG $+1
$SG91439 DB	'mat2x3', 00H
	ORG $+1
$SG91442 DB	'mat2x4', 00H
	ORG $+1
$SG91445 DB	'mat3x2', 00H
	ORG $+1
$SG91448 DB	'mat3x3', 00H
	ORG $+1
$SG91451 DB	'mat3x4', 00H
	ORG $+1
$SG91454 DB	'mat4x2', 00H
	ORG $+1
$SG91457 DB	'mat4x3', 00H
	ORG $+1
$SG91460 DB	'mat4x4', 00H
	ORG $+1
$SG91461 DB	'unknown', 00H
$SG91496 DB	'quat', 00H
	ORG $+3
$SG91499 DB	'vec2', 00H
	ORG $+3
$SG91502 DB	'vec3', 00H
	ORG $+3
$SG91505 DB	'vec4', 00H
	ORG $+3
$SG91508 DB	'mat2x2', 00H
	ORG $+1
$SG91511 DB	'mat2x3', 00H
	ORG $+1
$SG91514 DB	'mat2x4', 00H
	ORG $+1
$SG91517 DB	'mat3x2', 00H
	ORG $+1
$SG91520 DB	'mat3x3', 00H
	ORG $+1
$SG91523 DB	'mat3x4', 00H
	ORG $+1
$SG91526 DB	'mat4x2', 00H
	ORG $+1
$SG91529 DB	'mat4x3', 00H
	ORG $+1
$SG91532 DB	'mat4x4', 00H
	ORG $+1
$SG91533 DB	'unknown', 00H
$SG83797 DB	': ', 00H
	ORG $+1
$SG83798 DB	': ', 00H
	ORG $+1
$SG83799 DB	': ', 00H
	ORG $+1
$SG83800 DB	': ', 00H
	ORG $+1
$SG83801 DB	': ', 00H
	ORG $+1
$SG83802 DB	': ', 00H
	ORG $+1
$SG83885 DB	': ', 00H
	ORG $+1
$SG83886 DB	': ', 00H
	ORG $+1
$SG83887 DB	': ', 00H
	ORG $+1
$SG83888 DB	': ', 00H
	ORG $+1
$SG83889 DB	': ', 00H
	ORG $+1
$SG83890 DB	': ', 00H
	ORG $+1
$SG92465 DB	'quat', 00H
	ORG $+3
$SG92468 DB	'vec2', 00H
	ORG $+3
$SG92471 DB	'vec3', 00H
	ORG $+3
$SG92474 DB	'vec4', 00H
	ORG $+3
$SG92477 DB	'mat2x2', 00H
	ORG $+1
$SG92480 DB	'mat2x3', 00H
	ORG $+1
$SG92483 DB	'mat2x4', 00H
	ORG $+1
$SG92486 DB	'mat3x2', 00H
	ORG $+1
$SG92489 DB	'mat3x3', 00H
	ORG $+1
$SG92492 DB	'mat3x4', 00H
	ORG $+1
$SG92495 DB	'mat4x2', 00H
	ORG $+1
$SG92498 DB	'mat4x3', 00H
	ORG $+1
$SG92501 DB	'mat4x4', 00H
	ORG $+1
$SG92502 DB	'unknown', 00H
$SG92537 DB	'quat', 00H
	ORG $+3
$SG92540 DB	'vec2', 00H
	ORG $+3
$SG92543 DB	'vec3', 00H
	ORG $+3
$SG92546 DB	'vec4', 00H
	ORG $+3
$SG92549 DB	'mat2x2', 00H
	ORG $+1
$SG92552 DB	'mat2x3', 00H
	ORG $+1
$SG92555 DB	'mat2x4', 00H
	ORG $+1
$SG92558 DB	'mat3x2', 00H
	ORG $+1
$SG92561 DB	'mat3x3', 00H
	ORG $+1
$SG92564 DB	'mat3x4', 00H
	ORG $+1
$SG92567 DB	'mat4x2', 00H
	ORG $+1
$SG92570 DB	'mat4x3', 00H
	ORG $+1
$SG92573 DB	'mat4x4', 00H
	ORG $+1
$SG92574 DB	'unknown', 00H
$SG92624 DB	'quat', 00H
	ORG $+3
$SG92627 DB	'vec2', 00H
	ORG $+3
$SG92630 DB	'vec3', 00H
	ORG $+3
$SG92633 DB	'vec4', 00H
	ORG $+3
$SG92636 DB	'mat2x2', 00H
	ORG $+1
$SG92639 DB	'mat2x3', 00H
	ORG $+1
$SG92642 DB	'mat2x4', 00H
	ORG $+1
$SG92645 DB	'mat3x2', 00H
	ORG $+1
$SG92648 DB	'mat3x3', 00H
	ORG $+1
$SG92651 DB	'mat3x4', 00H
	ORG $+1
$SG92654 DB	'mat4x2', 00H
	ORG $+1
$SG92657 DB	'mat4x3', 00H
	ORG $+1
$SG92660 DB	'mat4x4', 00H
	ORG $+1
$SG92661 DB	'unknown', 00H
$SG92696 DB	'quat', 00H
	ORG $+3
$SG92699 DB	'vec2', 00H
	ORG $+3
$SG92702 DB	'vec3', 00H
	ORG $+3
$SG92705 DB	'vec4', 00H
	ORG $+3
$SG92708 DB	'mat2x2', 00H
	ORG $+1
$SG92711 DB	'mat2x3', 00H
	ORG $+1
$SG92714 DB	'mat2x4', 00H
	ORG $+1
$SG92717 DB	'mat3x2', 00H
	ORG $+1
$SG92720 DB	'mat3x3', 00H
	ORG $+1
$SG92723 DB	'mat3x4', 00H
	ORG $+1
$SG92726 DB	'mat4x2', 00H
	ORG $+1
$SG92729 DB	'mat4x3', 00H
	ORG $+1
$SG92732 DB	'mat4x4', 00H
	ORG $+1
$SG84540 DB	': ', 00H
	ORG $+1
$SG84541 DB	': ', 00H
	ORG $+1
$SG92733 DB	'unknown', 00H
$SG84542 DB	': ', 00H
	ORG $+1
$SG84543 DB	': ', 00H
	ORG $+1
$SG84544 DB	': ', 00H
	ORG $+1
$SG84545 DB	': ', 00H
	ORG $+1
$SG92768 DB	'quat', 00H
	ORG $+3
$SG92771 DB	'vec2', 00H
	ORG $+3
$SG92774 DB	'vec3', 00H
	ORG $+3
$SG92777 DB	'vec4', 00H
	ORG $+3
$SG92780 DB	'mat2x2', 00H
	ORG $+1
$SG92783 DB	'mat2x3', 00H
	ORG $+1
$SG92786 DB	'mat2x4', 00H
	ORG $+1
$SG92789 DB	'mat3x2', 00H
	ORG $+1
$SG92792 DB	'mat3x3', 00H
	ORG $+1
$SG92795 DB	'mat3x4', 00H
	ORG $+1
$SG92798 DB	'mat4x2', 00H
	ORG $+1
$SG92801 DB	'mat4x3', 00H
	ORG $+1
$SG92804 DB	'mat4x4', 00H
	ORG $+1
$SG92805 DB	'unknown', 00H
$SG84628 DB	': ', 00H
	ORG $+1
$SG84629 DB	': ', 00H
	ORG $+1
$SG84630 DB	': ', 00H
	ORG $+1
$SG84631 DB	': ', 00H
	ORG $+1
$SG84632 DB	': ', 00H
	ORG $+1
$SG84633 DB	': ', 00H
	ORG $+1
$SG92840 DB	'quat', 00H
	ORG $+3
$SG92843 DB	'vec2', 00H
	ORG $+3
$SG92846 DB	'vec3', 00H
	ORG $+3
$SG92849 DB	'vec4', 00H
	ORG $+3
$SG92852 DB	'mat2x2', 00H
	ORG $+1
$SG92855 DB	'mat2x3', 00H
	ORG $+1
$SG92858 DB	'mat2x4', 00H
	ORG $+1
$SG92861 DB	'mat3x2', 00H
	ORG $+1
$SG92864 DB	'mat3x3', 00H
	ORG $+1
$SG92867 DB	'mat3x4', 00H
	ORG $+1
$SG92870 DB	'mat4x2', 00H
	ORG $+1
$SG92873 DB	'mat4x3', 00H
	ORG $+1
$SG92876 DB	'mat4x4', 00H
	ORG $+1
$SG92877 DB	'unknown', 00H
$SG92912 DB	'quat', 00H
	ORG $+3
$SG92915 DB	'vec2', 00H
	ORG $+3
$SG92918 DB	'vec3', 00H
	ORG $+3
$SG92921 DB	'vec4', 00H
	ORG $+3
$SG92924 DB	'mat2x2', 00H
	ORG $+1
$SG92927 DB	'mat2x3', 00H
	ORG $+1
$SG92930 DB	'mat2x4', 00H
	ORG $+1
$SG92933 DB	'mat3x2', 00H
	ORG $+1
$SG92936 DB	'mat3x3', 00H
	ORG $+1
$SG92939 DB	'mat3x4', 00H
	ORG $+1
$SG92942 DB	'mat4x2', 00H
	ORG $+1
$SG92945 DB	'mat4x3', 00H
	ORG $+1
$SG92948 DB	'mat4x4', 00H
	ORG $+1
$SG92949 DB	'unknown', 00H
$SG92984 DB	'quat', 00H
	ORG $+3
$SG92987 DB	'vec2', 00H
	ORG $+3
$SG92990 DB	'vec3', 00H
	ORG $+3
$SG92993 DB	'vec4', 00H
	ORG $+3
$SG92996 DB	'mat2x2', 00H
	ORG $+1
$SG92999 DB	'mat2x3', 00H
	ORG $+1
$SG93002 DB	'mat2x4', 00H
	ORG $+1
$SG93005 DB	'mat3x2', 00H
	ORG $+1
$SG93008 DB	'mat3x3', 00H
	ORG $+1
$SG93011 DB	'mat3x4', 00H
	ORG $+1
$SG93014 DB	'mat4x2', 00H
	ORG $+1
$SG93017 DB	'mat4x3', 00H
	ORG $+1
$SG93020 DB	'mat4x4', 00H
	ORG $+1
$SG93021 DB	'unknown', 00H
$SG93056 DB	'quat', 00H
	ORG $+3
$SG93059 DB	'vec2', 00H
	ORG $+3
$SG93062 DB	'vec3', 00H
	ORG $+3
$SG93065 DB	'vec4', 00H
	ORG $+3
$SG93068 DB	'mat2x2', 00H
	ORG $+1
$SG93071 DB	'mat2x3', 00H
	ORG $+1
$SG93074 DB	'mat2x4', 00H
	ORG $+1
$SG93077 DB	'mat3x2', 00H
	ORG $+1
$SG93080 DB	'mat3x3', 00H
	ORG $+1
$SG93083 DB	'mat3x4', 00H
	ORG $+1
$SG93086 DB	'mat4x2', 00H
	ORG $+1
$SG93089 DB	'mat4x3', 00H
	ORG $+1
$SG93092 DB	'mat4x4', 00H
	ORG $+1
$SG93093 DB	'unknown', 00H
$SG93128 DB	'quat', 00H
	ORG $+3
$SG93131 DB	'vec2', 00H
	ORG $+3
$SG93134 DB	'vec3', 00H
	ORG $+3
$SG93137 DB	'vec4', 00H
	ORG $+3
$SG93140 DB	'mat2x2', 00H
	ORG $+1
$SG93143 DB	'mat2x3', 00H
	ORG $+1
$SG93146 DB	'mat2x4', 00H
	ORG $+1
$SG93149 DB	'mat3x2', 00H
	ORG $+1
$SG93152 DB	'mat3x3', 00H
	ORG $+1
$SG93155 DB	'mat3x4', 00H
	ORG $+1
$SG93158 DB	'mat4x2', 00H
	ORG $+1
$SG93161 DB	'mat4x3', 00H
	ORG $+1
$SG93164 DB	'mat4x4', 00H
	ORG $+1
$SG93165 DB	'unknown', 00H
$SG93200 DB	'quat', 00H
	ORG $+3
$SG93203 DB	'vec2', 00H
	ORG $+3
$SG93206 DB	'vec3', 00H
	ORG $+3
$SG93209 DB	'vec4', 00H
	ORG $+3
$SG93212 DB	'mat2x2', 00H
	ORG $+1
$SG93215 DB	'mat2x3', 00H
	ORG $+1
$SG93218 DB	'mat2x4', 00H
	ORG $+1
$SG93221 DB	'mat3x2', 00H
	ORG $+1
$SG93224 DB	'mat3x3', 00H
	ORG $+1
$SG93227 DB	'mat3x4', 00H
	ORG $+1
$SG93230 DB	'mat4x2', 00H
	ORG $+1
$SG93233 DB	'mat4x3', 00H
	ORG $+1
$SG93236 DB	'mat4x4', 00H
	ORG $+1
$SG93237 DB	'unknown', 00H
$SG93272 DB	'quat', 00H
	ORG $+3
$SG93275 DB	'vec2', 00H
	ORG $+3
$SG93278 DB	'vec3', 00H
	ORG $+3
$SG93281 DB	'vec4', 00H
	ORG $+3
$SG93284 DB	'mat2x2', 00H
	ORG $+1
$SG93287 DB	'mat2x3', 00H
	ORG $+1
$SG93290 DB	'mat2x4', 00H
	ORG $+1
$SG93293 DB	'mat3x2', 00H
	ORG $+1
$SG93296 DB	'mat3x3', 00H
	ORG $+1
$SG93299 DB	'mat3x4', 00H
	ORG $+1
$SG93302 DB	'mat4x2', 00H
	ORG $+1
$SG93305 DB	'mat4x3', 00H
	ORG $+1
$SG93308 DB	'mat4x4', 00H
	ORG $+1
$SG93309 DB	'unknown', 00H
$SG93344 DB	'quat', 00H
	ORG $+3
$SG93347 DB	'vec2', 00H
	ORG $+3
$SG93350 DB	'vec3', 00H
	ORG $+3
$SG93353 DB	'vec4', 00H
	ORG $+3
$SG93356 DB	'mat2x2', 00H
	ORG $+1
$SG93359 DB	'mat2x3', 00H
	ORG $+1
$SG93362 DB	'mat2x4', 00H
	ORG $+1
$SG93365 DB	'mat3x2', 00H
	ORG $+1
$SG93368 DB	'mat3x3', 00H
	ORG $+1
$SG93371 DB	'mat3x4', 00H
	ORG $+1
$SG93374 DB	'mat4x2', 00H
	ORG $+1
$SG93377 DB	'mat4x3', 00H
	ORG $+1
$SG93380 DB	'mat4x4', 00H
	ORG $+1
$SG93381 DB	'unknown', 00H
$SG93416 DB	'quat', 00H
	ORG $+3
$SG93419 DB	'vec2', 00H
	ORG $+3
$SG93422 DB	'vec3', 00H
	ORG $+3
$SG93425 DB	'vec4', 00H
	ORG $+3
$SG93428 DB	'mat2x2', 00H
	ORG $+1
$SG93431 DB	'mat2x3', 00H
	ORG $+1
$SG93434 DB	'mat2x4', 00H
	ORG $+1
$SG93437 DB	'mat3x2', 00H
	ORG $+1
$SG93440 DB	'mat3x3', 00H
	ORG $+1
$SG93443 DB	'mat3x4', 00H
	ORG $+1
$SG93446 DB	'mat4x2', 00H
	ORG $+1
$SG93449 DB	'mat4x3', 00H
	ORG $+1
$SG93452 DB	'mat4x4', 00H
	ORG $+1
$SG93453 DB	'unknown', 00H
$SG93503 DB	'quat', 00H
	ORG $+3
$SG93506 DB	'vec2', 00H
	ORG $+3
$SG93509 DB	'vec3', 00H
	ORG $+3
$SG93512 DB	'vec4', 00H
	ORG $+3
$SG93515 DB	'mat2x2', 00H
	ORG $+1
$SG93518 DB	'mat2x3', 00H
	ORG $+1
$SG93521 DB	'mat2x4', 00H
	ORG $+1
$SG93524 DB	'mat3x2', 00H
	ORG $+1
$SG93527 DB	'mat3x3', 00H
	ORG $+1
$SG93530 DB	'mat3x4', 00H
	ORG $+1
$SG93533 DB	'mat4x2', 00H
	ORG $+1
$SG93536 DB	'mat4x3', 00H
	ORG $+1
$SG93539 DB	'mat4x4', 00H
	ORG $+1
$SG93540 DB	'unknown', 00H
$SG93575 DB	'quat', 00H
	ORG $+3
$SG93578 DB	'vec2', 00H
	ORG $+3
$SG93581 DB	'vec3', 00H
	ORG $+3
$SG93584 DB	'vec4', 00H
	ORG $+3
$SG93587 DB	'mat2x2', 00H
	ORG $+1
$SG93590 DB	'mat2x3', 00H
	ORG $+1
$SG93593 DB	'mat2x4', 00H
	ORG $+1
$SG93596 DB	'mat3x2', 00H
	ORG $+1
$SG93599 DB	'mat3x3', 00H
	ORG $+1
$SG93602 DB	'mat3x4', 00H
	ORG $+1
$SG93605 DB	'mat4x2', 00H
	ORG $+1
$SG93608 DB	'mat4x3', 00H
	ORG $+1
$SG93611 DB	'mat4x4', 00H
	ORG $+1
$SG93612 DB	'unknown', 00H
$SG93647 DB	'quat', 00H
	ORG $+3
$SG93650 DB	'vec2', 00H
	ORG $+3
$SG93653 DB	'vec3', 00H
	ORG $+3
$SG93656 DB	'vec4', 00H
	ORG $+3
$SG93659 DB	'mat2x2', 00H
	ORG $+1
$SG93662 DB	'mat2x3', 00H
	ORG $+1
$SG93665 DB	'mat2x4', 00H
	ORG $+1
$SG93668 DB	'mat3x2', 00H
	ORG $+1
$SG93671 DB	'mat3x3', 00H
	ORG $+1
$SG93674 DB	'mat3x4', 00H
	ORG $+1
$SG93677 DB	'mat4x2', 00H
	ORG $+1
$SG93680 DB	'mat4x3', 00H
	ORG $+1
$SG93683 DB	'mat4x4', 00H
	ORG $+1
$SG93684 DB	'unknown', 00H
$SG93719 DB	'quat', 00H
	ORG $+3
$SG93722 DB	'vec2', 00H
	ORG $+3
$SG93725 DB	'vec3', 00H
	ORG $+3
$SG93728 DB	'vec4', 00H
	ORG $+3
$SG93731 DB	'mat2x2', 00H
	ORG $+1
$SG93734 DB	'mat2x3', 00H
	ORG $+1
$SG93737 DB	'mat2x4', 00H
	ORG $+1
$SG93740 DB	'mat3x2', 00H
	ORG $+1
$SG93743 DB	'mat3x3', 00H
	ORG $+1
$SG93746 DB	'mat3x4', 00H
	ORG $+1
$SG93749 DB	'mat4x2', 00H
	ORG $+1
$SG93752 DB	'mat4x3', 00H
	ORG $+1
$SG93755 DB	'mat4x4', 00H
	ORG $+1
$SG93756 DB	'unknown', 00H
$SG93791 DB	'quat', 00H
	ORG $+3
$SG93794 DB	'vec2', 00H
	ORG $+3
$SG93797 DB	'vec3', 00H
	ORG $+3
$SG93800 DB	'vec4', 00H
	ORG $+3
$SG93803 DB	'mat2x2', 00H
	ORG $+1
$SG93806 DB	'mat2x3', 00H
	ORG $+1
$SG93809 DB	'mat2x4', 00H
	ORG $+1
$SG93812 DB	'mat3x2', 00H
	ORG $+1
$SG93815 DB	'mat3x3', 00H
	ORG $+1
$SG93818 DB	'mat3x4', 00H
	ORG $+1
$SG93821 DB	'mat4x2', 00H
	ORG $+1
$SG93824 DB	'mat4x3', 00H
	ORG $+1
$SG93827 DB	'mat4x4', 00H
	ORG $+1
$SG93828 DB	'unknown', 00H
$SG93863 DB	'quat', 00H
	ORG $+3
$SG93866 DB	'vec2', 00H
	ORG $+3
$SG93869 DB	'vec3', 00H
	ORG $+3
$SG93872 DB	'vec4', 00H
	ORG $+3
$SG93875 DB	'mat2x2', 00H
	ORG $+1
$SG93878 DB	'mat2x3', 00H
	ORG $+1
$SG93881 DB	'mat2x4', 00H
	ORG $+1
$SG93884 DB	'mat3x2', 00H
	ORG $+1
$SG93887 DB	'mat3x3', 00H
	ORG $+1
$SG93890 DB	'mat3x4', 00H
	ORG $+1
$SG93893 DB	'mat4x2', 00H
	ORG $+1
$SG93896 DB	'mat4x3', 00H
	ORG $+1
$SG93899 DB	'mat4x4', 00H
	ORG $+1
$SG93900 DB	'unknown', 00H
$SG93922 DB	'uhi', 00H
$SG93924 DB	'umd', 00H
$SG93926 DB	'ulo', 00H
$SG85818 DB	'>: ', 00H
$SG85819 DB	'mat4x4<', 00H
$SG85820 DB	'>: ', 00H
$SG85822 DB	'>: ', 00H
$SG85821 DB	'mat4x3<', 00H
$SG85823 DB	'mat4x2<', 00H
$SG85824 DB	'>: ', 00H
$SG85826 DB	'>: ', 00H
$SG85825 DB	'mat3x4<', 00H
$SG85827 DB	'mat3x3<', 00H
$SG85828 DB	'>: ', 00H
$SG85830 DB	'>: ', 00H
$SG85829 DB	'mat3x2<', 00H
$SG85831 DB	'mat2x4<', 00H
$SG85832 DB	'>: ', 00H
$SG85834 DB	'>: ', 00H
$SG85833 DB	'mat2x3<', 00H
$SG85835 DB	'mat2x2<', 00H
$SG85836 DB	'>: ', 00H
$SG85838 DB	'>: ', 00H
$SG85837 DB	'mat4x4<', 00H
$SG85839 DB	'mat4x3<', 00H
$SG85840 DB	'>: ', 00H
$SG85842 DB	'>: ', 00H
$SG85841 DB	'mat4x2<', 00H
$SG85843 DB	'mat3x4<', 00H
$SG85844 DB	'>: ', 00H
$SG85846 DB	'>: ', 00H
$SG85845 DB	'mat3x3<', 00H
$SG85847 DB	'mat3x2<', 00H
$SG85848 DB	'>: ', 00H
$SG85850 DB	'>: ', 00H
$SG85849 DB	'mat2x4<', 00H
$SG85851 DB	'mat2x3<', 00H
$SG94044 DB	'uhi', 00H
$SG85852 DB	'>: ', 00H
$SG85853 DB	'mat2x2<', 00H
$SG94046 DB	'umd', 00H
$SG94048 DB	'ulo', 00H
$SG94601 DB	'invalid argument', 00H
	ORG $+3
$SG94602 DB	'%s', 00H
	ORG $+1
$SG94606 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG94603 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.29.30037\include\xmemory', 00H
$SG87561 DB	'>: ', 00H
	ORG $+4
$SG94604 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '9', 00H, '.', 00H, '3', 00H, '0', 00H
	DB	'0', 00H, '3', 00H, '7', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG94605 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG87562 DB	'mat4x4<', 00H
$SG87563 DB	'>: ', 00H
$SG87565 DB	'>: ', 00H
$SG87564 DB	'mat4x3<', 00H
$SG87566 DB	'mat4x2<', 00H
$SG87567 DB	'>: ', 00H
$SG87569 DB	'>: ', 00H
$SG87568 DB	'mat3x4<', 00H
$SG87570 DB	'mat3x3<', 00H
$SG87571 DB	'>: ', 00H
$SG87573 DB	'>: ', 00H
$SG87572 DB	'mat3x2<', 00H
$SG87574 DB	'mat2x4<', 00H
$SG87575 DB	'>: ', 00H
$SG87577 DB	'>: ', 00H
$SG87576 DB	'mat2x3<', 00H
$SG87578 DB	'mat2x2<', 00H
$SG87579 DB	'>: ', 00H
$SG87581 DB	'>: ', 00H
$SG87580 DB	'mat4x4<', 00H
$SG87582 DB	'mat4x3<', 00H
$SG87583 DB	'>: ', 00H
$SG87585 DB	'>: ', 00H
$SG87584 DB	'mat4x2<', 00H
$SG87586 DB	'mat3x4<', 00H
$SG87587 DB	'>: ', 00H
$SG87589 DB	'>: ', 00H
$SG87588 DB	'mat3x3<', 00H
$SG87590 DB	'mat3x2<', 00H
$SG87591 DB	'>: ', 00H
$SG87593 DB	'>: ', 00H
$SG87592 DB	'mat2x4<', 00H
$SG87594 DB	'mat2x3<', 00H
$SG87595 DB	'>: ', 00H
	ORG $+4
$SG87596 DB	'mat2x2<', 00H
	ORG $+8
$SG89751 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.29.30037\include\xlocale', 00H
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	wmemcpy
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?length@?$tvec2@M$0A@@glm@@SAHXZ		; glm::tvec2<float,0>::length
PUBLIC	??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z		; glm::tvec2<float,0>::operator[]
PUBLIC	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z		; glm::tvec2<float,0>::operator[]
PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@XZ			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	?length@?$tvec4@M$0A@@glm@@SAHXZ		; glm::tvec4<float,0>::length
PUBLIC	??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z		; glm::tvec4<float,0>::operator[]
PUBLIC	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z		; glm::tvec4<float,0>::operator[]
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@XZ			; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked
PUBLIC	?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked
PUBLIC	?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked
PUBLIC	?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_locked
PUBLIC	?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
PUBLIC	?move@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_Char_traits<wchar_t,unsigned short>::move
PUBLIC	?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z	; std::_WChar_traits<wchar_t>::assign
PUBLIC	?eq@?$_WChar_traits@_W@std@@SA_NAEB_W0@Z	; std::_WChar_traits<wchar_t>::eq
PUBLIC	?to_char_type@?$_WChar_traits@_W@std@@SA_WAEBG@Z ; std::_WChar_traits<wchar_t>::to_char_type
PUBLIC	?to_int_type@?$_WChar_traits@_W@std@@SAGAEB_W@Z	; std::_WChar_traits<wchar_t>::to_int_type
PUBLIC	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
PUBLIC	?not_eof@?$_WChar_traits@_W@std@@SAGAEBG@Z	; std::_WChar_traits<wchar_t>::not_eof
PUBLIC	?eof@?$_WChar_traits@_W@std@@SAGXZ		; std::_WChar_traits<wchar_t>::eof
PUBLIC	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::copy
PUBLIC	?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::move
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z	; std::_Narrow_char_traits<char,int>::eq
PUBLIC	?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
PUBLIC	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ; std::_Narrow_char_traits<char,int>::not_eof
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0?$allocator@_W@std@@QEAA@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::data
PUBLIC	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
PUBLIC	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	??8type_info@@QEBA_NAEBV0@@Z			; type_info::operator==
PUBLIC	?name@type_info@@QEBAPEBDXZ			; type_info::name
PUBLIC	??0bad_cast@std@@QEAA@XZ			; std::bad_cast::bad_cast
PUBLIC	??1bad_cast@std@@UEAA@XZ			; std::bad_cast::~bad_cast
PUBLIC	??0bad_cast@std@@QEAA@AEBV01@@Z			; std::bad_cast::bad_cast
PUBLIC	??_Gbad_cast@std@@UEAAPEAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	?_Throw_bad_cast@std@@YAXXZ			; std::_Throw_bad_cast
PUBLIC	??1locale@std@@QEAA@XZ				; std::locale::~locale
PUBLIC	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z	; std::locale::_Getfacet
PUBLIC	??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPEA_WPEB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??0precision@io@glm@@QEAA@I@Z			; glm::io::precision::precision
PUBLIC	??0width@io@glm@@QEAA@I@Z			; glm::io::width::width
PUBLIC	??0order@io@glm@@QEAA@W4order_type@12@@Z	; glm::io::order::order
PUBLIC	?fixed@std@@YAAEAVios_base@1@AEAV21@@Z		; std::fixed
PUBLIC	?right@std@@YAAEAVios_base@1@AEAV21@@Z		; std::right
PUBLIC	main
PUBLIC	??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >
PUBLIC	??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ; test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
PUBLIC	??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >
PUBLIC	??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ; test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
PUBLIC	??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
PUBLIC	??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ; test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
PUBLIC	??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >
PUBLIC	??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ; test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
PUBLIC	??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >
PUBLIC	??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ; test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
PUBLIC	??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
PUBLIC	??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ; test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
PUBLIC	??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
PUBLIC	??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
PUBLIC	??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ		; std::fpos<_Mbstatet>::operator __int64
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
PUBLIC	??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ; std::move<std::allocator<wchar_t> &>
PUBLIC	??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z	; std::_Destroy_in_place<wchar_t *>
PUBLIC	??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBA@QEA_W_KQEB_W@Z ; <lambda_3fa8b2c8193a0f3144fc4b1b8f243931>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>
PUBLIC	??$_Construct_in_place@PEA_WAEAPEA_W@std@@YAXAEAPEA_W0@Z ; std::_Construct_in_place<wchar_t *,wchar_t * &>
PUBLIC	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z ; std::_Construct_in_place<char *,char * &>
PUBLIC	??$max@_K@std@@YAAEB_KAEB_K0@Z			; std::max<unsigned __int64>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	?pointer_to@?$pointer_traits@PEA_W@std@@SAPEA_WAEA_W@Z ; std::pointer_traits<wchar_t *>::pointer_to
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >
PUBLIC	??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > const >
PUBLIC	?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ; std::pointer_traits<char *>::pointer_to
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Get_size_of_n@$01@std@@YA_K_K@Z		; std::_Get_size_of_n<2>
PUBLIC	??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ; std::default_delete<std::_Facet_base>::operator()
PUBLIC	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
PUBLIC	?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
PUBLIC	??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
PUBLIC	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	?length@?$tquat@M$0A@@glm@@SAHXZ		; glm::tquat<float,0>::length
PUBLIC	??A?$tquat@M$0A@@glm@@QEBAAEBMH@Z		; glm::tquat<float,0>::operator[]
PUBLIC	??0?$tquat@M$0A@@glm@@QEAA@AEBM000@Z		; glm::tquat<float,0>::tquat<float,0>
PUBLIC	??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >
PUBLIC	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
PUBLIC	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
PUBLIC	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
PUBLIC	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
PUBLIC	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
PUBLIC	??$unformatted@DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ios@DU?$char_traits@D@std@@@std@@AEAV23@@Z ; glm::io::unformatted<char,std::char_traits<char> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
PUBLIC	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??$unformatted@_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@AEAV23@@Z ; glm::io::unformatted<wchar_t,std::char_traits<wchar_t> >
PUBLIC	?length@?$tquat@H$00@glm@@SAHXZ			; glm::tquat<int,1>::length
PUBLIC	??A?$tquat@H$00@glm@@QEBAAEBHH@Z		; glm::tquat<int,1>::operator[]
PUBLIC	??0?$tquat@H$00@glm@@QEAA@AEBH000@Z		; glm::tquat<int,1>::tquat<int,1>
PUBLIC	??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z ; glm::operator<<<char,std::char_traits<char>,int,1>
PUBLIC	??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
PUBLIC	?length@?$tquat@I$01@glm@@SAHXZ			; glm::tquat<unsigned int,2>::length
PUBLIC	??A?$tquat@I$01@glm@@QEBAAEBIH@Z		; glm::tquat<unsigned int,2>::operator[]
PUBLIC	??0?$tquat@I$01@glm@@QEAA@AEBI000@Z		; glm::tquat<unsigned int,2>::tquat<unsigned int,2>
PUBLIC	??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
PUBLIC	??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
PUBLIC	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z		; glm::tvec2<float,0>::tvec2<float,0><int,int>
PUBLIC	?length@?$tvec3@M$0A@@glm@@SAHXZ		; glm::tvec3<float,0>::length
PUBLIC	??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z		; glm::tvec3<float,0>::operator[]
PUBLIC	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z		; glm::tvec3<float,0>::operator[]
PUBLIC	??0?$tvec3@M$0A@@glm@@QEAA@XZ			; glm::tvec3<float,0>::tvec3<float,0>
PUBLIC	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z		; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
PUBLIC	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
PUBLIC	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
PUBLIC	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
PUBLIC	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
PUBLIC	?length@?$tvec2@H$00@glm@@SAHXZ			; glm::tvec2<int,1>::length
PUBLIC	??A?$tvec2@H$00@glm@@QEBAAEBHH@Z		; glm::tvec2<int,1>::operator[]
PUBLIC	??0?$tvec2@H$00@glm@@QEAA@HH@Z			; glm::tvec2<int,1>::tvec2<int,1>
PUBLIC	?length@?$tvec3@H$00@glm@@SAHXZ			; glm::tvec3<int,1>::length
PUBLIC	??A?$tvec3@H$00@glm@@QEBAAEBHH@Z		; glm::tvec3<int,1>::operator[]
PUBLIC	??0?$tvec3@H$00@glm@@QEAA@HHH@Z			; glm::tvec3<int,1>::tvec3<int,1>
PUBLIC	?length@?$tvec4@H$00@glm@@SAHXZ			; glm::tvec4<int,1>::length
PUBLIC	??A?$tvec4@H$00@glm@@QEBAAEBHH@Z		; glm::tvec4<int,1>::operator[]
PUBLIC	??0?$tvec4@H$00@glm@@QEAA@HHHH@Z		; glm::tvec4<int,1>::tvec4<int,1>
PUBLIC	??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z ; glm::operator<<<char,std::char_traits<char>,int,1>
PUBLIC	??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z ; glm::operator<<<char,std::char_traits<char>,int,1>
PUBLIC	??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z ; glm::operator<<<char,std::char_traits<char>,int,1>
PUBLIC	??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
PUBLIC	??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
PUBLIC	??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
PUBLIC	?length@?$tvec2@I$01@glm@@SAHXZ			; glm::tvec2<unsigned int,2>::length
PUBLIC	??A?$tvec2@I$01@glm@@QEBAAEBIH@Z		; glm::tvec2<unsigned int,2>::operator[]
PUBLIC	??$?0HH@?$tvec2@I$01@glm@@QEAA@HH@Z		; glm::tvec2<unsigned int,2>::tvec2<unsigned int,2><int,int>
PUBLIC	?length@?$tvec3@I$01@glm@@SAHXZ			; glm::tvec3<unsigned int,2>::length
PUBLIC	??A?$tvec3@I$01@glm@@QEBAAEBIH@Z		; glm::tvec3<unsigned int,2>::operator[]
PUBLIC	??$?0HHH@?$tvec3@I$01@glm@@QEAA@HHH@Z		; glm::tvec3<unsigned int,2>::tvec3<unsigned int,2><int,int,int>
PUBLIC	?length@?$tvec4@I$01@glm@@SAHXZ			; glm::tvec4<unsigned int,2>::length
PUBLIC	??A?$tvec4@I$01@glm@@QEBAAEBIH@Z		; glm::tvec4<unsigned int,2>::operator[]
PUBLIC	??$?0HHHH@?$tvec4@I$01@glm@@QEAA@HHHH@Z		; glm::tvec4<unsigned int,2>::tvec4<unsigned int,2><int,int,int,int>
PUBLIC	??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
PUBLIC	??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
PUBLIC	??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
PUBLIC	??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
PUBLIC	??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
PUBLIC	??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
PUBLIC	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUorder@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
PUBLIC	??0?$tmat2x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z ; glm::tmat2x2<float,0>::tmat2x2<float,0>
PUBLIC	?length@?$tmat2x2@M$0A@@glm@@SAHXZ		; glm::tmat2x2<float,0>::length
PUBLIC	??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]
PUBLIC	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
PUBLIC	??0?$tmat2x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@0@Z ; glm::tmat2x3<float,0>::tmat2x3<float,0>
PUBLIC	?length@?$tmat2x3@M$0A@@glm@@SAHXZ		; glm::tmat2x3<float,0>::length
PUBLIC	??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat2x3<float,0>::operator[]
PUBLIC	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
PUBLIC	??0?$tmat2x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@0@Z ; glm::tmat2x4<float,0>::tmat2x4<float,0>
PUBLIC	?length@?$tmat2x4@M$0A@@glm@@SAHXZ		; glm::tmat2x4<float,0>::length
PUBLIC	??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat2x4<float,0>::operator[]
PUBLIC	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
PUBLIC	??0?$tmat3x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@00@Z ; glm::tmat3x2<float,0>::tmat3x2<float,0>
PUBLIC	?length@?$tmat3x2@M$0A@@glm@@SAHXZ		; glm::tmat3x2<float,0>::length
PUBLIC	??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat3x2<float,0>::operator[]
PUBLIC	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
PUBLIC	??0?$tmat3x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@00@Z ; glm::tmat3x3<float,0>::tmat3x3<float,0>
PUBLIC	?length@?$tmat3x3@M$0A@@glm@@SAHXZ		; glm::tmat3x3<float,0>::length
PUBLIC	??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat3x3<float,0>::operator[]
PUBLIC	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
PUBLIC	??0?$tmat3x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@00@Z ; glm::tmat3x4<float,0>::tmat3x4<float,0>
PUBLIC	?length@?$tmat3x4@M$0A@@glm@@SAHXZ		; glm::tmat3x4<float,0>::length
PUBLIC	??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat3x4<float,0>::operator[]
PUBLIC	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
PUBLIC	??0?$tmat4x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@000@Z ; glm::tmat4x2<float,0>::tmat4x2<float,0>
PUBLIC	?length@?$tmat4x2@M$0A@@glm@@SAHXZ		; glm::tmat4x2<float,0>::length
PUBLIC	??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat4x2<float,0>::operator[]
PUBLIC	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
PUBLIC	??0?$tmat4x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@000@Z ; glm::tmat4x3<float,0>::tmat4x3<float,0>
PUBLIC	?length@?$tmat4x3@M$0A@@glm@@SAHXZ		; glm::tmat4x3<float,0>::length
PUBLIC	??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat4x3<float,0>::operator[]
PUBLIC	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
PUBLIC	??0?$tmat4x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@000@Z ; glm::tmat4x4<float,0>::tmat4x4<float,0>
PUBLIC	?length@?$tmat4x4@M$0A@@glm@@SAHXZ		; glm::tmat4x4<float,0>::length
PUBLIC	??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat4x4<float,0>::operator[]
PUBLIC	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
PUBLIC	?length@?$tvec2@M$01@glm@@SAHXZ			; glm::tvec2<float,2>::length
PUBLIC	??A?$tvec2@M$01@glm@@QEAAAEAMH@Z		; glm::tvec2<float,2>::operator[]
PUBLIC	??A?$tvec2@M$01@glm@@QEBAAEBMH@Z		; glm::tvec2<float,2>::operator[]
PUBLIC	??0?$tvec2@M$01@glm@@QEAA@XZ			; glm::tvec2<float,2>::tvec2<float,2>
PUBLIC	??$?0HH@?$tvec2@M$01@glm@@QEAA@HH@Z		; glm::tvec2<float,2>::tvec2<float,2><int,int>
PUBLIC	?length@?$tvec3@M$01@glm@@SAHXZ			; glm::tvec3<float,2>::length
PUBLIC	??A?$tvec3@M$01@glm@@QEAAAEAMH@Z		; glm::tvec3<float,2>::operator[]
PUBLIC	??A?$tvec3@M$01@glm@@QEBAAEBMH@Z		; glm::tvec3<float,2>::operator[]
PUBLIC	??0?$tvec3@M$01@glm@@QEAA@XZ			; glm::tvec3<float,2>::tvec3<float,2>
PUBLIC	??$?0HHH@?$tvec3@M$01@glm@@QEAA@HHH@Z		; glm::tvec3<float,2>::tvec3<float,2><int,int,int>
PUBLIC	?length@?$tvec4@M$01@glm@@SAHXZ			; glm::tvec4<float,2>::length
PUBLIC	??A?$tvec4@M$01@glm@@QEAAAEAMH@Z		; glm::tvec4<float,2>::operator[]
PUBLIC	??A?$tvec4@M$01@glm@@QEBAAEBMH@Z		; glm::tvec4<float,2>::operator[]
PUBLIC	??0?$tvec4@M$01@glm@@QEAA@XZ			; glm::tvec4<float,2>::tvec4<float,2>
PUBLIC	??$?0HHHH@?$tvec4@M$01@glm@@QEAA@HHHH@Z		; glm::tvec4<float,2>::tvec4<float,2><int,int,int,int>
PUBLIC	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUorder@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??0?$tmat2x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@0@Z ; glm::tmat2x2<float,2>::tmat2x2<float,2>
PUBLIC	?length@?$tmat2x2@M$01@glm@@SAHXZ		; glm::tmat2x2<float,2>::length
PUBLIC	??A?$tmat2x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ; glm::tmat2x2<float,2>::operator[]
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
PUBLIC	??0?$tmat2x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@0@Z ; glm::tmat2x3<float,2>::tmat2x3<float,2>
PUBLIC	?length@?$tmat2x3@M$01@glm@@SAHXZ		; glm::tmat2x3<float,2>::length
PUBLIC	??A?$tmat2x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ; glm::tmat2x3<float,2>::operator[]
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
PUBLIC	??0?$tmat2x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@0@Z ; glm::tmat2x4<float,2>::tmat2x4<float,2>
PUBLIC	?length@?$tmat2x4@M$01@glm@@SAHXZ		; glm::tmat2x4<float,2>::length
PUBLIC	??A?$tmat2x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ; glm::tmat2x4<float,2>::operator[]
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
PUBLIC	??0?$tmat3x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@00@Z ; glm::tmat3x2<float,2>::tmat3x2<float,2>
PUBLIC	?length@?$tmat3x2@M$01@glm@@SAHXZ		; glm::tmat3x2<float,2>::length
PUBLIC	??A?$tmat3x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ; glm::tmat3x2<float,2>::operator[]
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
PUBLIC	??0?$tmat3x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@00@Z ; glm::tmat3x3<float,2>::tmat3x3<float,2>
PUBLIC	?length@?$tmat3x3@M$01@glm@@SAHXZ		; glm::tmat3x3<float,2>::length
PUBLIC	??A?$tmat3x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ; glm::tmat3x3<float,2>::operator[]
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
PUBLIC	??0?$tmat3x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@00@Z ; glm::tmat3x4<float,2>::tmat3x4<float,2>
PUBLIC	?length@?$tmat3x4@M$01@glm@@SAHXZ		; glm::tmat3x4<float,2>::length
PUBLIC	??A?$tmat3x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ; glm::tmat3x4<float,2>::operator[]
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
PUBLIC	??0?$tmat4x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@000@Z ; glm::tmat4x2<float,2>::tmat4x2<float,2>
PUBLIC	?length@?$tmat4x2@M$01@glm@@SAHXZ		; glm::tmat4x2<float,2>::length
PUBLIC	??A?$tmat4x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ; glm::tmat4x2<float,2>::operator[]
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
PUBLIC	??0?$tmat4x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@000@Z ; glm::tmat4x3<float,2>::tmat4x3<float,2>
PUBLIC	?length@?$tmat4x3@M$01@glm@@SAHXZ		; glm::tmat4x3<float,2>::length
PUBLIC	??A?$tmat4x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ; glm::tmat4x3<float,2>::operator[]
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
PUBLIC	??0?$tmat4x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@000@Z ; glm::tmat4x4<float,2>::tmat4x4<float,2>
PUBLIC	?length@?$tmat4x4@M$01@glm@@SAHXZ		; glm::tmat4x4<float,2>::length
PUBLIC	??A?$tmat4x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ; glm::tmat4x4<float,2>::operator[]
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ; std::forward<std::allocator<wchar_t> >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z	; std::addressof<wchar_t *>
PUBLIC	??$_Voidify_iter@PEAPEA_W@std@@YAPEAXPEAPEA_W@Z	; std::_Voidify_iter<wchar_t * *>
PUBLIC	??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z	; std::forward<wchar_t * &>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z	; std::_Voidify_iter<char * *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z	; std::forward<char * &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z	; std::forward<wchar_t * const &>
PUBLIC	??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z ; std::exchange<std::_Facet_base *,std::nullptr_t>
PUBLIC	??0?$format_punct@D@io@glm@@QEAA@_K@Z		; glm::io::format_punct<char>::format_punct<char>
PUBLIC	??0?$format_punct@D@io@glm@@QEAA@AEBV012@@Z	; glm::io::format_punct<char>::format_punct<char>
PUBLIC	??1?$format_punct@D@io@glm@@UEAA@XZ		; glm::io::format_punct<char>::~format_punct<char>
PUBLIC	??_G?$format_punct@D@io@glm@@UEAAPEAXI@Z	; glm::io::format_punct<char>::`scalar deleting destructor'
PUBLIC	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
PUBLIC	??$?0V?$format_punct@D@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@D@io@glm@@@Z ; std::locale::locale<glm::io::format_punct<char> >
PUBLIC	??0?$format_punct@_W@io@glm@@QEAA@_K@Z		; glm::io::format_punct<wchar_t>::format_punct<wchar_t>
PUBLIC	??0?$format_punct@_W@io@glm@@QEAA@AEBV012@@Z	; glm::io::format_punct<wchar_t>::format_punct<wchar_t>
PUBLIC	??1?$format_punct@_W@io@glm@@UEAA@XZ		; glm::io::format_punct<wchar_t>::~format_punct<wchar_t>
PUBLIC	??_G?$format_punct@_W@io@glm@@UEAAPEAXI@Z	; glm::io::format_punct<wchar_t>::`scalar deleting destructor'
PUBLIC	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
PUBLIC	??$?0V?$format_punct@_W@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@_W@io@glm@@@Z ; std::locale::locale<glm::io::format_punct<wchar_t> >
PUBLIC	??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
PUBLIC	??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
PUBLIC	??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Get_buffer_view
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
PUBLIC	??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
PUBLIC	??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>
PUBLIC	??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
PUBLIC	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
PUBLIC	??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Get_buffer_view
PUBLIC	?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
PUBLIC	?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos
PUBLIC	?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
PUBLIC	?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
PUBLIC	??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor'
PUBLIC	??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z ; std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>
PUBLIC	??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>
PUBLIC	??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>
PUBLIC	??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>
PUBLIC	??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>
PUBLIC	??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>
PUBLIC	??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>
PUBLIC	??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>
PUBLIC	??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>
PUBLIC	??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>
PUBLIC	??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>
PUBLIC	??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>
PUBLIC	??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x2,float,0>
PUBLIC	??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x3,float,0>
PUBLIC	??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x4,float,0>
PUBLIC	??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x2,float,0>
PUBLIC	??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x3,float,0>
PUBLIC	??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x4,float,0>
PUBLIC	??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x2,float,0>
PUBLIC	??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x3,float,0>
PUBLIC	??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x4,float,0>
PUBLIC	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x2,float,2>
PUBLIC	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x3,float,2>
PUBLIC	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x4,float,2>
PUBLIC	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x2,float,2>
PUBLIC	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x3,float,2>
PUBLIC	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x4,float,2>
PUBLIC	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x2,float,2>
PUBLIC	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x3,float,2>
PUBLIC	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x4,float,2>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$max@PEA_W@std@@YAAEBQEA_WAEBQEA_W0@Z		; std::max<wchar_t *>
PUBLIC	??$addressof@V?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::addressof<std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$max@PEAD@std@@YAAEBQEADAEBQEAD0@Z		; std::max<char *>
PUBLIC	??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$addressof@D@std@@YAPEADAEAD@Z		; std::addressof<char>
PUBLIC	??$addressof@_W@std@@YAPEA_WAEA_W@Z		; std::addressof<wchar_t>
PUBLIC	??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z ; std::has_facet<glm::io::format_punct<char> >
PUBLIC	??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z ; std::use_facet<glm::io::format_punct<char> >
PUBLIC	??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z ; std::has_facet<glm::io::format_punct<wchar_t> >
PUBLIC	??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z ; std::use_facet<glm::io::format_punct<wchar_t> >
PUBLIC	??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ; std::forward<std::_Facet_base * &>
PUBLIC	??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ; std::forward<std::allocator<char> const &>
PUBLIC	??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z ; std::forward<std::allocator<wchar_t> const &>
PUBLIC	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
PUBLIC	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z	; std::setfill<char>
PUBLIC	??0?$_Fillobj@D@std@@QEAA@D@Z			; std::_Fillobj<char>::_Fillobj<char>
PUBLIC	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
PUBLIC	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
PUBLIC	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z	; std::setfill<wchar_t>
PUBLIC	??0?$_Fillobj@_W@std@@QEAA@_W@Z			; std::_Fillobj<wchar_t>::_Fillobj<wchar_t>
PUBLIC	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
PUBLIC	??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z ; glm::row<glm::tmat2x2<float,0> >
PUBLIC	??$column@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z ; glm::column<glm::tmat2x2<float,0> >
PUBLIC	??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z ; glm::row<glm::tmat2x3<float,0> >
PUBLIC	??$column@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z ; glm::column<glm::tmat2x3<float,0> >
PUBLIC	??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z ; glm::row<glm::tmat2x4<float,0> >
PUBLIC	??$column@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z ; glm::column<glm::tmat2x4<float,0> >
PUBLIC	??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z ; glm::row<glm::tmat3x2<float,0> >
PUBLIC	??$column@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z ; glm::column<glm::tmat3x2<float,0> >
PUBLIC	??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z ; glm::row<glm::tmat3x3<float,0> >
PUBLIC	??$column@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z ; glm::column<glm::tmat3x3<float,0> >
PUBLIC	??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z ; glm::row<glm::tmat3x4<float,0> >
PUBLIC	??$column@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z ; glm::column<glm::tmat3x4<float,0> >
PUBLIC	??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z ; glm::row<glm::tmat4x2<float,0> >
PUBLIC	??$column@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z ; glm::column<glm::tmat4x2<float,0> >
PUBLIC	??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z ; glm::row<glm::tmat4x3<float,0> >
PUBLIC	??$column@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z ; glm::column<glm::tmat4x3<float,0> >
PUBLIC	??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z ; glm::row<glm::tmat4x4<float,0> >
PUBLIC	??$column@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z ; glm::column<glm::tmat4x4<float,0> >
PUBLIC	??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z ; glm::row<glm::tmat2x2<float,2> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
PUBLIC	??$column@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z ; glm::column<glm::tmat2x2<float,2> >
PUBLIC	??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z ; glm::row<glm::tmat2x3<float,2> >
PUBLIC	??$column@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z ; glm::column<glm::tmat2x3<float,2> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
PUBLIC	??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z ; glm::row<glm::tmat2x4<float,2> >
PUBLIC	??$column@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z ; glm::column<glm::tmat2x4<float,2> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
PUBLIC	??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z ; glm::row<glm::tmat3x2<float,2> >
PUBLIC	??$column@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z ; glm::column<glm::tmat3x2<float,2> >
PUBLIC	??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z ; glm::row<glm::tmat3x3<float,2> >
PUBLIC	??$column@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z ; glm::column<glm::tmat3x3<float,2> >
PUBLIC	??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z ; glm::row<glm::tmat3x4<float,2> >
PUBLIC	??$column@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z ; glm::column<glm::tmat3x4<float,2> >
PUBLIC	??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z ; glm::row<glm::tmat4x2<float,2> >
PUBLIC	??$column@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z ; glm::column<glm::tmat4x2<float,2> >
PUBLIC	??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z ; glm::row<glm::tmat4x3<float,2> >
PUBLIC	??$column@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z ; glm::column<glm::tmat4x3<float,2> >
PUBLIC	??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z ; glm::row<glm::tmat4x4<float,2> >
PUBLIC	??$column@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z ; glm::column<glm::tmat4x4<float,2> >
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>
PUBLIC	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>
PUBLIC	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@KDIDHNIL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@FOAKNOEL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
PUBLIC	??_C@_08EPJLHIJG@bad?5cast@			; `string'
PUBLIC	_TI2?AVbad_cast@std@@
PUBLIC	_CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0GI@LEPEPCM@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_01NBENCBCI@?$CK@				; `string'
PUBLIC	??_C@_0GI@IIACENIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ ; `string'
PUBLIC	??_C@_1IK@NGAJILNN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R0M@8					; float `RTTI Type Descriptor'
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
PUBLIC	?id@?$format_punct@D@io@glm@@2V0locale@std@@A	; glm::io::format_punct<char>::id
PUBLIC	??_7?$format_punct@D@io@glm@@6B@		; glm::io::format_punct<char>::`vftable'
PUBLIC	?id@?$format_punct@_W@io@glm@@2V0locale@std@@A	; glm::io::format_punct<wchar_t>::id
PUBLIC	??_7?$format_punct@_W@io@glm@@6B@		; glm::io::format_punct<wchar_t>::`vftable'
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_R0?AU?$tquat@M$0A@@glm@@@8			; glm::tquat<float,0> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tvec2@M$0A@@glm@@@8			; glm::tvec2<float,0> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tvec3@M$0A@@glm@@@8			; glm::tvec3<float,0> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tvec4@M$0A@@glm@@@8			; glm::tvec4<float,0> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat2x2@M$0A@@glm@@@8			; glm::tmat2x2<float,0> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat2x3@M$0A@@glm@@@8			; glm::tmat2x3<float,0> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat2x4@M$0A@@glm@@@8			; glm::tmat2x4<float,0> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat3x2@M$0A@@glm@@@8			; glm::tmat3x2<float,0> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat3x3@M$0A@@glm@@@8			; glm::tmat3x3<float,0> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat3x4@M$0A@@glm@@@8			; glm::tmat3x4<float,0> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat4x2@M$0A@@glm@@@8			; glm::tmat4x2<float,0> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat4x3@M$0A@@glm@@@8			; glm::tmat4x3<float,0> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat4x4@M$0A@@glm@@@8			; glm::tmat4x4<float,0> `RTTI Type Descriptor'
PUBLIC	??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
PUBLIC	??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
PUBLIC	??_8?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
PUBLIC	??_R0?AU?$tquat@H$00@glm@@@8			; glm::tquat<int,1> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tvec2@H$00@glm@@@8			; glm::tvec2<int,1> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tvec3@H$00@glm@@@8			; glm::tvec3<int,1> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tvec4@H$00@glm@@@8			; glm::tvec4<int,1> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat2x2@H$00@glm@@@8			; glm::tmat2x2<int,1> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat2x3@H$00@glm@@@8			; glm::tmat2x3<int,1> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat2x4@H$00@glm@@@8			; glm::tmat2x4<int,1> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat3x2@H$00@glm@@@8			; glm::tmat3x2<int,1> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat3x3@H$00@glm@@@8			; glm::tmat3x3<int,1> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat3x4@H$00@glm@@@8			; glm::tmat3x4<int,1> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat4x2@H$00@glm@@@8			; glm::tmat4x2<int,1> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat4x3@H$00@glm@@@8			; glm::tmat4x3<int,1> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat4x4@H$00@glm@@@8			; glm::tmat4x4<int,1> `RTTI Type Descriptor'
PUBLIC	??_R0H@8					; int `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tquat@I$01@glm@@@8			; glm::tquat<unsigned int,2> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tvec2@I$01@glm@@@8			; glm::tvec2<unsigned int,2> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tvec3@I$01@glm@@@8			; glm::tvec3<unsigned int,2> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tvec4@I$01@glm@@@8			; glm::tvec4<unsigned int,2> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat2x2@I$01@glm@@@8			; glm::tmat2x2<unsigned int,2> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat2x3@I$01@glm@@@8			; glm::tmat2x3<unsigned int,2> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat2x4@I$01@glm@@@8			; glm::tmat2x4<unsigned int,2> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat3x2@I$01@glm@@@8			; glm::tmat3x2<unsigned int,2> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat3x3@I$01@glm@@@8			; glm::tmat3x3<unsigned int,2> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat3x4@I$01@glm@@@8			; glm::tmat3x4<unsigned int,2> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat4x2@I$01@glm@@@8			; glm::tmat4x2<unsigned int,2> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat4x3@I$01@glm@@@8			; glm::tmat4x3<unsigned int,2> `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$tmat4x4@I$01@glm@@@8			; glm::tmat4x4<unsigned int,2> `RTTI Type Descriptor'
PUBLIC	??_R0I@8					; unsigned int `RTTI Type Descriptor'
PUBLIC	??_C@_1IK@KCJBGCFC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1IG@MLIPKIDC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$format_punct@D@io@glm@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<glm::io::format_punct<char> >::_Psave
PUBLIC	?_Psave@?$_Facetptr@V?$format_punct@_W@io@glm@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<glm::io::format_punct<wchar_t> >::_Psave
PUBLIC	??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@ ; `string'
PUBLIC	??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@ ; `string'
PUBLIC	??_C@_1IO@HLGFBNDB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@ ; `string'
PUBLIC	??_C@_1IO@OAMAFBFO@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1IO@JEFILINB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1IO@NFANIMKA@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1IO@EOKIMAMP@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1IO@DKDACJEA@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1IO@CIPEHENF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1IO@LDFBDILK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_C@_1IO@MHMJNBDF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ ; `string'
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@facet@locale@std@@8		; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVfacet@locale@std@@@8			; std::locale::facet `RTTI Type Descriptor'
PUBLIC	??_R3facet@locale@std@@8			; std::locale::facet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2facet@locale@std@@8			; std::locale::facet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Facet_base@std@@8		; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV_Facet_base@std@@@8			; std::_Facet_base `RTTI Type Descriptor'
PUBLIC	??_R3_Facet_base@std@@8				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Facet_base@std@@8				; std::_Facet_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AU_Crt_new_delete@std@@@8			; std::_Crt_new_delete `RTTI Type Descriptor'
PUBLIC	??_R3_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$format_punct@D@io@glm@@6B@		; glm::io::format_punct<char>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$format_punct@D@io@glm@@@8		; glm::io::format_punct<char> `RTTI Type Descriptor'
PUBLIC	??_R3?$format_punct@D@io@glm@@8			; glm::io::format_punct<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$format_punct@D@io@glm@@8			; glm::io::format_punct<char>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$format_punct@D@io@glm@@8	; glm::io::format_punct<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$format_punct@_W@io@glm@@6B@		; glm::io::format_punct<wchar_t>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$format_punct@_W@io@glm@@@8		; glm::io::format_punct<wchar_t> `RTTI Type Descriptor'
PUBLIC	??_R3?$format_punct@_W@io@glm@@8		; glm::io::format_punct<wchar_t>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$format_punct@_W@io@glm@@8		; glm::io::format_punct<wchar_t>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$format_punct@_W@io@glm@@8	; glm::io::format_punct<wchar_t>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f800000
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPEAX_K@Z:PROC		; __global_delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__wassert:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	__imp_wcslen:PROC
EXTRN	__imp__calloc_dbg:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	strlen:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	__std_type_info_compare:PROC
EXTRN	__std_type_info_name:PROC
EXTRN	??_Ebad_cast@std@@UEAAPEAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	_Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ:PROC
EXTRN	__imp_??4?$_Yarn@D@std@@QEAAAEAV01@PEBD@Z:PROC
EXTRN	__imp_??2_Crt_new_delete@std@@SAPEAX_K@Z:PROC
EXTRN	__imp_??3_Crt_new_delete@std@@SAXPEAX@Z:PROC
EXTRN	__imp_??0id@locale@std@@QEAA@_K@Z:PROC
EXTRN	__imp_??Bid@locale@std@@QEAA_KXZ:PROC
EXTRN	__imp_?_Getcat@facet@locale@std@@SA_KPEAPEBV123@PEBV23@@Z:PROC
EXTRN	__imp_??0facet@locale@std@@IEAA@_K@Z:PROC
EXTRN	__imp_??1facet@locale@std@@MEAA@XZ:PROC
EXTRN	__imp_?_New_Locimp@_Locimp@locale@std@@CAPEAV123@AEBV123@@Z:PROC
EXTRN	__imp_?_Addfac@_Locimp@locale@std@@AEAAXPEAVfacet@23@_K@Z:PROC
EXTRN	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ:PROC ; std::locale::_Getgloballocale
EXTRN	__imp_?widen@?$ctype@_W@std@@QEBA_WD@Z:PROC
EXTRN	__imp_?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z:PROC
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEAAHH@Z:PROC
EXTRN	__imp_?setf@ios_base@std@@QEAAHHH@Z:PROC
EXTRN	__imp_?precision@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?precision@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?getloc@ios_base@std@@QEBA?AVlocale@2@XZ:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD0@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ:PROC
EXTRN	__imp_??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAA_JPEB_W_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXH@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ:PROC
EXTRN	__imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W0@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAPEA_WXZ:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?imbue@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAA?AVlocale@2@AEBV32@@Z:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAADD@Z:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ:PROC
EXTRN	__imp_?imbue@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAA?AVlocale@2@AEBV32@@Z:PROC
EXTRN	__imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ:PROC
EXTRN	__imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAA_W_W@Z:PROC
EXTRN	__imp_??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV?$basic_ios@DU?$char_traits@D@std@@@1@AEAV21@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	__imp_??0?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@PEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAV?$basic_ios@_WU?$char_traits@_W@std@@@1@AEAV21@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@H@Z:PROC
EXTRN	__imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z:PROC
EXTRN	__imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z:PROC ; std::setprecision
EXTRN	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z:PROC	; std::setw
EXTRN	??_E?$format_punct@D@io@glm@@UEAAPEAXI@Z:PROC	; glm::io::format_punct<char>::`vector deleting destructor'
EXTRN	??_E?$format_punct@_W@io@glm@@UEAAPEAXI@Z:PROC	; glm::io::format_punct<wchar_t>::`vector deleting destructor'
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
EXTRN	??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
EXTRN	?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ:PROC ; std::locale::facet::_Decref
EXTRN	?_Incref@facet@locale@std@@UEAAXXZ:PROC		; std::locale::facet::_Incref
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	?_Lock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAAXXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Lock
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	?_Unlock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAAXXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Unlock
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
EXTRN	?imbue@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAXAEBVlocale@2@@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::imbue
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	?setbuf@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAPEAV12@PEA_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::setbuf
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?showmanyc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAA_JXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::showmanyc
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	?sync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAHXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sync
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	?uflow@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAGXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsgetn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAA_JPEA_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	?xsputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAA_JPEB_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::xsputn
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	?__type_info_root_node@@3U__type_info_node@@A:BYTE ; __type_info_root_node
EXTRN	__imp_?id@?$ctype@_W@std@@2V0locale@2@A:QWORD
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__imp_?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
_BSS	ENDS
;	COMDAT ?id@?$format_punct@D@io@glm@@2V0locale@std@@A
_BSS	SEGMENT
?id@?$format_punct@D@io@glm@@2V0locale@std@@A DQ 01H DUP (?) ; glm::io::format_punct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$format_punct@_W@io@glm@@2V0locale@std@@A
_BSS	SEGMENT
?id@?$format_punct@_W@io@glm@@2V0locale@std@@A DQ 01H DUP (?) ; glm::io::format_punct<wchar_t>::id
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$format_punct@D@io@glm@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$format_punct@D@io@glm@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<glm::io::format_punct<char> >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$format_punct@_W@io@glm@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$format_punct@_W@io@glm@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<glm::io::format_punct<wchar_t> >::_Psave
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN7
	DD	imagerel $LN7+119
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemcpy DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$wmemcpy
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+58
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+404
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+94
	DD	imagerel $unwind$?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z DD imagerel $LN5
	DD	imagerel $LN5+115
	DD	imagerel $unwind$?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?move@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq@?$_WChar_traits@_W@std@@SA_NAEB_W0@Z DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$?eq@?$_WChar_traits@_W@std@@SA_NAEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?to_char_type@?$_WChar_traits@_W@std@@SA_WAEBG@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?to_char_type@?$_WChar_traits@_W@std@@SA_WAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?to_int_type@?$_WChar_traits@_W@std@@SAGAEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?to_int_type@?$_WChar_traits@_W@std@@SAGAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?not_eof@?$_WChar_traits@_W@std@@SAGAEBG@Z DD imagerel $LN7
	DD	imagerel $LN7+105
	DD	imagerel $unwind$?not_eof@?$_WChar_traits@_W@std@@SAGAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$_WChar_traits@_W@std@@SAGXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?eof@?$_WChar_traits@_W@std@@SAGXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+57
	DD	imagerel $unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z DD imagerel $LN7
	DD	imagerel $LN7+82
	DD	imagerel $unwind$?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen_string@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlen_string@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+48
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+299
	DD	imagerel $unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+178
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+155
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+191
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+189
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@_W@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@_W@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+48
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+299
	DD	imagerel $unwind$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z DD imagerel $LN4
	DD	imagerel $LN4+178
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+155
	DD	imagerel $unwind$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+191
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+191
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8type_info@@QEBA_NAEBV0@@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$??8type_info@@QEBA_NAEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?name@type_info@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?name@type_info@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_cast@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??0bad_cast@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_cast@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1bad_cast@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_cast@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0bad_cast@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_cast@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gbad_cast@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_cast@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Throw_bad_cast@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1locale@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+101
	DD	imagerel $unwind$??1locale@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD imagerel $LN8
	DD	imagerel $LN8+169
	DD	imagerel $unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD imagerel $LN12
	DD	imagerel $LN12+559
	DD	imagerel $unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Maklocwcs@std@@YAPEA_WPEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+115
	DD	imagerel $unwind$?_Maklocwcs@std@@YAPEA_WPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+364
	DD	imagerel $unwind$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+364
	DD	imagerel $unwind$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0precision@io@glm@@QEAA@I@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??0precision@io@glm@@QEAA@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0width@io@glm@@QEAA@I@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??0width@io@glm@@QEAA@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0order@io@glm@@QEAA@W4order_type@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??0order@io@glm@@QEAA@W4order_type@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?fixed@std@@YAAEAVios_base@1@AEAV21@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?fixed@std@@YAAEAVios_base@1@AEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?right@std@@YAAEAVios_base@1@AEAV21@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?right@std@@YAAEAVios_base@1@AEAV21@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+422
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD imagerel $LN7
	DD	imagerel $LN7+716
	DD	imagerel $unwind$??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DD imagerel $LN7
	DD	imagerel $LN7+716
	DD	imagerel $unwind$??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD imagerel $LN7
	DD	imagerel $LN7+707
	DD	imagerel $unwind$??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DD imagerel $LN7
	DD	imagerel $LN7+707
	DD	imagerel $unwind$??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD imagerel $LN7
	DD	imagerel $LN7+707
	DD	imagerel $unwind$??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DD imagerel $LN7
	DD	imagerel $LN7+707
	DD	imagerel $unwind$??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD imagerel $LN10
	DD	imagerel $LN10+1128
	DD	imagerel $unwind$??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DD imagerel $LN10
	DD	imagerel $LN10+1128
	DD	imagerel $unwind$??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD imagerel $LN10
	DD	imagerel $LN10+1128
	DD	imagerel $unwind$??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DD imagerel $LN10
	DD	imagerel $LN10+1128
	DD	imagerel $unwind$??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD imagerel $LN10
	DD	imagerel $LN10+1128
	DD	imagerel $unwind$??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DD imagerel $LN10
	DD	imagerel $LN10+1128
	DD	imagerel $unwind$??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z DD imagerel $LN4
	DD	imagerel $LN4+4017
	DD	imagerel $unwind$??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z DD imagerel $LN4
	DD	imagerel $LN4+4017
	DD	imagerel $unwind$??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z DD imagerel $LN11
	DD	imagerel $LN11+330
	DD	imagerel $unwind$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA DD imagerel ?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA DD imagerel ?dtor$1@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA
	DD	imagerel ?dtor$1@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBA@QEA_W_KQEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBA@QEA_W_KQEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z DD imagerel $LN6
	DD	imagerel $LN6+332
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEA_WAEAPEA_W@std@@YAXAEAPEA_W0@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$_Construct_in_place@PEA_WAEAPEA_W@std@@YAXAEAPEA_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+332
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pointer_to@?$pointer_traits@PEA_W@std@@SAPEA_WAEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?pointer_to@?$pointer_traits@PEA_W@std@@SAPEA_WAEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$01@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+66
	DD	imagerel $unwind$??$_Get_size_of_n@$01@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+75
	DD	imagerel $unwind$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+56
	DD	imagerel $unwind$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD imagerel $LN7
	DD	imagerel $LN7+180
	DD	imagerel $unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD imagerel $LN23
	DD	imagerel $LN23+992
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA+79
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+1038
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+79
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tquat@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tquat@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tquat@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tquat@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tquat@M$0A@@glm@@QEAA@AEBM000@Z DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$??0?$tquat@M$0A@@glm@@QEAA@AEBM000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z DD imagerel $LN10
	DD	imagerel $LN10+268
	DD	imagerel $unwind$??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$2@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$3@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z DD imagerel $LN4
	DD	imagerel $LN4+140
	DD	imagerel $unwind$??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+166
	DD	imagerel $unwind$??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z DD imagerel ??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z
	DD	imagerel ??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$unformatted@DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ios@DU?$char_traits@D@std@@@std@@AEAV23@@Z DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$??$unformatted@DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ios@DU?$char_traits@D@std@@@std@@AEAV23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z DD imagerel $LN24
	DD	imagerel $LN24+1146
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA DD imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA DD imagerel ?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA
	DD	imagerel ?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA DD imagerel ?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA
	DD	imagerel ?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA+79
	DD	imagerel $unwind$?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z DD imagerel $LN29
	DD	imagerel $LN29+1311
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA+79
	DD	imagerel $unwind$?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z DD imagerel $LN10
	DD	imagerel $LN10+268
	DD	imagerel $unwind$??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$2@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$3@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z DD imagerel $LN4
	DD	imagerel $LN4+141
	DD	imagerel $unwind$??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+166
	DD	imagerel $unwind$??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z DD imagerel ??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z
	DD	imagerel ??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z DD imagerel $LN23
	DD	imagerel $LN23+998
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA DD imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA DD imagerel ?catch$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA
	DD	imagerel ?catch$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA+79
	DD	imagerel $unwind$?catch$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$unformatted@_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@AEAV23@@Z DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$??$unformatted@_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@AEAV23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tquat@H$00@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tquat@H$00@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tquat@H$00@glm@@QEBAAEBHH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tquat@H$00@glm@@QEBAAEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tquat@H$00@glm@@QEAA@AEBH000@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??0?$tquat@H$00@glm@@QEAA@AEBH000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z DD imagerel ??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z
	DD	imagerel ??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z DD imagerel ??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z
	DD	imagerel ??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tquat@I$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tquat@I$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tquat@I$01@glm@@QEBAAEBIH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tquat@I$01@glm@@QEBAAEBIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tquat@I$01@glm@@QEAA@AEBI000@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??0?$tquat@I$01@glm@@QEAA@AEBI000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z DD imagerel ??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z
	DD	imagerel ??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z DD imagerel ??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z
	DD	imagerel ??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$tvec3@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z DD imagerel ??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z
	DD	imagerel ??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z DD imagerel ??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z
	DD	imagerel ??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z DD imagerel ??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z
	DD	imagerel ??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z DD imagerel ??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z
	DD	imagerel ??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z DD imagerel ??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z
	DD	imagerel ??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z DD imagerel ??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z
	DD	imagerel ??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@H$00@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@H$00@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@H$00@glm@@QEBAAEBHH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@H$00@glm@@QEBAAEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@H$00@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??0?$tvec2@H$00@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@H$00@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@H$00@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@H$00@glm@@QEBAAEBHH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@H$00@glm@@QEBAAEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@H$00@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0?$tvec3@H$00@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@H$00@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@H$00@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@H$00@glm@@QEBAAEBHH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@H$00@glm@@QEBAAEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@H$00@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??0?$tvec4@H$00@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z DD imagerel ??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z
	DD	imagerel ??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z DD imagerel ??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z
	DD	imagerel ??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z DD imagerel ??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z
	DD	imagerel ??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z DD imagerel ??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z
	DD	imagerel ??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z DD imagerel ??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z
	DD	imagerel ??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z DD imagerel ??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z
	DD	imagerel ??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@I$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@I$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@I$01@glm@@QEBAAEBIH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@I$01@glm@@QEBAAEBIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH@?$tvec2@I$01@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$?0HH@?$tvec2@I$01@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@I$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@I$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@I$01@glm@@QEBAAEBIH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@I$01@glm@@QEBAAEBIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHH@?$tvec3@I$01@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0HHH@?$tvec3@I$01@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@I$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@I$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@I$01@glm@@QEBAAEBIH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@I$01@glm@@QEBAAEBIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHHH@?$tvec4@I$01@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$?0HHHH@?$tvec4@I$01@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z DD imagerel ??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z
	DD	imagerel ??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z DD imagerel ??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z
	DD	imagerel ??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z DD imagerel ??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z
	DD	imagerel ??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z DD imagerel ??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z
	DD	imagerel ??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z DD imagerel ??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z
	DD	imagerel ??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z DD imagerel ??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z
	DD	imagerel ??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z+888
	DD	imagerel $unwind$??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUorder@01@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUorder@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z DD imagerel ??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z
	DD	imagerel ??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z+211
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$??0?$tmat2x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat2x2@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat2x2@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x2@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$??0?$tmat2x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat2x3@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat2x3@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x3@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$??0?$tmat2x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat2x4@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat2x4@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x4@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x4@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$tmat3x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat3x2@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat3x2@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x2@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??0?$tmat3x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat3x3@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat3x3@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x3@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??0?$tmat3x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat3x4@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat3x4@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x4@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x4@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@000@Z DD imagerel $LN3
	DD	imagerel $LN3+171
	DD	imagerel $unwind$??0?$tmat4x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat4x2@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat4x2@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x2@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@000@Z DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$??0?$tmat4x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat4x3@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat4x3@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x3@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@000@Z DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$??0?$tmat4x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat4x4@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat4x4@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x4@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x4@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@M$01@glm@@QEAAAEAMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@M$01@glm@@QEAAAEAMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@M$01@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@M$01@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$01@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$tvec2@M$01@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH@?$tvec2@M$01@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0HH@?$tvec2@M$01@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@M$01@glm@@QEAAAEAMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@M$01@glm@@QEAAAEAMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@M$01@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@M$01@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@M$01@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$tvec3@M$01@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHH@?$tvec3@M$01@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$?0HHH@?$tvec3@M$01@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@M$01@glm@@QEAAAEAMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@M$01@glm@@QEAAAEAMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@M$01@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@M$01@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$01@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$tvec4@M$01@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHHH@?$tvec4@M$01@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0HHHH@?$tvec4@M$01@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUorder@01@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUorder@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z DD imagerel ??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z+211
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA DD imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$??0?$tmat2x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat2x2@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat2x2@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??A?$tmat2x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x2@M$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x2@M$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$??0?$tmat2x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat2x3@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat2x3@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat2x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x3@M$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x3@M$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$??0?$tmat2x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat2x4@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat2x4@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat2x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x4@M$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x4@M$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$tmat3x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat3x2@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat3x2@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??A?$tmat3x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x2@M$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x2@M$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??0?$tmat3x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat3x3@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat3x3@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat3x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x3@M$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x3@M$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??0?$tmat3x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat3x4@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat3x4@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat3x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x4@M$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x4@M$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@000@Z DD imagerel $LN3
	DD	imagerel $LN3+171
	DD	imagerel $unwind$??0?$tmat4x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat4x2@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat4x2@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??A?$tmat4x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x2@M$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x2@M$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@000@Z DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$??0?$tmat4x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat4x3@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat4x3@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat4x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x3@M$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x3@M$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@000@Z DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$??0?$tmat4x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat4x4@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat4x4@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat4x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x4@M$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x4@M$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAPEA_W@std@@YAPEAXPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAPEA_W@std@@YAPEAXPEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+259
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$format_punct@D@io@glm@@QEAA@_K@Z DD imagerel $LN4
	DD	imagerel $LN4+154
	DD	imagerel $unwind$??0?$format_punct@D@io@glm@@QEAA@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$format_punct@D@io@glm@@QEAA@AEBV012@@Z DD imagerel $LN4
	DD	imagerel $LN4+204
	DD	imagerel $unwind$??0?$format_punct@D@io@glm@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$format_punct@D@io@glm@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$??1?$format_punct@D@io@glm@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$format_punct@D@io@glm@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_G?$format_punct@D@io@glm@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z DD imagerel $LN14
	DD	imagerel $LN14+430
	DD	imagerel $unwind$??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$2@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$3@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD imagerel ?dtor$5@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$5@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$format_punct@D@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@D@io@glm@@@Z DD imagerel $LN4
	DD	imagerel $LN4+144
	DD	imagerel $unwind$??$?0V?$format_punct@D@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@D@io@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$format_punct@_W@io@glm@@QEAA@_K@Z DD imagerel $LN4
	DD	imagerel $LN4+179
	DD	imagerel $unwind$??0?$format_punct@_W@io@glm@@QEAA@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$format_punct@_W@io@glm@@QEAA@AEBV012@@Z DD imagerel $LN4
	DD	imagerel $LN4+209
	DD	imagerel $unwind$??0?$format_punct@_W@io@glm@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$format_punct@_W@io@glm@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$??1?$format_punct@_W@io@glm@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$format_punct@_W@io@glm@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_G?$format_punct@_W@io@glm@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z DD imagerel $LN14
	DD	imagerel $LN14+430
	DD	imagerel $unwind$??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$2@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$2@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$3@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD imagerel ?dtor$5@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$5@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$format_punct@_W@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@_W@io@glm@@@Z DD imagerel $LN4
	DD	imagerel $LN4+144
	DD	imagerel $unwind$??$?0V?$format_punct@_W@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@_W@io@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+211
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+83
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+215
	DD	imagerel $unwind$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+57
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+40
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+139
	DD	imagerel $unwind$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+67
	DD	imagerel $unwind$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ DD imagerel $LN7
	DD	imagerel $LN7+391
	DD	imagerel $unwind$?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN7
	DD	imagerel $LN7+243
	DD	imagerel $unwind$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD imagerel $LN16
	DD	imagerel $LN16+663
	DD	imagerel $unwind$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD imagerel $LN6
	DD	imagerel $LN6+258
	DD	imagerel $unwind$?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ DD imagerel $LN8
	DD	imagerel $LN8+311
	DD	imagerel $unwind$?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD imagerel $LN25
	DD	imagerel $LN25+774
	DD	imagerel $unwind$?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD imagerel $LN12
	DD	imagerel $LN12+461
	DD	imagerel $unwind$?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+219
	DD	imagerel $unwind$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+105
	DD	imagerel $unwind$?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+85
	DD	imagerel $unwind$??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD imagerel $LN26
	DD	imagerel $LN26+994
	DD	imagerel $unwind$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD imagerel ?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD imagerel ?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	imagerel ?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA+79
	DD	imagerel $unwind$?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+768
	DD	imagerel $unwind$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+211
	DD	imagerel $unwind$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+83
	DD	imagerel $unwind$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+215
	DD	imagerel $unwind$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA+57
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA+40
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+139
	DD	imagerel $unwind$??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+67
	DD	imagerel $unwind$?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ DD imagerel $LN7
	DD	imagerel $LN7+400
	DD	imagerel $unwind$?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD imagerel $LN7
	DD	imagerel $LN7+243
	DD	imagerel $unwind$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ@4HA DD imagerel ?dtor$0@?0??str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z DD imagerel $LN16
	DD	imagerel $LN16+673
	DD	imagerel $unwind$?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z DD imagerel $LN6
	DD	imagerel $LN6+264
	DD	imagerel $unwind$?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ DD imagerel $LN8
	DD	imagerel $LN8+311
	DD	imagerel $unwind$?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD imagerel $LN25
	DD	imagerel $LN25+781
	DD	imagerel $unwind$?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD imagerel $LN12
	DD	imagerel $LN12+462
	DD	imagerel $unwind$?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+222
	DD	imagerel $unwind$?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+105
	DD	imagerel $unwind$?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+85
	DD	imagerel $unwind$??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z DD imagerel $LN26
	DD	imagerel $LN26+998
	DD	imagerel $unwind$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA DD imagerel ?dtor$0@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA DD imagerel ?catch$1@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA
	DD	imagerel ?catch$1@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA+79
	DD	imagerel $unwind$?catch$1@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+768
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+768
	DD	imagerel $unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+768
	DD	imagerel $unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+768
	DD	imagerel $unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+768
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+768
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+768
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+764
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+1010
	DD	imagerel $unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max@PEA_W@std@@YAAEBQEA_WAEBQEA_W0@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$??$max@PEA_W@std@@YAAEBQEA_WAEBQEA_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max@PEAD@std@@YAAEBQEADAEBQEAD0@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$??$max@PEAD@std@@YAAEBQEADAEBQEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@D@std@@YAPEADAEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@D@std@@YAPEADAEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@_W@std@@YAPEA_WAEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@_W@std@@YAPEA_WAEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+167
	DD	imagerel $unwind$??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z DD imagerel $LN11
	DD	imagerel $LN11+330
	DD	imagerel $unwind$??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA DD imagerel ?dtor$0@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA DD imagerel ?dtor$1@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA
	DD	imagerel ?dtor$1@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+167
	DD	imagerel $unwind$??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z DD imagerel $LN11
	DD	imagerel $LN11+330
	DD	imagerel $unwind$??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA DD imagerel ?dtor$0@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA DD imagerel ?dtor$1@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA
	DD	imagerel ?dtor$1@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Fillobj@D@std@@QEAA@D@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??0?$_Fillobj@D@std@@QEAA@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Fillobj@_W@std@@QEAA@_W@Z DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$??0?$_Fillobj@_W@std@@QEAA@_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+246
	DD	imagerel $unwind$??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+102
	DD	imagerel $unwind$??$column@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+246
	DD	imagerel $unwind$??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$column@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+246
	DD	imagerel $unwind$??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$column@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+264
	DD	imagerel $unwind$??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+102
	DD	imagerel $unwind$??$column@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+264
	DD	imagerel $unwind$??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$column@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+264
	DD	imagerel $unwind$??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$column@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+264
	DD	imagerel $unwind$??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+102
	DD	imagerel $unwind$??$column@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+264
	DD	imagerel $unwind$??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$column@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+264
	DD	imagerel $unwind$??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$column@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+246
	DD	imagerel $unwind$??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+102
	DD	imagerel $unwind$??$column@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+246
	DD	imagerel $unwind$??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$column@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+246
	DD	imagerel $unwind$??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$column@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+264
	DD	imagerel $unwind$??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+102
	DD	imagerel $unwind$??$column@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+264
	DD	imagerel $unwind$??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$column@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+264
	DD	imagerel $unwind$??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$column@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+264
	DD	imagerel $unwind$??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+102
	DD	imagerel $unwind$??$column@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+264
	DD	imagerel $unwind$??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$column@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z DD imagerel $LN8
	DD	imagerel $LN8+264
	DD	imagerel $unwind$??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$column@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$column@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__E?id@?$format_punct@D@io@glm@@2V0locale@std@@A@@YAXXZ DD imagerel ??__E?id@?$format_punct@D@io@glm@@2V0locale@std@@A@@YAXXZ
	DD	imagerel ??__E?id@?$format_punct@D@io@glm@@2V0locale@std@@A@@YAXXZ+27
	DD	imagerel $unwind$??__E?id@?$format_punct@D@io@glm@@2V0locale@std@@A@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__E?id@?$format_punct@_W@io@glm@@2V0locale@std@@A@@YAXXZ DD imagerel ??__E?id@?$format_punct@_W@io@glm@@2V0locale@std@@A@@YAXXZ
	DD	imagerel ??__E?id@?$format_punct@_W@io@glm@@2V0locale@std@@A@@YAXXZ+27
	DD	imagerel $unwind$??__E?id@?$format_punct@_W@io@glm@@2V0locale@std@@A@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+768
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+768
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+768
	DD	imagerel $unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA DD imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA DD imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA
pdata	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??id$initializer$@?$format_punct@D@io@glm@@2P6AXXZEA@@3P6AXXZEA DQ FLAT:??__E?id@?$format_punct@D@io@glm@@2V0locale@std@@A@@YAXXZ ; ??id$initializer$@?$format_punct@D@io@glm@@2P6AXXZEA@@3P6AXXZEA
CRT$XCU	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@?$format_punct@_W@io@glm@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$format_punct@_W@io@glm@@8 DD imagerel ??_R0?AV?$format_punct@_W@io@glm@@@8 ; glm::io::format_punct<wchar_t>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$format_punct@_W@io@glm@@8
rdata$r	ENDS
;	COMDAT ??_R2?$format_punct@_W@io@glm@@8
rdata$r	SEGMENT
??_R2?$format_punct@_W@io@glm@@8 DD imagerel ??_R1A@?0A@EA@?$format_punct@_W@io@glm@@8 ; glm::io::format_punct<wchar_t>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$format_punct@_W@io@glm@@8
rdata$r	SEGMENT
??_R3?$format_punct@_W@io@glm@@8 DD 00H			; glm::io::format_punct<wchar_t>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2?$format_punct@_W@io@glm@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$format_punct@_W@io@glm@@@8
data$rs	SEGMENT
??_R0?AV?$format_punct@_W@io@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::io::format_punct<wchar_t> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$format_punct@_W@io@glm@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$format_punct@_W@io@glm@@6B@
rdata$r	SEGMENT
??_R4?$format_punct@_W@io@glm@@6B@ DD 01H		; glm::io::format_punct<wchar_t>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$format_punct@_W@io@glm@@@8
	DD	imagerel ??_R3?$format_punct@_W@io@glm@@8
	DD	imagerel ??_R4?$format_punct@_W@io@glm@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$format_punct@D@io@glm@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$format_punct@D@io@glm@@8 DD imagerel ??_R0?AV?$format_punct@D@io@glm@@@8 ; glm::io::format_punct<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$format_punct@D@io@glm@@8
rdata$r	ENDS
;	COMDAT ??_R2?$format_punct@D@io@glm@@8
rdata$r	SEGMENT
??_R2?$format_punct@D@io@glm@@8 DD imagerel ??_R1A@?0A@EA@?$format_punct@D@io@glm@@8 ; glm::io::format_punct<char>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$format_punct@D@io@glm@@8
rdata$r	SEGMENT
??_R3?$format_punct@D@io@glm@@8 DD 00H			; glm::io::format_punct<char>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2?$format_punct@D@io@glm@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$format_punct@D@io@glm@@@8
data$rs	SEGMENT
??_R0?AV?$format_punct@D@io@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::io::format_punct<char> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$format_punct@D@io@glm@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$format_punct@D@io@glm@@6B@
rdata$r	SEGMENT
??_R4?$format_punct@D@io@glm@@6B@ DD 01H		; glm::io::format_punct<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$format_punct@D@io@glm@@@8
	DD	imagerel ??_R3?$format_punct@D@io@glm@@8
	DD	imagerel ??_R4?$format_punct@D@io@glm@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R2_Crt_new_delete@std@@8 DD imagerel ??_R1A@?0A@EA@_Crt_new_delete@std@@8 ; std::_Crt_new_delete::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R3_Crt_new_delete@std@@8 DD 00H			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU_Crt_new_delete@std@@@8
data$rs	SEGMENT
??_R0?AU_Crt_new_delete@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Crt_new_delete `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU_Crt_new_delete@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R17?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Facet_base@std@@8
rdata$r	SEGMENT
??_R2_Facet_base@std@@8 DD imagerel ??_R1A@?0A@EA@_Facet_base@std@@8 ; std::_Facet_base::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Facet_base@std@@8
rdata$r	SEGMENT
??_R3_Facet_base@std@@8 DD 00H				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Facet_base@std@@@8
data$rs	SEGMENT
??_R0?AV_Facet_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::_Facet_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Facet_base@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@_Facet_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Facet_base@std@@8 DD imagerel ??_R0?AV_Facet_base@std@@@8 ; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2facet@locale@std@@8
rdata$r	SEGMENT
??_R2facet@locale@std@@8 DD imagerel ??_R1A@?0A@EA@facet@locale@std@@8 ; std::locale::facet::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3facet@locale@std@@8
rdata$r	SEGMENT
??_R3facet@locale@std@@8 DD 00H				; std::locale::facet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	imagerel ??_R2facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
data$rs	SEGMENT
??_R0?AVfacet@locale@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::locale::facet `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfacet@locale@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@facet@locale@std@@8 DD imagerel ??_R0?AVfacet@locale@std@@@8 ; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD imagerel ??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD imagerel ??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 01H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	imagerel ??_R3bad_cast@std@@8
	DD	imagerel ??_R4bad_cast@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ios_base@std@@8
	DD	imagerel ??_R17?0A@EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ios<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	imagerel ??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD imagerel ??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD 00H ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$al'
	DB	'locator@_W@2@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD 01H ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
	DD	088H
	DD	04H
	DD	imagerel ??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
	DD	imagerel ??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
	DD	imagerel ??_R4?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD imagerel ??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD 00H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$alloca'
	DB	'tor@_W@2@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD 01H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
	DD	imagerel ??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
	DD	imagerel ??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD imagerel ??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	imagerel ??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$rs	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD imagerel ??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$rs	SEGMENT
??_R0?AVios_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVios_base@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD imagerel ??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ios_base@std@@8
	DD	imagerel ??_R17?0A@EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	imagerel ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allo'
	DB	'cator@D@2@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 01H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	088H
	DD	04H
	DD	imagerel ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	imagerel ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
	DD	imagerel ??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 01H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	imagerel ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
	DD	imagerel ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1IO@MHMJNBDF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IO@MHMJNBDF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'm', 00H, 'a', 00H, 't', 00H, '4', 00H, 'x', 00H, '4'
	DB	00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@LDFBDILK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IO@LDFBDILK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'm', 00H, 'a', 00H, 't', 00H, '4', 00H, 'x', 00H, '3'
	DB	00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@CIPEHENF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IO@CIPEHENF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'm', 00H, 'a', 00H, 't', 00H, '4', 00H, 'x', 00H, '2'
	DB	00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@DKDACJEA@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IO@DKDACJEA@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'm', 00H, 'a', 00H, 't', 00H, '3', 00H, 'x', 00H, '4'
	DB	00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@EOKIMAMP@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IO@EOKIMAMP@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'm', 00H, 'a', 00H, 't', 00H, '3', 00H, 'x', 00H, '3'
	DB	00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@NFANIMKA@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IO@NFANIMKA@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'm', 00H, 'a', 00H, 't', 00H, '3', 00H, 'x', 00H, '2'
	DB	00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@JEFILINB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IO@JEFILINB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'm', 00H, 'a', 00H, 't', 00H, '2', 00H, 'x', 00H, '4'
	DB	00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@OAMAFBFO@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IO@OAMAFBFO@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'm', 00H, 'a', 00H, 't', 00H, '2', 00H, 'x', 00H, '3'
	DB	00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
CONST	SEGMENT
??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@ DB 'i'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'i', 00H
	DB	's', 00H, '-', 00H, '>', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g'
	DB	00H, 't', 00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@HLGFBNDB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IO@HLGFBNDB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'm', 00H, 'a', 00H, 't', 00H, '2', 00H, 'x', 00H, '2'
	DB	00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
CONST	SEGMENT
??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@ DB 'i'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H, '>', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H
	DB	'<', 00H, ' ', 00H, 'm', 00H, '.', 00H, 'l', 00H, 'e', 00H, 'n'
	DB	00H, 'g', 00H, 't', 00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
CONST	SEGMENT
??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@ DB 'i'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H, '>', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H
	DB	'<', 00H, ' ', 00H, 'm', 00H, '[', 00H, '0', 00H, ']', 00H, '.'
	DB	00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H
	DB	'(', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'g', 00H, 't', 00H, 'c', 00H, '\', 00H, 'm'
	DB	00H, 'a', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'x', 00H, '_', 00H
	DB	'a', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H, '.'
	DB	00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IG@MLIPKIDC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IG@MLIPKIDC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'g', 00H, 't', 00H, 'c', 00H, '\', 00H, 'q'
	DB	00H, 'u', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@KCJBGCFC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IK@KCJBGCFC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, '3', 00H, '.', 00H, 'i'
	DB	00H, 'n', 00H, 'l', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_R0I@8
data$r	SEGMENT
??_R0I@8 DQ	FLAT:??_7type_info@@6B@			; unsigned int `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.I', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat4x4@I$01@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat4x4@I$01@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat4x4<unsigned int,2> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat4x4@I$01@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat4x3@I$01@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat4x3@I$01@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat4x3<unsigned int,2> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat4x3@I$01@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat4x2@I$01@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat4x2@I$01@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat4x2<unsigned int,2> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat4x2@I$01@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat3x4@I$01@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat3x4@I$01@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat3x4<unsigned int,2> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat3x4@I$01@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat3x3@I$01@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat3x3@I$01@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat3x3<unsigned int,2> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat3x3@I$01@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat3x2@I$01@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat3x2@I$01@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat3x2<unsigned int,2> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat3x2@I$01@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat2x4@I$01@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat2x4@I$01@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat2x4<unsigned int,2> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat2x4@I$01@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat2x3@I$01@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat2x3@I$01@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat2x3<unsigned int,2> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat2x3@I$01@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat2x2@I$01@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat2x2@I$01@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat2x2<unsigned int,2> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat2x2@I$01@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tvec4@I$01@glm@@@8
data$r	SEGMENT
??_R0?AU?$tvec4@I$01@glm@@@8 DQ FLAT:??_7type_info@@6B@	; glm::tvec4<unsigned int,2> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tvec4@I$01@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tvec3@I$01@glm@@@8
data$r	SEGMENT
??_R0?AU?$tvec3@I$01@glm@@@8 DQ FLAT:??_7type_info@@6B@	; glm::tvec3<unsigned int,2> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tvec3@I$01@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tvec2@I$01@glm@@@8
data$r	SEGMENT
??_R0?AU?$tvec2@I$01@glm@@@8 DQ FLAT:??_7type_info@@6B@	; glm::tvec2<unsigned int,2> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tvec2@I$01@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tquat@I$01@glm@@@8
data$r	SEGMENT
??_R0?AU?$tquat@I$01@glm@@@8 DQ FLAT:??_7type_info@@6B@	; glm::tquat<unsigned int,2> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tquat@I$01@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0H@8
data$r	SEGMENT
??_R0H@8 DQ	FLAT:??_7type_info@@6B@			; int `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.H', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat4x4@H$00@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat4x4@H$00@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat4x4<int,1> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat4x4@H$00@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat4x3@H$00@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat4x3@H$00@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat4x3<int,1> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat4x3@H$00@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat4x2@H$00@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat4x2@H$00@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat4x2<int,1> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat4x2@H$00@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat3x4@H$00@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat3x4@H$00@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat3x4<int,1> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat3x4@H$00@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat3x3@H$00@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat3x3@H$00@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat3x3<int,1> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat3x3@H$00@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat3x2@H$00@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat3x2@H$00@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat3x2<int,1> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat3x2@H$00@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat2x4@H$00@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat2x4@H$00@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat2x4<int,1> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat2x4@H$00@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat2x3@H$00@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat2x3@H$00@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat2x3<int,1> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat2x3@H$00@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat2x2@H$00@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat2x2@H$00@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat2x2<int,1> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat2x2@H$00@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tvec4@H$00@glm@@@8
data$r	SEGMENT
??_R0?AU?$tvec4@H$00@glm@@@8 DQ FLAT:??_7type_info@@6B@	; glm::tvec4<int,1> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tvec4@H$00@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tvec3@H$00@glm@@@8
data$r	SEGMENT
??_R0?AU?$tvec3@H$00@glm@@@8 DQ FLAT:??_7type_info@@6B@	; glm::tvec3<int,1> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tvec3@H$00@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tvec2@H$00@glm@@@8
data$r	SEGMENT
??_R0?AU?$tvec2@H$00@glm@@@8 DQ FLAT:??_7type_info@@6B@	; glm::tvec2<int,1> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tvec2@H$00@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tquat@H$00@glm@@@8
data$r	SEGMENT
??_R0?AU?$tquat@H$00@glm@@@8 DQ FLAT:??_7type_info@@6B@	; glm::tquat<int,1> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tquat@H$00@glm@@', 00H
data$r	ENDS
;	COMDAT ??_8?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B@
CONST	SEGMENT
??_8?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B@ DD 00H ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
	DD	088H
CONST	ENDS
;	COMDAT ??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DQ FLAT:??_R4?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
	DQ	FLAT:??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DQ FLAT:??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
	DQ	FLAT:??_E?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Lock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAAXXZ
	DQ	FLAT:?_Unlock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAAXXZ
	DQ	FLAT:?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z
	DQ	FLAT:?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z
	DQ	FLAT:?showmanyc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAA_JXZ
	DQ	FLAT:?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ
	DQ	FLAT:?uflow@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAGXZ
	DQ	FLAT:?xsgetn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAA_JPEA_W_J@Z
	DQ	FLAT:?xsputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAA_JPEB_W_J@Z
	DQ	FLAT:?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DQ	FLAT:?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DQ	FLAT:?setbuf@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAPEAV12@PEA_W_J@Z
	DQ	FLAT:?sync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAHXZ
	DQ	FLAT:?imbue@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAXAEBVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_R0?AU?$tmat4x4@M$0A@@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat4x4@M$0A@@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat4x4<float,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat4x4@M$0A@@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat4x3@M$0A@@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat4x3@M$0A@@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat4x3<float,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat4x3@M$0A@@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat4x2@M$0A@@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat4x2@M$0A@@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat4x2<float,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat4x2@M$0A@@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat3x4@M$0A@@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat3x4@M$0A@@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat3x4<float,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat3x4@M$0A@@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat3x3@M$0A@@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat3x3@M$0A@@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat3x3<float,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat3x3@M$0A@@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat3x2@M$0A@@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat3x2@M$0A@@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat3x2<float,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat3x2@M$0A@@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat2x4@M$0A@@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat2x4@M$0A@@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat2x4<float,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat2x4@M$0A@@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat2x3@M$0A@@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat2x3@M$0A@@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat2x3<float,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat2x3@M$0A@@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tmat2x2@M$0A@@glm@@@8
data$r	SEGMENT
??_R0?AU?$tmat2x2@M$0A@@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tmat2x2<float,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tmat2x2@M$0A@@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tvec4@M$0A@@glm@@@8
data$r	SEGMENT
??_R0?AU?$tvec4@M$0A@@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tvec4<float,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tvec4@M$0A@@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tvec3@M$0A@@glm@@@8
data$r	SEGMENT
??_R0?AU?$tvec3@M$0A@@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tvec3<float,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tvec3@M$0A@@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tvec2@M$0A@@glm@@@8
data$r	SEGMENT
??_R0?AU?$tvec2@M$0A@@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tvec2<float,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tvec2@M$0A@@glm@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AU?$tquat@M$0A@@glm@@@8
data$r	SEGMENT
??_R0?AU?$tquat@M$0A@@glm@@@8 DQ FLAT:??_7type_info@@6B@ ; glm::tquat<float,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU?$tquat@M$0A@@glm@@', 00H
data$r	ENDS
;	COMDAT ??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
CONST	SEGMENT
??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	088H
CONST	ENDS
;	COMDAT ??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DQ FLAT:??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DQ	FLAT:??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DQ FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DQ	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
	DQ	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
	DQ	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ
	DQ	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ
	DQ	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
	DQ	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
	DQ	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DQ	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DQ	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z
	DQ	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_7?$format_punct@_W@io@glm@@6B@
CONST	SEGMENT
??_7?$format_punct@_W@io@glm@@6B@ DQ FLAT:??_R4?$format_punct@_W@io@glm@@6B@ ; glm::io::format_punct<wchar_t>::`vftable'
	DQ	FLAT:??_E?$format_punct@_W@io@glm@@UEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_7?$format_punct@D@io@glm@@6B@
CONST	SEGMENT
??_7?$format_punct@D@io@glm@@6B@ DQ FLAT:??_R4?$format_punct@D@io@glm@@6B@ ; glm::io::format_punct<char>::`vftable'
	DQ	FLAT:??_E?$format_punct@D@io@glm@@UEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_R0M@8
data$r	SEGMENT
??_R0M@8 DQ	FLAT:??_7type_info@@6B@			; float `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.M', 00H
data$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@NGAJILNN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IK@NGAJILNN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, '4', 00H, '.', 00H, 'i'
	DB	00H, 'n', 00H, 'l', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
CONST	SEGMENT
??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ DB 'i'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'i', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, 't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '('
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
CONST	SEGMENT
??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 's', 00H, '4', 00H, '0', 00H, '0', 00H, '2'
	DB	00H, '6', 00H, '7', 00H, '5', 00H, '\', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '-', 00H, '0', 00H
	DB	'.', 00H, '9', 00H, '.', 00H, '8', 00H, '.', 00H, '5', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 'l', 00H
	DB	'm', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, '2', 00H, '.', 00H, 'i'
	DB	00H, 'n', 00H, 'l', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@IIACENIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@IIACENIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30037\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01NBENCBCI@?$CK@
CONST	SEGMENT
??_C@_01NBENCBCI@?$CK@ DB '*', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@LEPEPCM@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@LEPEPCM@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Prog'
	DB	'ram Files (x86)\Microsoft Visual Studio\2019\Community\VC\Too'
	DB	'ls\MSVC\14.29.30037\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_cast@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
_CTA2?AVbad_cast@std@@ DD 02H
	DD	imagerel _CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI2?AVbad_cast@std@@
xdata$x	SEGMENT
_TI2?AVbad_cast@std@@ DD 00H
	DD	imagerel ??1bad_cast@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast@ DB 'bad cast', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DQ FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DQ	FLAT:??_Ebad_cast@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@FOAKNOEL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@FOAKNOEL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '9', 00H, '.', 00H, '3', 00H, '0', 00H, '0', 00H
	DB	'3', 00H, '7', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@KDIDHNIL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@KDIDHNIL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30037\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	099H, 05H
	DB	02H
	DB	'q', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>
	DB	053H
	DB	037H
	DB	039H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	099H, 05H
	DB	02H
	DB	'q', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>
	DB	053H
	DB	037H
	DB	038H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	099H, 05H
	DB	02H
	DB	'q', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>
	DB	053H
	DB	037H
	DB	037H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__E?id@?$format_punct@_W@io@glm@@2V0locale@std@@A@@YAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__E?id@?$format_punct@D@io@glm@@2V0locale@std@@A@@YAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat4x4<float,2> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat4x4<float,2> >
	DD	010H
	DQ	FLAT:??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat4x4<float,2> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat4x3<float,2> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat4x3<float,2> >
	DD	010H
	DQ	FLAT:??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat4x3<float,2> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat4x2<float,2> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat4x2<float,2> >
	DD	010H
	DQ	FLAT:??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat4x2<float,2> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat3x4<float,2> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat3x4<float,2> >
	DD	0cH
	DQ	FLAT:??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat3x4<float,2> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat3x3<float,2> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat3x3<float,2> >
	DD	0cH
	DQ	FLAT:??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat3x3<float,2> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat3x2<float,2> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat3x2<float,2> >
	DD	0cH
	DQ	FLAT:??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat3x2<float,2> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z DD 022a01H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat2x4<float,2> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat2x4<float,2> >
	DD	08H
	DQ	FLAT:??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat2x4<float,2> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z DD 022a01H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat2x3<float,2> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat2x3<float,2> >
	DD	08H
	DQ	FLAT:??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat2x3<float,2> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z DD 022a01H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat2x2<float,2> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat2x2<float,2> >
	DD	08H
	DQ	FLAT:??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat2x2<float,2> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat4x4<float,0> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat4x4<float,0> >
	DD	010H
	DQ	FLAT:??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat4x4<float,0> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat4x3<float,0> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat4x3<float,0> >
	DD	010H
	DQ	FLAT:??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat4x3<float,0> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat4x2<float,0> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat4x2<float,0> >
	DD	010H
	DQ	FLAT:??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat4x2<float,0> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat3x4<float,0> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat3x4<float,0> >
	DD	0cH
	DQ	FLAT:??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat3x4<float,0> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat3x3<float,0> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat3x3<float,0> >
	DD	0cH
	DQ	FLAT:??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat3x3<float,0> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat3x2<float,0> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat3x2<float,0> >
	DD	0cH
	DQ	FLAT:??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat3x2<float,0> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z DD 022a01H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat2x4<float,0> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat2x4<float,0> >
	DD	08H
	DQ	FLAT:??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat2x4<float,0> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z DD 022a01H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat2x3<float,0> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat2x3<float,0> >
	DD	08H
	DQ	FLAT:??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat2x3<float,0> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$column@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z DD 022a01H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z$rtcName$0 DB 052H ; glm::row<glm::tmat2x2<float,0> >
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z$rtcVarDesc DD 028H ; glm::row<glm::tmat2x2<float,0> >
	DD	08H
	DQ	FLAT:??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z$rtcName$0
	ORG $+48
??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z$rtcFrameData DD 01H ; glm::row<glm::tmat2x2<float,0> >
	DD	00H
	DQ	FLAT:??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Fillobj@_W@std@@QEAA@_W@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Fillobj@D@std@@QEAA@D@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	'M', 02H
	DB	04H
	DB	'v'
	DB	02H
	DB	'.'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z
	DD	imagerel $ip2state$??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z DD 032611H
	DD	012010dH
	DD	07006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z$rtcName$0 DB 05fH ; std::use_facet<glm::io::format_punct<wchar_t> >
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z$rtcName$1 DB 05fH ; std::use_facet<glm::io::format_punct<wchar_t> >
	DB	050H
	DB	073H
	DB	061H
	DB	076H
	DB	065H
	DB	00H
	ORG $+1
??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z$rtcName$2 DB 05fH ; std::use_facet<glm::io::format_punct<wchar_t> >
	DB	050H
	DB	073H
	DB	061H
	DB	076H
	DB	065H
	DB	05fH
	DB	067H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+3
??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z$rtcVarDesc DD 078H ; std::use_facet<glm::io::format_punct<wchar_t> >
	DD	08H
	DQ	FLAT:??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z$rtcName$1
	DD	024H
	DD	04H
	DQ	FLAT:??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z$rtcName$0
	ORG $+144
??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z$rtcFrameData DD 03H ; std::use_facet<glm::io::format_punct<wchar_t> >
	DD	00H
	DQ	FLAT:??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z DB 060H
	DD	imagerel $ip2state$??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z DD 022019H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z$rtcName$0 DB 05fH ; std::has_facet<glm::io::format_punct<wchar_t> >
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z$rtcVarDesc DD 024H ; std::has_facet<glm::io::format_punct<wchar_t> >
	DD	04H
	DQ	FLAT:??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z$rtcName$0
	ORG $+48
??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z$rtcFrameData DD 01H ; std::has_facet<glm::io::format_punct<wchar_t> >
	DD	00H
	DQ	FLAT:??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	'M', 02H
	DB	04H
	DB	'v'
	DB	02H
	DB	'.'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z
	DD	imagerel $ip2state$??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z DD 032611H
	DD	012010dH
	DD	07006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z$rtcName$0 DB 05fH ; std::use_facet<glm::io::format_punct<char> >
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z$rtcName$1 DB 05fH ; std::use_facet<glm::io::format_punct<char> >
	DB	050H
	DB	073H
	DB	061H
	DB	076H
	DB	065H
	DB	00H
	ORG $+1
??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z$rtcName$2 DB 05fH ; std::use_facet<glm::io::format_punct<char> >
	DB	050H
	DB	073H
	DB	061H
	DB	076H
	DB	065H
	DB	05fH
	DB	067H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+3
??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z$rtcVarDesc DD 078H ; std::use_facet<glm::io::format_punct<char> >
	DD	08H
	DQ	FLAT:??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z$rtcName$1
	DD	024H
	DD	04H
	DQ	FLAT:??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z$rtcName$0
	ORG $+144
??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z$rtcFrameData DD 03H ; std::use_facet<glm::io::format_punct<char> >
	DD	00H
	DQ	FLAT:??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z DB 060H
	DD	imagerel $ip2state$??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z DD 022019H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z$rtcName$0 DB 05fH ; std::has_facet<glm::io::format_punct<char> >
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z$rtcVarDesc DD 024H ; std::has_facet<glm::io::format_punct<char> >
	DD	04H
	DQ	FLAT:??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z$rtcName$0
	ORG $+48
??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z$rtcFrameData DD 01H ; std::has_facet<glm::io::format_punct<char> >
	DD	00H
	DQ	FLAT:??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@_W@std@@YAPEA_WAEA_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@D@std@@YAPEADAEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max@PEAD@std@@YAAEBQEADAEBQEAD0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max@PEA_W@std@@YAAEBQEA_WAEBQEA_W0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z DD 032b11H
	DD	0200112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x4,float,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x4,float,2>
	DB	053H
	DB	037H
	DB	035H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x4,float,2>
	DB	053H
	DB	037H
	DB	036H
	DB	00H
	ORG $+7
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x4,float,2>
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x4,float,2>
	DD	00H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z DD 032b11H
	DD	01e0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x3,float,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x3,float,2>
	DB	053H
	DB	037H
	DB	033H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x3,float,2>
	DB	053H
	DB	037H
	DB	034H
	DB	00H
	ORG $+7
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x3,float,2>
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x3,float,2>
	DD	00H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z DD 032b11H
	DD	01e0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x2,float,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x2,float,2>
	DB	053H
	DB	037H
	DB	031H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x2,float,2>
	DB	053H
	DB	037H
	DB	032H
	DB	00H
	ORG $+7
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x2,float,2>
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x2,float,2>
	DD	00H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z DD 032b11H
	DD	01e0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x4,float,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x4,float,2>
	DB	053H
	DB	036H
	DB	039H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x4,float,2>
	DB	053H
	DB	037H
	DB	030H
	DB	00H
	ORG $+7
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x4,float,2>
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x4,float,2>
	DD	00H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z DD 032b11H
	DD	01e0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x3,float,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x3,float,2>
	DB	053H
	DB	036H
	DB	037H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x3,float,2>
	DB	053H
	DB	036H
	DB	038H
	DB	00H
	ORG $+7
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x3,float,2>
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x3,float,2>
	DD	00H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z DD 032b11H
	DD	01c0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x2,float,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x2,float,2>
	DB	053H
	DB	036H
	DB	035H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x2,float,2>
	DB	053H
	DB	036H
	DB	036H
	DB	00H
	ORG $+7
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x2,float,2>
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x2,float,2>
	DD	00H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z DD 032b11H
	DD	01e0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x4,float,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x4,float,2>
	DB	053H
	DB	036H
	DB	033H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x4,float,2>
	DB	053H
	DB	036H
	DB	034H
	DB	00H
	ORG $+7
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x4,float,2>
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x4,float,2>
	DD	00H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z DD 032b11H
	DD	01c0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x3,float,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x3,float,2>
	DB	053H
	DB	036H
	DB	031H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x3,float,2>
	DB	053H
	DB	036H
	DB	032H
	DB	00H
	ORG $+7
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x3,float,2>
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x3,float,2>
	DD	00H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z DD 032b11H
	DD	01c0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x2,float,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x2,float,2>
	DB	053H
	DB	035H
	DB	039H
	DB	00H
	ORG $+3
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x2,float,2>
	DB	053H
	DB	036H
	DB	030H
	DB	00H
	ORG $+7
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x2,float,2>
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x2,float,2>
	DD	00H
	DQ	FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z DD 032b11H
	DD	0200112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x4,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x4,float,0>
	DB	053H
	DB	035H
	DB	037H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x4,float,0>
	DB	053H
	DB	035H
	DB	038H
	DB	00H
	ORG $+7
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x4,float,0>
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x4,float,0>
	DD	00H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z DD 032b11H
	DD	01e0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x3,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x3,float,0>
	DB	053H
	DB	035H
	DB	035H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x3,float,0>
	DB	053H
	DB	035H
	DB	036H
	DB	00H
	ORG $+7
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x3,float,0>
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x3,float,0>
	DD	00H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z DD 032b11H
	DD	01e0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x2,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x2,float,0>
	DB	053H
	DB	035H
	DB	033H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x2,float,0>
	DB	053H
	DB	035H
	DB	034H
	DB	00H
	ORG $+7
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x2,float,0>
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x2,float,0>
	DD	00H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z DD 032b11H
	DD	01e0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x4,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x4,float,0>
	DB	053H
	DB	035H
	DB	031H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x4,float,0>
	DB	053H
	DB	035H
	DB	032H
	DB	00H
	ORG $+7
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x4,float,0>
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x4,float,0>
	DD	00H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z DD 032b11H
	DD	01e0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x3,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x3,float,0>
	DB	053H
	DB	034H
	DB	039H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x3,float,0>
	DB	053H
	DB	035H
	DB	030H
	DB	00H
	ORG $+7
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x3,float,0>
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x3,float,0>
	DD	00H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z DD 032b11H
	DD	01c0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x2,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x2,float,0>
	DB	053H
	DB	034H
	DB	037H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x2,float,0>
	DB	053H
	DB	034H
	DB	038H
	DB	00H
	ORG $+7
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x2,float,0>
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x2,float,0>
	DD	00H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z DD 032b11H
	DD	01e0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x4,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x4,float,0>
	DB	053H
	DB	034H
	DB	035H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x4,float,0>
	DB	053H
	DB	034H
	DB	036H
	DB	00H
	ORG $+7
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x4,float,0>
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x4,float,0>
	DD	00H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z DD 032b11H
	DD	01c0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x3,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x3,float,0>
	DB	053H
	DB	034H
	DB	033H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x3,float,0>
	DB	053H
	DB	034H
	DB	034H
	DB	00H
	ORG $+7
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x3,float,0>
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x3,float,0>
	DD	00H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	011H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z DD 032b11H
	DD	01c0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x2,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x2,float,0>
	DB	053H
	DB	034H
	DB	031H
	DB	00H
	ORG $+3
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z$rtcName$2 DB 024H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x2,float,0>
	DB	053H
	DB	034H
	DB	032H
	DB	00H
	ORG $+7
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z$rtcVarDesc DD 084H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x2,float,0>
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x2,float,0>
	DD	00H
	DQ	FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>
	DB	053H
	DB	034H
	DB	030H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>
	DB	053H
	DB	033H
	DB	039H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>
	DB	053H
	DB	033H
	DB	038H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>
	DB	053H
	DB	033H
	DB	037H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>
	DD	038H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>
	DD	00H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>
	DB	053H
	DB	033H
	DB	036H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>
	DD	038H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>
	DD	00H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>
	DB	053H
	DB	033H
	DB	035H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>
	DD	038H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>
	DD	00H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>
	DB	053H
	DB	033H
	DB	034H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>
	DB	053H
	DB	033H
	DB	033H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>
	DB	053H
	DB	033H
	DB	032H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>
	DB	053H
	DB	033H
	DB	031H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>
	DD	038H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>
	DD	00H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>
	DB	053H
	DB	033H
	DB	030H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>
	DD	038H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>
	DD	00H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>
	DB	053H
	DB	032H
	DB	039H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>
	DD	038H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>
	DD	00H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	099H, 05H
	DB	02H
	DB	'q', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>
	DB	053H
	DB	032H
	DB	038H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	099H, 05H
	DB	02H
	DB	'q', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>
	DB	053H
	DB	032H
	DB	037H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	099H, 05H
	DB	02H
	DB	'q', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>
	DB	053H
	DB	032H
	DB	036H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	099H, 05H
	DB	02H
	DB	'q', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>
	DB	053H
	DB	032H
	DB	035H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>
	DD	038H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>
	DD	00H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	099H, 05H
	DB	02H
	DB	'q', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>
	DB	053H
	DB	032H
	DB	034H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>
	DD	038H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>
	DD	00H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	099H, 05H
	DB	02H
	DB	'q', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>
	DB	053H
	DB	032H
	DB	033H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>
	DD	038H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>
	DD	00H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>
	DB	053H
	DB	032H
	DB	032H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>
	DB	053H
	DB	032H
	DB	031H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>
	DD	038H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>
	DD	00H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>
	DB	053H
	DB	032H
	DB	030H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	091H, 05H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>
	DB	053H
	DB	031H
	DB	039H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>
	DD	038H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>
	DD	00H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	099H, 05H
	DB	02H
	DB	'q', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>
	DB	053H
	DB	031H
	DB	038H
	DB	00H
	ORG $+3
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>
	DD	038H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>
	DD	00H
	DQ	FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	091H, 03H
	DB	02H
	DB	'B'
	DB	04H
	DB	0e1H, 09H
	DB	02H
	DB	'x'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z
	DD	imagerel $tryMap$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z
	DD	imagerel $ip2state$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z DD 033019H
	DD	0160117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z$rtcName$0 DB 05fH ; std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z$rtcVarDesc DD 038H ; std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>
	DD	010H
	DQ	FLAT:??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z$rtcName$0
	ORG $+48
??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z$rtcFrameData DD 01H ; std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAHH@Z DD 020901H
	DD	070051209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD 021901H
	DD	07015b219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD 021901H
	DD	07015d219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ DD 022001H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ$rtcName$0 DB 05fH ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow
	DB	050H
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+10
?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ$rtcVarDesc DD 038H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow
	DD	08H
	DQ	FLAT:?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ$rtcName$0
	ORG $+48
?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ$rtcFrameData DD 01H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow
	DD	00H
	DQ	FLAT:?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z DD 020f01H
	DD	0700bb20fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	035H
	DB	0daH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DB 06H
	DB	00H
	DB	00H
	DB	0c4H
	DB	02H
	DB	0a2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DB 028H
	DD	imagerel $stateUnwindMap$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
	DD	imagerel $ip2state$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 033d19H
	DD	0140112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
	DD	09aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$rtcName$0 DB 05fH ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$rtcName$1 DB 05fH ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	DB	056H
	DB	069H
	DB	065H
	DB	077H
	DB	00H
	ORG $+2
?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$rtcVarDesc DD 068H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	DD	018H
	DQ	FLAT:?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$rtcName$1
	DD	028H
	DD	028H
	DQ	FLAT:?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$rtcName$0
	ORG $+96
?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$rtcFrameData DD 02H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	DD	00H
	DQ	FLAT:?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ DB 060H
	DD	imagerel $ip2state$?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ DD 032919H
	DD	0700cc210H
	DD	0600bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ$rtcName$0 DB 05fH ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Get_buffer_view
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+8
?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ$rtcVarDesc DD 028H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Get_buffer_view
	DD	018H
	DQ	FLAT:?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ$rtcName$0
	ORG $+48
?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ$rtcFrameData DD 01H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Get_buffer_view
	DD	00H
	DQ	FLAT:?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z DB 06H
	DB	00H
	DB	00H
	DB	'4'
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z
	DD	imagerel $ip2state$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z DD 020e11H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DB 08H
	DB	00H
	DB	00H
	DB	082H
	DB	02H
	DB	'b'
	DB	04H
	DB	0b4H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD 020e11H
	DD	0700a520eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'>'
	DB	02H
	DB	0a5H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DD 020f11H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'A', 02H
	DB	04H
	DB	099H, 05H
	DB	02H
	DB	'q', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z
	DD	imagerel $ip2state$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z DD 032b11H
	DD	0220112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcName$0 DB 063H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcName$1 DB 024H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>
	DB	053H
	DB	031H
	DB	037H
	DB	00H
	ORG $+3
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcName$2 DB 062H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>
	DB	073H
	DB	073H
	DB	00H
	ORG $+8
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcVarDesc DD 088H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>
	DD	038H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcName$0
	ORG $+144
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcFrameData DD 03H ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>
	DD	00H
	DQ	FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	091H, 03H
	DB	02H
	DB	'B'
	DB	04H
	DB	0d1H, 09H
	DB	02H
	DB	'x'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	imagerel $tryMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	imagerel $ip2state$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD 033019H
	DD	0160117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcName$0 DB 05fH ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcVarDesc DD 038H ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
	DD	010H
	DQ	FLAT:??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcName$0
	ORG $+48
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcFrameData DD 01H ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z DD 020901H
	DD	070051209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD 021901H
	DD	07015b219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD 021901H
	DD	07015d219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ DD 022001H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcName$0 DB 05fH ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
	DB	050H
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+10
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcVarDesc DD 038H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
	DD	08H
	DQ	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcName$0
	ORG $+48
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcFrameData DD 01H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
	DD	00H
	DQ	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD 020e01H
	DD	0700a720eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD 020e01H
	DD	0700ab20eH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	035H
	DB	0daH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 06H
	DB	00H
	DB	00H
	DB	0c4H
	DB	02H
	DB	0a2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 028H
	DD	imagerel $stateUnwindMap$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	imagerel $ip2state$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 033d19H
	DD	0140112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	09aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcName$0 DB 05fH ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcName$1 DB 05fH ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	DB	056H
	DB	069H
	DB	065H
	DB	077H
	DB	00H
	ORG $+2
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcVarDesc DD 068H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	DD	018H
	DQ	FLAT:?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcName$1
	DD	028H
	DD	028H
	DQ	FLAT:?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcName$0
	ORG $+96
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcFrameData DD 02H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	DD	00H
	DQ	FLAT:?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ DB 060H
	DD	imagerel $ip2state$?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ DD 032919H
	DD	0700cc210H
	DD	0600bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ$rtcName$0 DB 05fH ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Get_buffer_view
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+8
?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ$rtcVarDesc DD 028H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Get_buffer_view
	DD	018H
	DQ	FLAT:?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ$rtcName$0
	ORG $+48
?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ$rtcFrameData DD 01H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Get_buffer_view
	DD	00H
	DQ	FLAT:?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 06H
	DB	00H
	DB	00H
	DB	'4'
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
	DD	imagerel $ip2state$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD 020e11H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 08H
	DB	00H
	DB	00H
	DB	082H
	DB	02H
	DB	'b'
	DB	04H
	DB	0b4H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 020e11H
	DD	0700a520eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'>'
	DB	02H
	DB	0a5H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 020f11H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD 021301H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD 021301H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z DD 021301H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$format_punct@_W@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@_W@io@glm@@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z DB 012H
	DB	00H
	DB	00H
	DB	01dH, 02H
	DB	02H
	DB	'n'
	DB	00H
	DB	'V'
	DB	04H
	DB	'^'
	DB	06H
	DB	'L'
	DB	04H
	DB	016H
	DB	00H
	DB	'p'
	DB	08H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$2@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	086H
	DD	imagerel ?dtor$5@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z
	DD	imagerel $ip2state$??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z DD 030d11H
	DD	01c010dH
	DD	07006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$format_punct@_W@io@glm@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$format_punct@_W@io@glm@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$format_punct@_W@io@glm@@QEAA@AEBV012@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$format_punct@_W@io@glm@@QEAA@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$format_punct@D@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@D@io@glm@@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z DB 012H
	DB	00H
	DB	00H
	DB	01dH, 02H
	DB	02H
	DB	'n'
	DB	00H
	DB	'V'
	DB	04H
	DB	'^'
	DB	06H
	DB	'L'
	DB	04H
	DB	016H
	DB	00H
	DB	'p'
	DB	08H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$2@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	086H
	DD	imagerel ?dtor$5@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z
	DD	imagerel $ip2state$??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z DD 030d11H
	DD	01c010dH
	DD	07006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$format_punct@D@io@glm@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$format_punct@D@io@glm@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$format_punct@D@io@glm@@QEAA@AEBV012@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$format_punct@D@io@glm@@QEAA@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 020a01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAPEA_W@std@@YAPEAXPEAPEA_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 020f19H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x4@M$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat4x4@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@000@Z DD 031a01H
	DD	07016421aH
	DD	06015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x3@M$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat4x3@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@000@Z DD 031a01H
	DD	07016421aH
	DD	06015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x2@M$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat4x2@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@000@Z DD 021901H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x4@M$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat3x4@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@00@Z DD 031a01H
	DD	07016421aH
	DD	06015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x3@M$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat3x3@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@00@Z DD 031a01H
	DD	07016421aH
	DD	06015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x2@M$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat3x2@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@00@Z DD 021901H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x4@M$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat2x4@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@0@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x3@M$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat2x3@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@0@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x2@M$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat2x2@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'j'
	DB	02H
	DB	0e8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z
	DD	imagerel $ip2state$??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z DD 022511H
	DD	0700bb20fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z$rtcName$0 DB 063H ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+7
??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z$rtcVarDesc DD 028H ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	DD	010H
	DQ	FLAT:??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z$rtcName$0
	ORG $+48
??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUorder@01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHHH@?$tvec4@M$01@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$01@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@M$01@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@M$01@glm@@QEAAAEAMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHH@?$tvec3@M$01@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@M$01@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@M$01@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@M$01@glm@@QEAAAEAMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH@?$tvec2@M$01@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$01@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@M$01@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@M$01@glm@@QEAAAEAMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x4@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat4x4@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@000@Z DD 031a01H
	DD	07016421aH
	DD	06015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x3@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat4x3@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@000@Z DD 031a01H
	DD	07016421aH
	DD	06015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x2@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat4x2@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@000@Z DD 021901H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x4@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat3x4@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@00@Z DD 031a01H
	DD	07016421aH
	DD	06015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x3@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat3x3@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@00@Z DD 031a01H
	DD	07016421aH
	DD	06015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x2@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat3x2@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@00@Z DD 021901H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x4@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat2x4@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@0@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x3@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat2x3@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@0@Z DD 031501H
	DD	070114215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x2@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat2x2@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'j'
	DB	02H
	DB	0e8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z
	DD	imagerel $ip2state$??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z DD 022511H
	DD	0700bb20fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z$rtcName$0 DB 063H ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	DB	065H
	DB	072H
	DB	062H
	DB	065H
	DB	072H
	DB	075H
	DB	073H
	DB	00H
	ORG $+7
??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z$rtcVarDesc DD 028H ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z$rtcName$0
	ORG $+48
??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUorder@01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z
	DD	imagerel $ip2state$??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	DD	0e8H
	DQ	FLAT:??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z
	DD	imagerel $ip2state$??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	DD	0e8H
	DQ	FLAT:??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z
	DD	imagerel $ip2state$??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	DD	0e8H
	DQ	FLAT:??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z
	DD	imagerel $ip2state$??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,char,std::char_traits<char> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,char,std::char_traits<char> >
	DD	0e8H
	DQ	FLAT:??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,char,std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z
	DD	imagerel $ip2state$??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,char,std::char_traits<char> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,char,std::char_traits<char> >
	DD	0e8H
	DQ	FLAT:??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,char,std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z
	DD	imagerel $ip2state$??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,char,std::char_traits<char> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,char,std::char_traits<char> >
	DD	0e8H
	DQ	FLAT:??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,char,std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHHH@?$tvec4@I$01@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@I$01@glm@@QEBAAEBIH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@I$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHH@?$tvec3@I$01@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@I$01@glm@@QEBAAEBIH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@I$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH@?$tvec2@I$01@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@I$01@glm@@QEBAAEBIH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@I$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z
	DD	imagerel $ip2state$??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,wchar_t,std::char_traits<wchar_t> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,wchar_t,std::char_traits<wchar_t> >
	DD	0e8H
	DQ	FLAT:??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z
	DD	imagerel $ip2state$??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,wchar_t,std::char_traits<wchar_t> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,wchar_t,std::char_traits<wchar_t> >
	DD	0e8H
	DQ	FLAT:??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z
	DD	imagerel $ip2state$??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,wchar_t,std::char_traits<wchar_t> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,wchar_t,std::char_traits<wchar_t> >
	DD	0e8H
	DQ	FLAT:??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z
	DD	imagerel $ip2state$??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,char,std::char_traits<char> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,char,std::char_traits<char> >
	DD	0e8H
	DQ	FLAT:??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,char,std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z
	DD	imagerel $ip2state$??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,char,std::char_traits<char> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,char,std::char_traits<char> >
	DD	0e8H
	DQ	FLAT:??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,char,std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z
	DD	imagerel $ip2state$??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,char,std::char_traits<char> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,char,std::char_traits<char> >
	DD	0e8H
	DQ	FLAT:??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,char,std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@H$00@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@H$00@glm@@QEBAAEBHH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@H$00@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@H$00@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@H$00@glm@@QEBAAEBHH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@H$00@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@H$00@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@H$00@glm@@QEBAAEBHH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@H$00@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z
	DD	imagerel $ip2state$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,wchar_t,std::char_traits<wchar_t> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,wchar_t,std::char_traits<wchar_t> >
	DD	0e8H
	DQ	FLAT:??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z
	DD	imagerel $ip2state$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,wchar_t,std::char_traits<wchar_t> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,wchar_t,std::char_traits<wchar_t> >
	DD	0e8H
	DQ	FLAT:??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z
	DD	imagerel $ip2state$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,wchar_t,std::char_traits<wchar_t> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,wchar_t,std::char_traits<wchar_t> >
	DD	0e8H
	DQ	FLAT:??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z
	DD	imagerel $ip2state$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,char,std::char_traits<char> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,char,std::char_traits<char> >
	DD	0e8H
	DQ	FLAT:??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,char,std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z
	DD	imagerel $ip2state$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,char,std::char_traits<char> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,char,std::char_traits<char> >
	DD	0e8H
	DQ	FLAT:??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,char,std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z
	DD	imagerel $ip2state$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,char,std::char_traits<char> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,char,std::char_traits<char> >
	DD	0e8H
	DQ	FLAT:??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,char,std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@M$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z
	DD	imagerel $ip2state$??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	DD	0e8H
	DQ	FLAT:??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z
	DD	imagerel $ip2state$??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,char,std::char_traits<char> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,char,std::char_traits<char> >
	DD	0e8H
	DQ	FLAT:??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,char,std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tquat@I$01@glm@@QEAA@AEBI000@Z DD 011501H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tquat@I$01@glm@@QEBAAEBIH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tquat@I$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z
	DD	imagerel $ip2state$??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,wchar_t,std::char_traits<wchar_t> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,wchar_t,std::char_traits<wchar_t> >
	DD	0e8H
	DQ	FLAT:??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z
	DD	imagerel $ip2state$??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,char,std::char_traits<char> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,char,std::char_traits<char> >
	DD	0e8H
	DQ	FLAT:??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,char,std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tquat@H$00@glm@@QEAA@AEBH000@Z DD 011501H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tquat@H$00@glm@@QEBAAEBHH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tquat@H$00@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$unformatted@_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@AEAV23@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z DB 0aH
	DB	00H
	DB	00H
	DB	08cH
	DB	02H
	DB	011H, 02H
	DB	04H
	DB	'-', 0aH
	DB	02H
	DB	0c8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z
	DD	imagerel $tryMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z
	DD	imagerel $ip2state$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z DD 032b19H
	DD	0180112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z$rtcName$0 DB 05fH ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z$rtcVarDesc DD 038H ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	DD	010H
	DQ	FLAT:??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z$rtcName$0
	ORG $+48
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z$rtcFrameData DD 01H ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z
	DD	imagerel $ip2state$??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,wchar_t,std::char_traits<wchar_t> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,wchar_t,std::char_traits<wchar_t> >
	DD	0e8H
	DQ	FLAT:??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z DB 012H
	DB	00H
	DB	00H
	DB	'V'
	DB	02H
	DB	' '
	DB	04H
	DB	'x'
	DB	02H
	DB	'D'
	DB	06H
	DB	'L'
	DB	08H
	DB	'L'
	DB	06H
	DB	016H
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$2@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z
	DD	imagerel $ip2state$??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z DD 031211H
	DD	0120112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z DB 0eH
	DB	00H
	DB	00H
	DB	0f9H, 03H
	DB	02H
	DB	'B'
	DB	04H
	DB	086H
	DB	06H
	DB	'D'
	DB	04H
	DB	0b1H, 0cH
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	02H
	DB	04H
	DB	06H
	DD	imagerel $handlerMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA
	DB	028H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA
	DB	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z DD 032b19H
	DD	01e0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z$rtcName$0 DB 05fH ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z$rtcVarDesc DD 048H ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	DD	010H
	DQ	FLAT:??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z$rtcName$0
	ORG $+48
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z$rtcFrameData DD 01H ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z DB 0eH
	DB	00H
	DB	00H
	DB	08aH
	DB	02H
	DB	0b0H
	DB	04H
	DB	'$'
	DB	02H
	DB	09H, 02H
	DB	06H
	DB	0c9H, 0aH
	DB	02H
	DB	0ceH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z DB 02H
	DB	04H
	DB	04H
	DB	06H
	DD	imagerel $handlerMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA
	DB	050H
	DB	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z
	DD	imagerel $tryMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z
	DD	imagerel $ip2state$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z DD 032a19H
	DD	01c0111H
	DD	0700aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z$rtcName$0 DB 05fH ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z$rtcVarDesc DD 038H ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	DD	010H
	DQ	FLAT:??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z$rtcName$0
	ORG $+48
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z$rtcFrameData DD 01H ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$unformatted@DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ios@DU?$char_traits@D@std@@@std@@AEAV23@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0f5H, 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z
	DD	imagerel $ip2state$??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z DD 033011H
	DD	0280117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z$rtcName$0 DB 06fH ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,char,std::char_traits<char> >
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z$rtcVarDesc DD 030H ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,char,std::char_traits<char> >
	DD	0e8H
	DQ	FLAT:??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z$rtcName$0
	ORG $+48
??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z$rtcFrameData DD 01H ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,char,std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z DB 012H
	DB	00H
	DB	00H
	DB	'V'
	DB	02H
	DB	' '
	DB	04H
	DB	'x'
	DB	02H
	DB	'D'
	DB	06H
	DB	'L'
	DB	08H
	DB	'L'
	DB	06H
	DB	016H
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$2@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z
	DD	imagerel $ip2state$??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z DD 031211H
	DD	0120112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tquat@M$0A@@glm@@QEAA@AEBM000@Z DD 011501H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tquat@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tquat@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	0f9H, 03H
	DB	02H
	DB	'B'
	DB	04H
	DB	019H, 0aH
	DB	02H
	DB	'x'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 032b19H
	DD	01a0112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc DD 048H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DB 0aH
	DB	00H
	DB	00H
	DB	08aH
	DB	02H
	DB	'5', 02H
	DB	04H
	DB	0f5H, 09H
	DB	02H
	DB	0c8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD 032a19H
	DD	0180111H
	DD	0700aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcVarDesc DD 038H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD 021401H
	DD	070109214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$01@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pointer_to@?$pointer_traits@PEA_W@std@@SAPEA_WAEA_W@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 020f19H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 022f01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc DD 048H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z DD 021901H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEA_WAEAPEA_W@std@@YAXAEAPEA_W0@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z DD 022f01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z$rtcName$0 DB 05fH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z$rtcVarDesc DD 048H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z$rtcFrameData DD 01H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBA@QEA_W_KQEB_W@Z DD 021901H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD 021301H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z DD 021301H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	'M', 02H
	DB	04H
	DB	'v'
	DB	02H
	DB	'.'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z
	DD	imagerel $ip2state$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z DD 032611H
	DD	012010dH
	DD	07006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z$rtcName$0 DB 05fH ; std::use_facet<std::ctype<wchar_t> >
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z$rtcName$1 DB 05fH ; std::use_facet<std::ctype<wchar_t> >
	DB	050H
	DB	073H
	DB	061H
	DB	076H
	DB	065H
	DB	00H
	ORG $+1
??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z$rtcName$2 DB 05fH ; std::use_facet<std::ctype<wchar_t> >
	DB	050H
	DB	073H
	DB	061H
	DB	076H
	DB	065H
	DB	05fH
	DB	067H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+3
??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z$rtcVarDesc DD 078H ; std::use_facet<std::ctype<wchar_t> >
	DD	08H
	DQ	FLAT:??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z$rtcName$1
	DD	024H
	DD	04H
	DQ	FLAT:??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z$rtcName$0
	ORG $+144
??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z$rtcFrameData DD 03H ; std::use_facet<std::ctype<wchar_t> >
	DD	00H
	DQ	FLAT:??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	034H
	DW	0f98H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'9', 08H
	DB	02H
	DB	08dH, '5'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z
	DD	imagerel $ip2state$??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z DD 033c19H
	DD	0d80111H
	DD	0700aH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z
	DD	06baH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$0 DB 076H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	032H
	DB	05fH
	DB	031H
	DB	00H
	ORG $+3
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$1 DB 076H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	032H
	DB	05fH
	DB	032H
	DB	00H
	ORG $+3
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$2 DB 076H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	032H
	DB	05fH
	DB	033H
	DB	00H
	ORG $+3
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$3 DB 076H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	032H
	DB	05fH
	DB	034H
	DB	00H
	ORG $+3
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$4 DB 076H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	033H
	DB	05fH
	DB	031H
	DB	00H
	ORG $+3
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$5 DB 076H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	033H
	DB	05fH
	DB	032H
	DB	00H
	ORG $+3
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$6 DB 076H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	033H
	DB	05fH
	DB	033H
	DB	00H
	ORG $+3
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$7 DB 076H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	033H
	DB	05fH
	DB	034H
	DB	00H
	ORG $+3
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$8 DB 076H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	034H
	DB	05fH
	DB	031H
	DB	00H
	ORG $+3
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$9 DB 076H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	034H
	DB	05fH
	DB	032H
	DB	00H
	ORG $+3
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$10 DB 076H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	034H
	DB	05fH
	DB	033H
	DB	00H
	ORG $+3
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$11 DB 076H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	034H
	DB	05fH
	DB	034H
	DB	00H
	ORG $+3
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$12 DB 069H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+3
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcFrameData DD 0dH ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	00H
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcVarDesc
	ORG $+8
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcVarDesc DD 0238H ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	038H
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$12
	DD	0208H
	DD	010H
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$11
	DD	01d8H
	DD	010H
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$10
	DD	01a8H
	DD	010H
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$9
	DD	0178H
	DD	010H
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$8
	DD	0148H
	DD	0cH
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$7
	DD	0118H
	DD	0cH
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$6
	DD	0e8H
	DD	0cH
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$5
	DD	0b8H
	DD	0cH
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$4
	DD	098H
	DD	08H
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$3
	DD	078H
	DD	08H
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$2
	DD	058H
	DD	08H
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	034H
	DW	0f98H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'9', 08H
	DB	02H
	DB	08dH, '5'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z
	DD	imagerel $ip2state$??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z DD 033c19H
	DD	0d80111H
	DD	0700aH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z
	DD	06baH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$0 DB 076H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	032H
	DB	05fH
	DB	031H
	DB	00H
	ORG $+3
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$1 DB 076H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	032H
	DB	05fH
	DB	032H
	DB	00H
	ORG $+3
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$2 DB 076H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	032H
	DB	05fH
	DB	033H
	DB	00H
	ORG $+3
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$3 DB 076H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	032H
	DB	05fH
	DB	034H
	DB	00H
	ORG $+3
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$4 DB 076H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	033H
	DB	05fH
	DB	031H
	DB	00H
	ORG $+3
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$5 DB 076H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	033H
	DB	05fH
	DB	032H
	DB	00H
	ORG $+3
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$6 DB 076H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	033H
	DB	05fH
	DB	033H
	DB	00H
	ORG $+3
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$7 DB 076H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	033H
	DB	05fH
	DB	034H
	DB	00H
	ORG $+3
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$8 DB 076H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	034H
	DB	05fH
	DB	031H
	DB	00H
	ORG $+3
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$9 DB 076H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	034H
	DB	05fH
	DB	032H
	DB	00H
	ORG $+3
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$10 DB 076H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	034H
	DB	05fH
	DB	033H
	DB	00H
	ORG $+3
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$11 DB 076H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	034H
	DB	05fH
	DB	034H
	DB	00H
	ORG $+3
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$12 DB 069H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+3
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcFrameData DD 0dH ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DD	00H
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcVarDesc
	ORG $+8
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcVarDesc DD 0238H ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DD	038H
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$12
	DD	0208H
	DD	010H
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$11
	DD	01d8H
	DD	010H
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$10
	DD	01a8H
	DD	010H
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$9
	DD	0178H
	DD	010H
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$8
	DD	0148H
	DD	0cH
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$7
	DD	0118H
	DD	0cH
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$6
	DD	0e8H
	DD	0cH
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$5
	DD	0b8H
	DD	0cH
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$4
	DD	098H
	DD	08H
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$3
	DD	078H
	DD	08H
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$2
	DD	058H
	DD	08H
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	030H
	DW	044fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 01eH
	DB	00H
	DB	00H
	DB	01H, 04H
	DB	02H
	DB	'd'
	DB	04H
	DB	'd'
	DB	06H
	DB	0adH, 02H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'v'
	DB	08H
	DB	'j'
	DB	0aH
	DB	'd'
	DB	0cH
	DB	'd'
	DB	0eH
	DB	0d5H, 03H
	DB	0cH
	DB	01cH
	DB	0aH
	DB	01cH
	DB	08H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	086H
	DD	imagerel ?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
	DD	imagerel $ip2state$??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DD 033819H
	DD	04e010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
	DD	026aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$0 DB 076H ; test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	032H
	DB	00H
	ORG $+1
??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$1 DB 076H ; test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	033H
	DB	00H
	ORG $+1
??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$2 DB 076H ; test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	034H
	DB	00H
	ORG $+1
??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$3 DB 069H ; test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+7
??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcFrameData DD 04H ; test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	00H
	DQ	FLAT:??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcVarDesc
	ORG $+8
??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcVarDesc DD 0128H ; test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	038H
	DQ	FLAT:??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$3
	DD	088H
	DD	010H
	DQ	FLAT:??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$2
	DD	058H
	DD	0cH
	DQ	FLAT:??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	030H
	DW	044fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 01eH
	DB	00H
	DB	00H
	DB	01H, 04H
	DB	02H
	DB	'd'
	DB	04H
	DB	'd'
	DB	06H
	DB	0adH, 02H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'v'
	DB	08H
	DB	'j'
	DB	0aH
	DB	'd'
	DB	0cH
	DB	'd'
	DB	0eH
	DB	0d5H, 03H
	DB	0cH
	DB	01cH
	DB	0aH
	DB	01cH
	DB	08H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	086H
	DD	imagerel ?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	imagerel $ip2state$??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD 033819H
	DD	04e010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	026aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$0 DB 076H ; test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
	DB	032H
	DB	00H
	ORG $+1
??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$1 DB 076H ; test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
	DB	033H
	DB	00H
	ORG $+1
??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$2 DB 076H ; test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
	DB	034H
	DB	00H
	ORG $+1
??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$3 DB 069H ; test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+7
??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcFrameData DD 04H ; test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
	DD	00H
	DQ	FLAT:??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcVarDesc
	ORG $+8
??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcVarDesc DD 0128H ; test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
	DD	038H
	DQ	FLAT:??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$3
	DD	088H
	DD	010H
	DQ	FLAT:??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$2
	DD	058H
	DD	0cH
	DQ	FLAT:??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	030H
	DW	044fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 01eH
	DB	00H
	DB	00H
	DB	01H, 04H
	DB	02H
	DB	'd'
	DB	04H
	DB	'd'
	DB	06H
	DB	0adH, 02H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'v'
	DB	08H
	DB	'j'
	DB	0aH
	DB	'd'
	DB	0cH
	DB	'd'
	DB	0eH
	DB	0d5H, 03H
	DB	0cH
	DB	01cH
	DB	0aH
	DB	01cH
	DB	08H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	086H
	DD	imagerel ?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
	DD	imagerel $ip2state$??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DD 033819H
	DD	04e010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
	DD	026aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$0 DB 076H ; test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	032H
	DB	00H
	ORG $+1
??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$1 DB 076H ; test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	033H
	DB	00H
	ORG $+1
??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$2 DB 076H ; test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	034H
	DB	00H
	ORG $+1
??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$3 DB 069H ; test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+7
??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcFrameData DD 04H ; test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	00H
	DQ	FLAT:??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcVarDesc
	ORG $+8
??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcVarDesc DD 0128H ; test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	038H
	DQ	FLAT:??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$3
	DD	088H
	DD	010H
	DQ	FLAT:??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$2
	DD	058H
	DD	0cH
	DQ	FLAT:??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	030H
	DW	044fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 01eH
	DB	00H
	DB	00H
	DB	01H, 04H
	DB	02H
	DB	'd'
	DB	04H
	DB	'd'
	DB	06H
	DB	0adH, 02H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'v'
	DB	08H
	DB	'j'
	DB	0aH
	DB	'd'
	DB	0cH
	DB	'd'
	DB	0eH
	DB	0d5H, 03H
	DB	0cH
	DB	01cH
	DB	0aH
	DB	01cH
	DB	08H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	086H
	DD	imagerel ?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	imagerel $ip2state$??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD 033819H
	DD	04e010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	026aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$0 DB 076H ; test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >
	DB	032H
	DB	00H
	ORG $+1
??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$1 DB 076H ; test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >
	DB	033H
	DB	00H
	ORG $+1
??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$2 DB 076H ; test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >
	DB	034H
	DB	00H
	ORG $+1
??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$3 DB 069H ; test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+7
??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcFrameData DD 04H ; test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >
	DD	00H
	DQ	FLAT:??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcVarDesc
	ORG $+8
??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcVarDesc DD 0128H ; test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >
	DD	038H
	DQ	FLAT:??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$3
	DD	088H
	DD	010H
	DQ	FLAT:??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$2
	DD	058H
	DD	0cH
	DQ	FLAT:??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	030H
	DW	044fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 01eH
	DB	00H
	DB	00H
	DB	01H, 04H
	DB	02H
	DB	'd'
	DB	04H
	DB	'd'
	DB	06H
	DB	0adH, 02H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'v'
	DB	08H
	DB	'j'
	DB	0aH
	DB	'd'
	DB	0cH
	DB	'd'
	DB	0eH
	DB	0d5H, 03H
	DB	0cH
	DB	01cH
	DB	0aH
	DB	01cH
	DB	08H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	086H
	DD	imagerel ?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
	DD	imagerel $ip2state$??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DD 033819H
	DD	04e010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
	DD	026aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$0 DB 076H ; test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	032H
	DB	00H
	ORG $+1
??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$1 DB 076H ; test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	033H
	DB	00H
	ORG $+1
??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$2 DB 076H ; test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	034H
	DB	00H
	ORG $+1
??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$3 DB 069H ; test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+7
??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcFrameData DD 04H ; test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	00H
	DQ	FLAT:??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcVarDesc
	ORG $+8
??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcVarDesc DD 0128H ; test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	038H
	DQ	FLAT:??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$3
	DD	088H
	DD	010H
	DQ	FLAT:??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$2
	DD	058H
	DD	0cH
	DQ	FLAT:??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	030H
	DW	044fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 01eH
	DB	00H
	DB	00H
	DB	01H, 04H
	DB	02H
	DB	'd'
	DB	04H
	DB	'd'
	DB	06H
	DB	0adH, 02H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'v'
	DB	08H
	DB	'j'
	DB	0aH
	DB	'd'
	DB	0cH
	DB	'd'
	DB	0eH
	DB	0d5H, 03H
	DB	0cH
	DB	01cH
	DB	0aH
	DB	01cH
	DB	08H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	086H
	DD	imagerel ?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	imagerel $ip2state$??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD 033819H
	DD	04e010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	026aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$0 DB 076H ; test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	032H
	DB	00H
	ORG $+1
??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$1 DB 076H ; test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	033H
	DB	00H
	ORG $+1
??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$2 DB 076H ; test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	034H
	DB	00H
	ORG $+1
??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$3 DB 069H ; test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+7
??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcFrameData DD 04H ; test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DD	00H
	DQ	FLAT:??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcVarDesc
	ORG $+8
??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcVarDesc DD 0128H ; test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DD	038H
	DQ	FLAT:??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$3
	DD	088H
	DD	010H
	DQ	FLAT:??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$2
	DD	058H
	DD	0cH
	DQ	FLAT:??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	030H
	DW	02aaH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 012H
	DB	00H
	DB	00H
	DB	0f9H, 03H
	DB	02H
	DB	'd'
	DB	04H
	DB	019H, 02H
	DB	02H
	DB	01cH
	DB	00H
	DB	'p'
	DB	06H
	DB	'd'
	DB	08H
	DB	098H
	DB	06H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
	DD	imagerel $ip2state$??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DD 033819H
	DD	034010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
	DD	0192H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$0 DB 071H ; test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	00H
	ORG $+2
??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$1 DB 069H ; test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+3
??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$2 DB 069H ; test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+7
??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcFrameData DD 03H ; test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	00H
	DQ	FLAT:??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcVarDesc
	ORG $+8
??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcVarDesc DD 0d8H ; test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	038H
	DQ	FLAT:??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$2
	DD	068H
	DD	038H
	DQ	FLAT:??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$1
	DD	038H
	DD	010H
	DQ	FLAT:??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	030H
	DW	02aaH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 012H
	DB	00H
	DB	00H
	DB	0f9H, 03H
	DB	02H
	DB	'd'
	DB	04H
	DB	019H, 02H
	DB	02H
	DB	01cH
	DB	00H
	DB	'p'
	DB	06H
	DB	'd'
	DB	08H
	DB	098H
	DB	06H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	imagerel $ip2state$??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD 033819H
	DD	034010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	0192H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$0 DB 071H ; test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
	DB	00H
	ORG $+2
??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$1 DB 069H ; test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+3
??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$2 DB 069H ; test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+7
??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcFrameData DD 03H ; test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
	DD	00H
	DQ	FLAT:??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcVarDesc
	ORG $+8
??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcVarDesc DD 0d8H ; test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
	DD	038H
	DQ	FLAT:??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$2
	DD	068H
	DD	038H
	DQ	FLAT:??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$1
	DD	038H
	DD	010H
	DQ	FLAT:??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	030H
	DW	02aaH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 012H
	DB	00H
	DB	00H
	DB	0f9H, 03H
	DB	02H
	DB	'd'
	DB	04H
	DB	019H, 02H
	DB	02H
	DB	01cH
	DB	00H
	DB	'p'
	DB	06H
	DB	'd'
	DB	08H
	DB	098H
	DB	06H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
	DD	imagerel $ip2state$??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DD 033819H
	DD	034010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
	DD	0192H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$0 DB 071H ; test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	00H
	ORG $+2
??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$1 DB 069H ; test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+3
??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$2 DB 069H ; test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+7
??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcFrameData DD 03H ; test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	00H
	DQ	FLAT:??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcVarDesc
	ORG $+8
??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcVarDesc DD 0d8H ; test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	038H
	DQ	FLAT:??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$2
	DD	068H
	DD	038H
	DQ	FLAT:??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$1
	DD	038H
	DD	010H
	DQ	FLAT:??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	030H
	DW	02aaH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 012H
	DB	00H
	DB	00H
	DB	0f9H, 03H
	DB	02H
	DB	'd'
	DB	04H
	DB	019H, 02H
	DB	02H
	DB	01cH
	DB	00H
	DB	'p'
	DB	06H
	DB	'd'
	DB	08H
	DB	098H
	DB	06H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	imagerel $ip2state$??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD 033819H
	DD	034010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	0192H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$0 DB 071H ; test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >
	DB	00H
	ORG $+2
??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$1 DB 069H ; test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+3
??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$2 DB 069H ; test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+7
??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcFrameData DD 03H ; test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >
	DD	00H
	DQ	FLAT:??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcVarDesc
	ORG $+8
??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcVarDesc DD 0d8H ; test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >
	DD	038H
	DQ	FLAT:??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$2
	DD	068H
	DD	038H
	DQ	FLAT:??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$1
	DD	038H
	DD	010H
	DQ	FLAT:??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	030H
	DW	02b3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 012H
	DB	00H
	DB	00H
	DB	01dH, 04H
	DB	02H
	DB	'd'
	DB	04H
	DB	019H, 02H
	DB	02H
	DB	01cH
	DB	00H
	DB	'p'
	DB	06H
	DB	'd'
	DB	08H
	DB	098H
	DB	06H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
	DD	imagerel $ip2state$??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z DD 033819H
	DD	034010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
	DD	0192H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$0 DB 071H ; test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	00H
	ORG $+2
??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$1 DB 069H ; test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+3
??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$2 DB 069H ; test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+7
??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcFrameData DD 03H ; test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	00H
	DQ	FLAT:??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcVarDesc
	ORG $+8
??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcVarDesc DD 0d8H ; test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	DD	038H
	DQ	FLAT:??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$2
	DD	068H
	DD	038H
	DQ	FLAT:??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$1
	DD	038H
	DD	010H
	DQ	FLAT:??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	030H
	DW	02b3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 012H
	DB	00H
	DB	00H
	DB	01dH, 04H
	DB	02H
	DB	'd'
	DB	04H
	DB	019H, 02H
	DB	02H
	DB	01cH
	DB	00H
	DB	'p'
	DB	06H
	DB	'd'
	DB	08H
	DB	098H
	DB	06H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	imagerel $ip2state$??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD 033819H
	DD	034010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	0192H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$0 DB 071H ; test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	00H
	ORG $+2
??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$1 DB 069H ; test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+3
??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$2 DB 069H ; test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DB	06fH
	DB	066H
	DB	073H
	DB	00H
	ORG $+7
??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcFrameData DD 03H ; test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DD	00H
	DQ	FLAT:??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcVarDesc
	ORG $+8
??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcVarDesc DD 0d8H ; test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	DD	038H
	DQ	FLAT:??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$2
	DD	068H
	DD	038H
	DQ	FLAT:??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$1
	DD	038H
	DD	010H
	DQ	FLAT:??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcName$0
CONST	ENDS
xdata	SEGMENT
$unwind$main DD	020601H
	DD	070025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?right@std@@YAAEAVios_base@1@AEAV21@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?fixed@std@@YAAEAVios_base@1@AEAV21@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0order@io@glm@@QEAA@W4order_type@12@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0width@io@glm@@QEAA@I@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0precision@io@glm@@QEAA@I@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	01fH
	DW	0158H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD 032419H
	DD	07011e215H
	DD	06010H
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	01fH
	DW	0158H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD 032419H
	DD	07011e215H
	DD	06010H
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Maklocwcs@std@@YAPEA_WPEB_W@Z DD 020a01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD 033001H
	DD	01a0117H
	DD	07010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$0 DB 05fH ; std::_Maklocstr<wchar_t>
	DB	057H
	DB	063H
	DB	00H
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$1 DB 05fH ; std::_Maklocstr<wchar_t>
	DB	04dH
	DB	062H
	DB	073H
	DB	074H
	DB	031H
	DB	00H
	ORG $+1
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$2 DB 05fH ; std::_Maklocstr<wchar_t>
	DB	04dH
	DB	062H
	DB	073H
	DB	074H
	DB	032H
	DB	00H
	ORG $+13
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcVarDesc DD 0b8H ; std::_Maklocstr<wchar_t>
	DD	08H
	DQ	FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$2
	DD	088H
	DD	08H
	DQ	FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$1
	DD	064H
	DD	02H
	DQ	FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$0
	ORG $+144
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcFrameData DD 03H ; std::_Maklocstr<wchar_t>
	DD	00H
	DQ	FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1locale@std@@QEAA@XZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_cast@std@@YAXXZ DD 020601H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_cast@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_cast@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_cast@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_cast@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?name@type_info@@QEBAPEBDXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8type_info@@QEBA_NAEBV0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD 020a19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z DD 022a01H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD 022001H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DB	053H
	DB	035H
	DB	00H
	ORG $+12
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DD	01H
	DQ	FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DD	00H
	DQ	FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z DB 060H
	DD	imagerel $ip2state$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z DD 020f19H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DD 020f19H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$allocator@_W@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$allocator@_W@1@@Z DB 060H
	DD	imagerel $ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD 020f19H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@_W@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 020a19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 022a01H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 022001H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	038H
	DB	00H
	ORG $+12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DB 060H
	DD	imagerel $ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 020f19H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 020f19H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DB 060H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 020f19H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen_string@std@@YAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$_WChar_traits@_W@std@@SAGXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?not_eof@?$_WChar_traits@_W@std@@SAGAEBG@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?to_int_type@?$_WChar_traits@_W@std@@SAGAEB_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?to_char_type@?$_WChar_traits@_W@std@@SA_WAEBG@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq@?$_WChar_traits@_W@std@@SA_NAEB_W0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z DD 022501H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z$rtcName$0 DB 05fH ; std::_Container_base12::_Swap_proxy_and_iterators_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z$rtcVarDesc DD 024H ; std::_Container_base12::_Swap_proxy_and_iterators_locked
	DD	04H
	DQ	FLAT:?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z$rtcName$0
	ORG $+48
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z$rtcFrameData DD 01H ; std::_Container_base12::_Swap_proxy_and_iterators_locked
	DD	00H
	DQ	FLAT:?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ DD 022001H
	DD	07006720aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all_locked
	DD	04H
	DQ	FLAT:?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all_locked
	DD	00H
	DQ	FLAT:?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 020601H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemcpy DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 021901H
	DD	070155219H
xdata	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??id$initializer$@?$format_punct@_W@io@glm@@2P6AXXZEA@@3P6AXXZEA DQ FLAT:??__E?id@?$format_punct@_W@io@glm@@2V0locale@std@@A@@YAXXZ ; ??id$initializer$@?$format_punct@_W@io@glm@@2P6AXXZEA@@3P6AXXZEA
CRT$XCU	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
_TEXT	SEGMENT
??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor', COMDAT
	movsxd	rax, DWORD PTR [rcx-4]
	sub	rcx, rax
	jmp	??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z
??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
_TEXT	SEGMENT
??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
	movsxd	rax, DWORD PTR [rcx-4]
	sub	rcx, rax
	jmp	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S79$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S79$8[rsp], 4
	lea	rax, QWORD PTR $S79$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@M$01@glm@@QEBAAEBMH@Z	; glm::tvec4<float,2>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	movss	xmm1, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@M$01@glm@@QEBAAEBMH@Z	; glm::tvec4<float,2>::operator[]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S79$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S79$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S79$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S79$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S78$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S78$8[rsp], 3
	lea	rax, QWORD PTR $S78$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@M$01@glm@@QEBAAEBMH@Z	; glm::tvec3<float,2>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	movss	xmm1, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@M$01@glm@@QEBAAEBMH@Z	; glm::tvec3<float,2>::operator[]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S78$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S78$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S78$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S78$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S77$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S77$8[rsp], 2
	lea	rax, QWORD PTR $S77$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@M$01@glm@@QEBAAEBMH@Z	; glm::tvec2<float,2>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	movss	xmm1, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@M$01@glm@@QEBAAEBMH@Z	; glm::tvec2<float,2>::operator[]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S77$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S77$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S77$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S77$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??__E?id@?$format_punct@_W@io@glm@@2V0locale@std@@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$format_punct@_W@io@glm@@2V0locale@std@@A@@YAXXZ PROC ; `dynamic initializer for 'glm::io::format_punct<wchar_t>::id'', COMDAT

; 41   : 	template <typename CTy> std::locale::id format_punct<CTy>::id;

	push	rdi
	sub	rsp, 32					; 00000020H
	xor	edx, edx
	lea	rcx, OFFSET FLAT:?id@?$format_punct@_W@io@glm@@2V0locale@std@@A ; glm::io::format_punct<wchar_t>::id
	call	QWORD PTR __imp_??0id@locale@std@@QEAA@_K@Z
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??__E?id@?$format_punct@_W@io@glm@@2V0locale@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'glm::io::format_punct<wchar_t>::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??__E?id@?$format_punct@D@io@glm@@2V0locale@std@@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$format_punct@D@io@glm@@2V0locale@std@@A@@YAXXZ PROC ; `dynamic initializer for 'glm::io::format_punct<char>::id'', COMDAT

; 41   : 	template <typename CTy> std::locale::id format_punct<CTy>::id;

	push	rdi
	sub	rsp, 32					; 00000020H
	xor	edx, edx
	lea	rcx, OFFSET FLAT:?id@?$format_punct@D@io@glm@@2V0locale@std@@A ; glm::io::format_punct<char>::id
	call	QWORD PTR __imp_??0id@locale@std@@QEAA@_K@Z
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??__E?id@?$format_punct@D@io@glm@@2V0locale@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'glm::io::format_punct<char>::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
m$ = 72
index$ = 80
??$column@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z PROC ; glm::column<glm::tmat4x4<float,2> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat4x4@M$01@glm@@SAHXZ	; glm::tmat4x4<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ; glm::tmat4x4<float,2>::operator[]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$column@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z ENDP ; glm::column<glm::tmat4x4<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 68
tv84 = 72
__$ReturnUdt$ = 112
m$ = 120
index$ = 128
??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z PROC ; glm::row<glm::tmat4x4<float,2> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ; glm::tmat4x4<float,2>::operator[]
	call	?length@?$tvec4@M$01@glm@@SAHXZ		; glm::tvec4<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@M$01@glm@@QEAA@XZ		; glm::tvec4<float,2>::tvec4<float,2>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat4x4@M$01@glm@@SAHXZ	; glm::tmat4x4<float,2>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ; glm::tmat4x4<float,2>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec4@M$01@glm@@QEBAAEBMH@Z	; glm::tvec4<float,2>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec4@M$01@glm@@QEAAAEAMH@Z	; glm::tvec4<float,2>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z ENDP ; glm::row<glm::tmat4x4<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
m$ = 72
index$ = 80
??$column@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z PROC ; glm::column<glm::tmat4x3<float,2> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat4x3@M$01@glm@@SAHXZ	; glm::tmat4x3<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ; glm::tmat4x3<float,2>::operator[]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$column@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z ENDP ; glm::column<glm::tmat4x3<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 68
tv84 = 72
__$ReturnUdt$ = 112
m$ = 120
index$ = 128
??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z PROC ; glm::row<glm::tmat4x3<float,2> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ; glm::tmat4x3<float,2>::operator[]
	call	?length@?$tvec3@M$01@glm@@SAHXZ		; glm::tvec3<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@M$01@glm@@QEAA@XZ		; glm::tvec4<float,2>::tvec4<float,2>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat4x3@M$01@glm@@SAHXZ	; glm::tmat4x3<float,2>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ; glm::tmat4x3<float,2>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec3@M$01@glm@@QEBAAEBMH@Z	; glm::tvec3<float,2>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec4@M$01@glm@@QEAAAEAMH@Z	; glm::tvec4<float,2>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z ENDP ; glm::row<glm::tmat4x3<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
m$ = 56
index$ = 64
??$column@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z PROC ; glm::column<glm::tmat4x2<float,2> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat4x2@M$01@glm@@SAHXZ	; glm::tmat4x2<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ; glm::tmat4x2<float,2>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$column@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z ENDP ; glm::column<glm::tmat4x2<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 68
tv84 = 72
__$ReturnUdt$ = 112
m$ = 120
index$ = 128
??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z PROC ; glm::row<glm::tmat4x2<float,2> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ; glm::tmat4x2<float,2>::operator[]
	call	?length@?$tvec2@M$01@glm@@SAHXZ		; glm::tvec2<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@M$01@glm@@QEAA@XZ		; glm::tvec4<float,2>::tvec4<float,2>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat4x2@M$01@glm@@SAHXZ	; glm::tmat4x2<float,2>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ; glm::tmat4x2<float,2>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec2@M$01@glm@@QEBAAEBMH@Z	; glm::tvec2<float,2>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec4@M$01@glm@@QEAAAEAMH@Z	; glm::tvec4<float,2>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z ENDP ; glm::row<glm::tmat4x2<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
m$ = 72
index$ = 80
??$column@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z PROC ; glm::column<glm::tmat3x4<float,2> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat3x4@M$01@glm@@SAHXZ	; glm::tmat3x4<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ; glm::tmat3x4<float,2>::operator[]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$column@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z ENDP ; glm::column<glm::tmat3x4<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 68
tv84 = 72
__$ReturnUdt$ = 112
m$ = 120
index$ = 128
??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z PROC ; glm::row<glm::tmat3x4<float,2> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ; glm::tmat3x4<float,2>::operator[]
	call	?length@?$tvec4@M$01@glm@@SAHXZ		; glm::tvec4<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@M$01@glm@@QEAA@XZ		; glm::tvec3<float,2>::tvec3<float,2>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat3x4@M$01@glm@@SAHXZ	; glm::tmat3x4<float,2>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ; glm::tmat3x4<float,2>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec4@M$01@glm@@QEBAAEBMH@Z	; glm::tvec4<float,2>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec3@M$01@glm@@QEAAAEAMH@Z	; glm::tvec3<float,2>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z ENDP ; glm::row<glm::tmat3x4<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
m$ = 72
index$ = 80
??$column@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z PROC ; glm::column<glm::tmat3x3<float,2> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat3x3@M$01@glm@@SAHXZ	; glm::tmat3x3<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ; glm::tmat3x3<float,2>::operator[]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$column@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z ENDP ; glm::column<glm::tmat3x3<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 68
tv84 = 72
__$ReturnUdt$ = 112
m$ = 120
index$ = 128
??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z PROC ; glm::row<glm::tmat3x3<float,2> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ; glm::tmat3x3<float,2>::operator[]
	call	?length@?$tvec3@M$01@glm@@SAHXZ		; glm::tvec3<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@M$01@glm@@QEAA@XZ		; glm::tvec3<float,2>::tvec3<float,2>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat3x3@M$01@glm@@SAHXZ	; glm::tmat3x3<float,2>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ; glm::tmat3x3<float,2>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec3@M$01@glm@@QEBAAEBMH@Z	; glm::tvec3<float,2>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec3@M$01@glm@@QEAAAEAMH@Z	; glm::tvec3<float,2>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z ENDP ; glm::row<glm::tmat3x3<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
m$ = 56
index$ = 64
??$column@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z PROC ; glm::column<glm::tmat3x2<float,2> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat3x2@M$01@glm@@SAHXZ	; glm::tmat3x2<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ; glm::tmat3x2<float,2>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$column@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z ENDP ; glm::column<glm::tmat3x2<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 68
tv84 = 72
__$ReturnUdt$ = 112
m$ = 120
index$ = 128
??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z PROC ; glm::row<glm::tmat3x2<float,2> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ; glm::tmat3x2<float,2>::operator[]
	call	?length@?$tvec2@M$01@glm@@SAHXZ		; glm::tvec2<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@M$01@glm@@QEAA@XZ		; glm::tvec3<float,2>::tvec3<float,2>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat3x2@M$01@glm@@SAHXZ	; glm::tmat3x2<float,2>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ; glm::tmat3x2<float,2>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec2@M$01@glm@@QEBAAEBMH@Z	; glm::tvec2<float,2>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec3@M$01@glm@@QEAAAEAMH@Z	; glm::tvec3<float,2>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z ENDP ; glm::row<glm::tmat3x2<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>, COMDAT

; 224  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 225  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,2>

; 226  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
m$ = 72
index$ = 80
??$column@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z PROC ; glm::column<glm::tmat2x4<float,2> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat2x4@M$01@glm@@SAHXZ	; glm::tmat2x4<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ; glm::tmat2x4<float,2>::operator[]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$column@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z ENDP ; glm::column<glm::tmat2x4<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 52
tv84 = 56
__$ReturnUdt$ = 80
m$ = 88
index$ = 96
??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z PROC ; glm::row<glm::tmat2x4<float,2> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ; glm::tmat2x4<float,2>::operator[]
	call	?length@?$tvec4@M$01@glm@@SAHXZ		; glm::tvec4<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@M$01@glm@@QEAA@XZ		; glm::tvec2<float,2>::tvec2<float,2>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat2x4@M$01@glm@@SAHXZ	; glm::tmat2x4<float,2>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ; glm::tmat2x4<float,2>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec4@M$01@glm@@QEBAAEBMH@Z	; glm::tvec4<float,2>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec2@M$01@glm@@QEAAAEAMH@Z	; glm::tvec2<float,2>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR Result$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z ENDP ; glm::row<glm::tmat2x4<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>, COMDAT

; 218  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 219  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,2>

; 220  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
m$ = 72
index$ = 80
??$column@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z PROC ; glm::column<glm::tmat2x3<float,2> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat2x3@M$01@glm@@SAHXZ	; glm::tmat2x3<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ; glm::tmat2x3<float,2>::operator[]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$column@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z ENDP ; glm::column<glm::tmat2x3<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 52
tv84 = 56
__$ReturnUdt$ = 80
m$ = 88
index$ = 96
??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z PROC ; glm::row<glm::tmat2x3<float,2> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ; glm::tmat2x3<float,2>::operator[]
	call	?length@?$tvec3@M$01@glm@@SAHXZ		; glm::tvec3<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@M$01@glm@@QEAA@XZ		; glm::tvec2<float,2>::tvec2<float,2>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat2x3@M$01@glm@@SAHXZ	; glm::tmat2x3<float,2>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ; glm::tmat2x3<float,2>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec3@M$01@glm@@QEBAAEBMH@Z	; glm::tvec3<float,2>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec2@M$01@glm@@QEAAAEAMH@Z	; glm::tvec2<float,2>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR Result$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z ENDP ; glm::row<glm::tmat2x3<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
m$ = 56
index$ = 64
??$column@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z PROC ; glm::column<glm::tmat2x2<float,2> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat2x2@M$01@glm@@SAHXZ	; glm::tmat2x2<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ; glm::tmat2x2<float,2>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$column@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z ENDP ; glm::column<glm::tmat2x2<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>, COMDAT

; 212  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 213  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,2>

; 214  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 52
tv84 = 56
__$ReturnUdt$ = 80
m$ = 88
index$ = 96
??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z PROC ; glm::row<glm::tmat2x2<float,2> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ; glm::tmat2x2<float,2>::operator[]
	call	?length@?$tvec2@M$01@glm@@SAHXZ		; glm::tvec2<float,2>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@M$01@glm@@QEAA@XZ		; glm::tvec2<float,2>::tvec2<float,2>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat2x2@M$01@glm@@SAHXZ	; glm::tmat2x2<float,2>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ; glm::tmat2x2<float,2>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec2@M$01@glm@@QEBAAEBMH@Z	; glm::tvec2<float,2>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec2@M$01@glm@@QEAAAEAMH@Z	; glm::tvec2<float,2>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR Result$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z ENDP ; glm::row<glm::tmat2x2<float,2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
m$ = 72
index$ = 80
??$column@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z PROC ; glm::column<glm::tmat4x4<float,0> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat4x4@M$0A@@glm@@SAHXZ	; glm::tmat4x4<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat4x4<float,0>::operator[]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$column@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z ENDP ; glm::column<glm::tmat4x4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 68
tv84 = 72
__$ReturnUdt$ = 112
m$ = 120
index$ = 128
??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z PROC ; glm::row<glm::tmat4x4<float,0> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat4x4<float,0>::operator[]
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@XZ		; glm::tvec4<float,0>::tvec4<float,0>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat4x4@M$0A@@glm@@SAHXZ	; glm::tmat4x4<float,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat4x4<float,0>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec4<float,0>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z ENDP ; glm::row<glm::tmat4x4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
m$ = 72
index$ = 80
??$column@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z PROC ; glm::column<glm::tmat4x3<float,0> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat4x3@M$0A@@glm@@SAHXZ	; glm::tmat4x3<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat4x3<float,0>::operator[]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$column@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z ENDP ; glm::column<glm::tmat4x3<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 68
tv84 = 72
__$ReturnUdt$ = 112
m$ = 120
index$ = 128
??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z PROC ; glm::row<glm::tmat4x3<float,0> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat4x3<float,0>::operator[]
	call	?length@?$tvec3@M$0A@@glm@@SAHXZ	; glm::tvec3<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@XZ		; glm::tvec4<float,0>::tvec4<float,0>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat4x3@M$0A@@glm@@SAHXZ	; glm::tmat4x3<float,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat4x3<float,0>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec4<float,0>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z ENDP ; glm::row<glm::tmat4x3<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
m$ = 56
index$ = 64
??$column@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z PROC ; glm::column<glm::tmat4x2<float,0> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat4x2@M$0A@@glm@@SAHXZ	; glm::tmat4x2<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat4x2<float,0>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$column@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z ENDP ; glm::column<glm::tmat4x2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 68
tv84 = 72
__$ReturnUdt$ = 112
m$ = 120
index$ = 128
??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z PROC ; glm::row<glm::tmat4x2<float,0> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat4x2<float,0>::operator[]
	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@XZ		; glm::tvec4<float,0>::tvec4<float,0>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat4x2@M$0A@@glm@@SAHXZ	; glm::tmat4x2<float,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat4x2<float,0>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec4<float,0>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z ENDP ; glm::row<glm::tmat4x2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
m$ = 72
index$ = 80
??$column@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z PROC ; glm::column<glm::tmat3x4<float,0> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat3x4@M$0A@@glm@@SAHXZ	; glm::tmat3x4<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat3x4<float,0>::operator[]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$column@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z ENDP ; glm::column<glm::tmat3x4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 68
tv84 = 72
__$ReturnUdt$ = 112
m$ = 120
index$ = 128
??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z PROC ; glm::row<glm::tmat3x4<float,0> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat3x4<float,0>::operator[]
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@XZ		; glm::tvec3<float,0>::tvec3<float,0>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat3x4@M$0A@@glm@@SAHXZ	; glm::tmat3x4<float,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat3x4<float,0>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec3<float,0>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z ENDP ; glm::row<glm::tmat3x4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
m$ = 72
index$ = 80
??$column@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z PROC ; glm::column<glm::tmat3x3<float,0> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat3x3@M$0A@@glm@@SAHXZ	; glm::tmat3x3<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat3x3<float,0>::operator[]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$column@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z ENDP ; glm::column<glm::tmat3x3<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 68
tv84 = 72
__$ReturnUdt$ = 112
m$ = 120
index$ = 128
??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z PROC ; glm::row<glm::tmat3x3<float,0> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat3x3<float,0>::operator[]
	call	?length@?$tvec3@M$0A@@glm@@SAHXZ	; glm::tvec3<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@XZ		; glm::tvec3<float,0>::tvec3<float,0>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat3x3@M$0A@@glm@@SAHXZ	; glm::tmat3x3<float,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat3x3<float,0>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec3<float,0>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z ENDP ; glm::row<glm::tmat3x3<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
m$ = 56
index$ = 64
??$column@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z PROC ; glm::column<glm::tmat3x2<float,0> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat3x2@M$0A@@glm@@SAHXZ	; glm::tmat3x2<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat3x2<float,0>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$column@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z ENDP ; glm::column<glm::tmat3x2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 68
tv84 = 72
__$ReturnUdt$ = 112
m$ = 120
index$ = 128
??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z PROC ; glm::row<glm::tmat3x2<float,0> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat3x2<float,0>::operator[]
	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@XZ		; glm::tvec3<float,0>::tvec3<float,0>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat3x2@M$0A@@glm@@SAHXZ	; glm::tmat3x2<float,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat3x2<float,0>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec3<float,0>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z ENDP ; glm::row<glm::tmat3x2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
m$ = 72
index$ = 80
??$column@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z PROC ; glm::column<glm::tmat2x4<float,0> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat2x4@M$0A@@glm@@SAHXZ	; glm::tmat2x4<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat2x4<float,0>::operator[]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$column@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z ENDP ; glm::column<glm::tmat2x4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 52
tv84 = 56
__$ReturnUdt$ = 80
m$ = 88
index$ = 96
??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z PROC ; glm::row<glm::tmat2x4<float,0> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat2x4<float,0>::operator[]
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@XZ		; glm::tvec2<float,0>::tvec2<float,0>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat2x4@M$0A@@glm@@SAHXZ	; glm::tmat2x4<float,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat2x4<float,0>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec2<float,0>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR Result$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z ENDP ; glm::row<glm::tmat2x4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
m$ = 72
index$ = 80
??$column@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z PROC ; glm::column<glm::tmat2x3<float,0> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat2x3@M$0A@@glm@@SAHXZ	; glm::tmat2x3<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat2x3<float,0>::operator[]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$column@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z ENDP ; glm::column<glm::tmat2x3<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 52
tv84 = 56
__$ReturnUdt$ = 80
m$ = 88
index$ = 96
??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z PROC ; glm::row<glm::tmat2x3<float,0> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat2x3<float,0>::operator[]
	call	?length@?$tvec3@M$0A@@glm@@SAHXZ	; glm::tvec3<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@XZ		; glm::tvec2<float,0>::tvec2<float,0>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat2x3@M$0A@@glm@@SAHXZ	; glm::tmat2x3<float,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat2x3<float,0>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec2<float,0>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR Result$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z ENDP ; glm::row<glm::tmat2x3<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$column@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
m$ = 56
index$ = 64
??$column@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z PROC ; glm::column<glm::tmat2x2<float,0> >, COMDAT

; 58   : 	{

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 59   : 		assert(index >= 0 && index < m.length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN3@column
	call	?length@?$tmat2x2@M$0A@@glm@@SAHXZ	; glm::tmat2x2<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN4@column
$LN3@column:
	mov	r8d, 59					; 0000003bH
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EC@JICLCAOD@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@column:

; 60   : 
; 61   : 		return m[index];

	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$column@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z ENDP ; glm::column<glm::tmat2x2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\matrix_access.inl
;	COMDAT ??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z
_TEXT	SEGMENT
Result$ = 40
i$4 = 52
tv84 = 56
__$ReturnUdt$ = 80
m$ = 88
index$ = 96
??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z PROC ; glm::row<glm::tmat2x2<float,0> >, COMDAT

; 28   : 	{

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 29   : 		assert(index >= 0 && index < m[0].length());

	cmp	DWORD PTR index$[rsp], 0
	jl	SHORT $LN6@row
	xor	edx, edx
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]
	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	cmp	DWORD PTR index$[rsp], eax
	jl	SHORT $LN7@row
$LN6@row:
	mov	r8d, 29
	lea	rdx, OFFSET FLAT:??_C@_1IM@LNEPJHOL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MABFCMEO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@row:

; 30   : 
; 31   : 		typename genType::row_type Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@XZ		; glm::tvec2<float,0>::tvec2<float,0>

; 32   : 		for(length_t i = 0; i < m.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@row
$LN2@row:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@row:
	call	?length@?$tmat2x2@M$0A@@glm@@SAHXZ	; glm::tmat2x2<float,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@row

; 33   : 			Result[i] = m[i][index];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	call	??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]
	mov	edx, DWORD PTR index$[rsp]
	mov	rcx, rax
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec2<float,0>::operator[]
	mov	rcx, QWORD PTR tv84[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@row
$LN3@row:

; 34   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR Result$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 35   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z ENDP ; glm::row<glm::tmat2x2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\iomanip
;	COMDAT ??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z
_TEXT	SEGMENT
_Ostr$ = 48
_Manip$ = 56
??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>, COMDAT

; 49   :     const _Fillobj<_Elem2>& _Manip) { // set fill character in output stream

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 50   :     static_assert(is_same_v<_Elem, _Elem2>, "wrong character type for setfill");
; 51   : 
; 52   :     _Ostr.fill(_Manip._Fill);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Manip$[rsp]
	movzx	edx, WORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAA_W_W@Z

; 53   :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rsp]

; 54   : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\iomanip
;	COMDAT ??0?$_Fillobj@_W@std@@QEAA@_W@Z
_TEXT	SEGMENT
this$ = 16
_Ch$ = 24
??0?$_Fillobj@_W@std@@QEAA@_W@Z PROC			; std::_Fillobj<wchar_t>::_Fillobj<wchar_t>, COMDAT

; 27   :     _Fillobj(_Elem _Ch) : _Fill(_Ch) {}

$LN3:
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, WORD PTR _Ch$[rsp]
	mov	WORD PTR [rax], cx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Fillobj@_W@std@@QEAA@_W@Z ENDP			; std::_Fillobj<wchar_t>::_Fillobj<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\iomanip
;	COMDAT ??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Ch$ = 56
??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z PROC	; std::setfill<wchar_t>, COMDAT

; 34   : _NODISCARD _Fillobj<_Elem> setfill(_Elem _Ch) {

$LN3:
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 35   :     return _Fillobj<_Elem>(_Ch);

	movzx	edx, WORD PTR _Ch$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Fillobj@_W@std@@QEAA@_W@Z		; std::_Fillobj<wchar_t>::_Fillobj<wchar_t>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 36   : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ENDP	; std::setfill<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\iomanip
;	COMDAT ??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z
_TEXT	SEGMENT
_Ostr$ = 48
_Manip$ = 56
??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>, COMDAT

; 423  :     const _Smanip<_Arg>& _Manip) { // insert by calling function with output stream and argument

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 424  :     (*_Manip._Pfun)(_Ostr, _Manip._Manarg);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Manip$[rsp]
	mov	rdx, QWORD PTR [rcx+8]
	mov	rcx, rax
	mov	rax, QWORD PTR _Manip$[rsp]
	call	QWORD PTR [rax]

; 425  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rsp]

; 426  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\iomanip
;	COMDAT ??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z
_TEXT	SEGMENT
_Ostr$ = 48
_Manip$ = 56
??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,char>, COMDAT

; 49   :     const _Fillobj<_Elem2>& _Manip) { // set fill character in output stream

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 50   :     static_assert(is_same_v<_Elem, _Elem2>, "wrong character type for setfill");
; 51   : 
; 52   :     _Ostr.fill(_Manip._Fill);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Manip$[rsp]
	movzx	edx, BYTE PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAADD@Z

; 53   :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rsp]

; 54   : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\iomanip
;	COMDAT ??0?$_Fillobj@D@std@@QEAA@D@Z
_TEXT	SEGMENT
this$ = 16
_Ch$ = 24
??0?$_Fillobj@D@std@@QEAA@D@Z PROC			; std::_Fillobj<char>::_Fillobj<char>, COMDAT

; 27   :     _Fillobj(_Elem _Ch) : _Fill(_Ch) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR _Ch$[rsp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Fillobj@D@std@@QEAA@D@Z ENDP			; std::_Fillobj<char>::_Fillobj<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\iomanip
;	COMDAT ??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Ch$ = 56
??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z PROC		; std::setfill<char>, COMDAT

; 34   : _NODISCARD _Fillobj<_Elem> setfill(_Elem _Ch) {

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 35   :     return _Fillobj<_Elem>(_Ch);

	movzx	edx, BYTE PTR _Ch$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Fillobj@D@std@@QEAA@D@Z		; std::_Fillobj<char>::_Fillobj<char>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 36   : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ENDP		; std::setfill<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\iomanip
;	COMDAT ??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z
_TEXT	SEGMENT
_Ostr$ = 48
_Manip$ = 56
??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,__int64>, COMDAT

; 423  :     const _Smanip<_Arg>& _Manip) { // insert by calling function with output stream and argument

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 424  :     (*_Manip._Pfun)(_Ostr, _Manip._Manarg);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Manip$[rsp]
	mov	rdx, QWORD PTR [rcx+8]
	mov	rcx, rax
	mov	rax, QWORD PTR _Manip$[rsp]
	call	QWORD PTR [rax]

; 425  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rsp]

; 426  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,__int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z PROC ; std::forward<std::allocator<wchar_t> const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z ENDP ; std::forward<std::allocator<wchar_t> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z PROC ; std::forward<std::allocator<char> const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ENDP ; std::forward<std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z PROC ; std::forward<std::_Facet_base * &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ENDP ; std::forward<std::_Facet_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xlocale
;	COMDAT ??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z
_TEXT	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z PROC ; std::use_facet<glm::io::format_punct<wchar_t> >, COMDAT

; 428  : const _Facet& __CRTDECL use_facet(const locale& _Loc) { // get facet reference from locale

$LN11:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 144				; 00000090H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+160]

; 429  :     _BEGIN_LOCK(_LOCK_LOCALE) // the thread lock, make get atomic

	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$6[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 430  :     const locale::facet* _Psave = _Facetptr<_Facet>::_Psave; // static pointer to lazy facet

	mov	rax, QWORD PTR ?_Psave@?$_Facetptr@V?$format_punct@_W@io@glm@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<glm::io::format_punct<wchar_t> >::_Psave
	mov	QWORD PTR _Psave$7[rsp], rax

; 431  : 
; 432  :     const size_t _Id         = _Facet::id;

	lea	rcx, OFFSET FLAT:?id@?$format_punct@_W@io@glm@@2V0locale@std@@A ; glm::io::format_punct<wchar_t>::id
	call	QWORD PTR __imp_??Bid@locale@std@@QEAA_KXZ
	mov	QWORD PTR _Id$8[rsp], rax

; 433  :     const locale::facet* _Pf = _Loc._Getfacet(_Id);

	mov	rdx, QWORD PTR _Id$8[rsp]
	mov	rcx, QWORD PTR _Loc$[rsp]
	call	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ; std::locale::_Getfacet
	mov	QWORD PTR _Pf$9[rsp], rax

; 434  : 
; 435  :     if (!_Pf) {

	cmp	QWORD PTR _Pf$9[rsp], 0
	jne	$LN2@use_facet

; 436  :         if (_Psave) {

	cmp	QWORD PTR _Psave$7[rsp], 0
	je	SHORT $LN3@use_facet

; 437  :             _Pf = _Psave; // lazy facet already allocated

	mov	rax, QWORD PTR _Psave$7[rsp]
	mov	QWORD PTR _Pf$9[rsp], rax
	jmp	$LN2@use_facet
$LN3@use_facet:

; 438  :         } else if (_Facet::_Getcat(&_Psave, &_Loc) == static_cast<size_t>(-1)) {

	mov	rdx, QWORD PTR _Loc$[rsp]
	lea	rcx, QWORD PTR _Psave$7[rsp]
	call	QWORD PTR __imp_?_Getcat@facet@locale@std@@SA_KPEAPEBV123@PEBV23@@Z
	cmp	rax, -1
	jne	SHORT $LN5@use_facet

; 439  : #if _HAS_EXCEPTIONS
; 440  :             _Throw_bad_cast(); // lazy disallowed

	call	?_Throw_bad_cast@std@@YAXXZ		; std::_Throw_bad_cast
	npad	1

; 441  : #else // _HAS_EXCEPTIONS
; 442  :             _CSTD abort(); // lazy disallowed
; 443  : #endif // _HAS_EXCEPTIONS
; 444  :         } else { // queue up lazy facet for destruction

	jmp	SHORT $LN2@use_facet
$LN5@use_facet:

; 445  :             auto _Pfmod = const_cast<locale::facet*>(_Psave);

	mov	rax, QWORD PTR _Psave$7[rsp]
	mov	QWORD PTR _Pfmod$10[rsp], rax

; 446  :             unique_ptr<_Facet_base> _Psave_guard(static_cast<_Facet_base*>(_Pfmod));

	mov	rdx, QWORD PTR _Pfmod$10[rsp]
	lea	rcx, QWORD PTR _Psave_guard$11[rsp]
	call	??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
	npad	1

; 447  : 
; 448  : #if defined(_M_CEE)
; 449  :             _Facet_Register_m(_Pfmod);
; 450  : #else // defined(_M_CEE)
; 451  :             _Facet_Register(_Pfmod);

	mov	rcx, QWORD PTR _Pfmod$10[rsp]
	call	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register

; 452  : #endif // defined(_M_CEE)
; 453  : 
; 454  :             _Pfmod->_Incref();

	mov	rax, QWORD PTR _Pfmod$10[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pfmod$10[rsp]
	call	QWORD PTR [rax+8]

; 455  :             _Facetptr<_Facet>::_Psave = _Psave;

	mov	rax, QWORD PTR _Psave$7[rsp]
	mov	QWORD PTR ?_Psave@?$_Facetptr@V?$format_punct@_W@io@glm@@@std@@2PEBVfacet@locale@2@EB, rax ; std::_Facetptr<glm::io::format_punct<wchar_t> >::_Psave

; 456  :             _Pf                       = _Psave;

	mov	rax, QWORD PTR _Psave$7[rsp]
	mov	QWORD PTR _Pf$9[rsp], rax

; 457  : 
; 458  :             (void) _Psave_guard.release();

	lea	rcx, QWORD PTR _Psave_guard$11[rsp]
	call	?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
	npad	1

; 459  :         }

	lea	rcx, QWORD PTR _Psave_guard$11[rsp]
	call	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
$LN2@use_facet:

; 460  :     }
; 461  : 
; 462  :     return static_cast<const _Facet&>(*_Pf); // should be dynamic_cast

	mov	rax, QWORD PTR _Pf$9[rsp]
	mov	QWORD PTR $T12[rsp], rax
	lea	rcx, QWORD PTR _Lock$6[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rax, QWORD PTR $T12[rsp]

; 463  :     _END_LOCK()
; 464  : } // end of use_facet body

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
$LN10@use_facet:
??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z ENDP ; std::use_facet<glm::io::format_punct<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$0@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<glm::io::format_punct<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$6[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<glm::io::format_punct<wchar_t> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$1@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<glm::io::format_punct<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Psave_guard$11[rbp]
	call	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<glm::io::format_punct<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$0@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<glm::io::format_punct<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$6[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<glm::io::format_punct<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$1@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<glm::io::format_punct<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Psave_guard$11[rbp]
	call	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<glm::io::format_punct<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\locale
;	COMDAT ??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z
_TEXT	SEGMENT
_Lock$4 = 36
_Id$5 = 56
$T6 = 64
tv78 = 68
_Loc$ = 96
??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z PROC ; std::has_facet<glm::io::format_punct<wchar_t> >, COMDAT

; 162  : bool has_facet(const locale& _Loc) noexcept {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 163  :     _BEGIN_LOCK(_LOCK_LOCALE) // the thread lock, make get atomic

	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$4[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 164  :     size_t _Id = _Facet::id;

	lea	rcx, OFFSET FLAT:?id@?$format_punct@_W@io@glm@@2V0locale@std@@A ; glm::io::format_punct<wchar_t>::id
	call	QWORD PTR __imp_??Bid@locale@std@@QEAA_KXZ
	mov	QWORD PTR _Id$5[rsp], rax

; 165  :     return _Loc._Getfacet(_Id) || _Facet::_Getcat() != static_cast<size_t>(-1);

	mov	rdx, QWORD PTR _Id$5[rsp]
	mov	rcx, QWORD PTR _Loc$[rsp]
	call	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ; std::locale::_Getfacet
	test	rax, rax
	jne	SHORT $LN3@has_facet
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_?_Getcat@facet@locale@std@@SA_KPEAPEBV123@PEBV23@@Z
	cmp	rax, -1
	jne	SHORT $LN3@has_facet
	mov	DWORD PTR tv78[rsp], 0
	jmp	SHORT $LN4@has_facet
$LN3@has_facet:
	mov	DWORD PTR tv78[rsp], 1
$LN4@has_facet:
	movzx	eax, BYTE PTR tv78[rsp]
	mov	BYTE PTR $T6[rsp], al
	lea	rcx, QWORD PTR _Lock$4[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	movzx	eax, BYTE PTR $T6[rsp]

; 166  :     _END_LOCK()
; 167  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z ENDP ; std::has_facet<glm::io::format_punct<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xlocale
;	COMDAT ??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z
_TEXT	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z PROC ; std::use_facet<glm::io::format_punct<char> >, COMDAT

; 428  : const _Facet& __CRTDECL use_facet(const locale& _Loc) { // get facet reference from locale

$LN11:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 144				; 00000090H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+160]

; 429  :     _BEGIN_LOCK(_LOCK_LOCALE) // the thread lock, make get atomic

	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$6[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 430  :     const locale::facet* _Psave = _Facetptr<_Facet>::_Psave; // static pointer to lazy facet

	mov	rax, QWORD PTR ?_Psave@?$_Facetptr@V?$format_punct@D@io@glm@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<glm::io::format_punct<char> >::_Psave
	mov	QWORD PTR _Psave$7[rsp], rax

; 431  : 
; 432  :     const size_t _Id         = _Facet::id;

	lea	rcx, OFFSET FLAT:?id@?$format_punct@D@io@glm@@2V0locale@std@@A ; glm::io::format_punct<char>::id
	call	QWORD PTR __imp_??Bid@locale@std@@QEAA_KXZ
	mov	QWORD PTR _Id$8[rsp], rax

; 433  :     const locale::facet* _Pf = _Loc._Getfacet(_Id);

	mov	rdx, QWORD PTR _Id$8[rsp]
	mov	rcx, QWORD PTR _Loc$[rsp]
	call	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ; std::locale::_Getfacet
	mov	QWORD PTR _Pf$9[rsp], rax

; 434  : 
; 435  :     if (!_Pf) {

	cmp	QWORD PTR _Pf$9[rsp], 0
	jne	$LN2@use_facet

; 436  :         if (_Psave) {

	cmp	QWORD PTR _Psave$7[rsp], 0
	je	SHORT $LN3@use_facet

; 437  :             _Pf = _Psave; // lazy facet already allocated

	mov	rax, QWORD PTR _Psave$7[rsp]
	mov	QWORD PTR _Pf$9[rsp], rax
	jmp	$LN2@use_facet
$LN3@use_facet:

; 438  :         } else if (_Facet::_Getcat(&_Psave, &_Loc) == static_cast<size_t>(-1)) {

	mov	rdx, QWORD PTR _Loc$[rsp]
	lea	rcx, QWORD PTR _Psave$7[rsp]
	call	QWORD PTR __imp_?_Getcat@facet@locale@std@@SA_KPEAPEBV123@PEBV23@@Z
	cmp	rax, -1
	jne	SHORT $LN5@use_facet

; 439  : #if _HAS_EXCEPTIONS
; 440  :             _Throw_bad_cast(); // lazy disallowed

	call	?_Throw_bad_cast@std@@YAXXZ		; std::_Throw_bad_cast
	npad	1

; 441  : #else // _HAS_EXCEPTIONS
; 442  :             _CSTD abort(); // lazy disallowed
; 443  : #endif // _HAS_EXCEPTIONS
; 444  :         } else { // queue up lazy facet for destruction

	jmp	SHORT $LN2@use_facet
$LN5@use_facet:

; 445  :             auto _Pfmod = const_cast<locale::facet*>(_Psave);

	mov	rax, QWORD PTR _Psave$7[rsp]
	mov	QWORD PTR _Pfmod$10[rsp], rax

; 446  :             unique_ptr<_Facet_base> _Psave_guard(static_cast<_Facet_base*>(_Pfmod));

	mov	rdx, QWORD PTR _Pfmod$10[rsp]
	lea	rcx, QWORD PTR _Psave_guard$11[rsp]
	call	??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
	npad	1

; 447  : 
; 448  : #if defined(_M_CEE)
; 449  :             _Facet_Register_m(_Pfmod);
; 450  : #else // defined(_M_CEE)
; 451  :             _Facet_Register(_Pfmod);

	mov	rcx, QWORD PTR _Pfmod$10[rsp]
	call	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register

; 452  : #endif // defined(_M_CEE)
; 453  : 
; 454  :             _Pfmod->_Incref();

	mov	rax, QWORD PTR _Pfmod$10[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pfmod$10[rsp]
	call	QWORD PTR [rax+8]

; 455  :             _Facetptr<_Facet>::_Psave = _Psave;

	mov	rax, QWORD PTR _Psave$7[rsp]
	mov	QWORD PTR ?_Psave@?$_Facetptr@V?$format_punct@D@io@glm@@@std@@2PEBVfacet@locale@2@EB, rax ; std::_Facetptr<glm::io::format_punct<char> >::_Psave

; 456  :             _Pf                       = _Psave;

	mov	rax, QWORD PTR _Psave$7[rsp]
	mov	QWORD PTR _Pf$9[rsp], rax

; 457  : 
; 458  :             (void) _Psave_guard.release();

	lea	rcx, QWORD PTR _Psave_guard$11[rsp]
	call	?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
	npad	1

; 459  :         }

	lea	rcx, QWORD PTR _Psave_guard$11[rsp]
	call	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
$LN2@use_facet:

; 460  :     }
; 461  : 
; 462  :     return static_cast<const _Facet&>(*_Pf); // should be dynamic_cast

	mov	rax, QWORD PTR _Pf$9[rsp]
	mov	QWORD PTR $T12[rsp], rax
	lea	rcx, QWORD PTR _Lock$6[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rax, QWORD PTR $T12[rsp]

; 463  :     _END_LOCK()
; 464  : } // end of use_facet body

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
$LN10@use_facet:
??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z ENDP ; std::use_facet<glm::io::format_punct<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$0@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<glm::io::format_punct<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$6[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<glm::io::format_punct<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$1@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<glm::io::format_punct<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Psave_guard$11[rbp]
	call	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<glm::io::format_punct<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$0@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<glm::io::format_punct<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$6[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<glm::io::format_punct<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$1@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<glm::io::format_punct<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Psave_guard$11[rbp]
	call	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<glm::io::format_punct<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\locale
;	COMDAT ??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z
_TEXT	SEGMENT
_Lock$4 = 36
_Id$5 = 56
$T6 = 64
tv78 = 68
_Loc$ = 96
??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z PROC ; std::has_facet<glm::io::format_punct<char> >, COMDAT

; 162  : bool has_facet(const locale& _Loc) noexcept {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 163  :     _BEGIN_LOCK(_LOCK_LOCALE) // the thread lock, make get atomic

	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$4[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 164  :     size_t _Id = _Facet::id;

	lea	rcx, OFFSET FLAT:?id@?$format_punct@D@io@glm@@2V0locale@std@@A ; glm::io::format_punct<char>::id
	call	QWORD PTR __imp_??Bid@locale@std@@QEAA_KXZ
	mov	QWORD PTR _Id$5[rsp], rax

; 165  :     return _Loc._Getfacet(_Id) || _Facet::_Getcat() != static_cast<size_t>(-1);

	mov	rdx, QWORD PTR _Id$5[rsp]
	mov	rcx, QWORD PTR _Loc$[rsp]
	call	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ; std::locale::_Getfacet
	test	rax, rax
	jne	SHORT $LN3@has_facet
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_?_Getcat@facet@locale@std@@SA_KPEAPEBV123@PEBV23@@Z
	cmp	rax, -1
	jne	SHORT $LN3@has_facet
	mov	DWORD PTR tv78[rsp], 0
	jmp	SHORT $LN4@has_facet
$LN3@has_facet:
	mov	DWORD PTR tv78[rsp], 1
$LN4@has_facet:
	movzx	eax, BYTE PTR tv78[rsp]
	mov	BYTE PTR $T6[rsp], al
	lea	rcx, QWORD PTR _Lock$4[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	movzx	eax, BYTE PTR $T6[rsp]

; 166  :     _END_LOCK()
; 167  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z ENDP ; std::has_facet<glm::io::format_punct<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$addressof@_W@std@@YAPEA_WAEA_W@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@_W@std@@YAPEA_WAEA_W@Z PROC		; std::addressof<wchar_t>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 276  : }

	pop	rdi
	ret	0
??$addressof@_W@std@@YAPEA_WAEA_W@Z ENDP		; std::addressof<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@D@std@@YAPEADAEAD@Z PROC			; std::addressof<char>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 276  : }

	pop	rdi
	ret	0
??$addressof@D@std@@YAPEADAEAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 276  : }

	pop	rdi
	ret	0
??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
;	COMDAT ??$max@PEAD@std@@YAAEBQEADAEBQEAD0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$max@PEAD@std@@YAAEBQEADAEBQEAD0@Z PROC		; std::max<char *>, COMDAT

; 42   :     const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Left < _Right)) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 43   :     // return larger of _Left and _Right
; 44   :     return _Left < _Right ? _Right : _Left;

	mov	rax, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@max
	mov	rax, QWORD PTR _Right$[rsp]
	mov	QWORD PTR tv65[rsp], rax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	rax, QWORD PTR _Left$[rsp]
	mov	QWORD PTR tv65[rsp], rax
$LN4@max:
	mov	rax, QWORD PTR tv65[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]

; 45   : }

	add	rsp, 16
	pop	rdi
	ret	0
??$max@PEAD@std@@YAAEBQEADAEBQEAD0@Z ENDP		; std::max<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$addressof@V?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 276  : }

	pop	rdi
	ret	0
??$addressof@V?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
;	COMDAT ??$max@PEA_W@std@@YAAEBQEA_WAEBQEA_W0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$max@PEA_W@std@@YAAEBQEA_WAEBQEA_W0@Z PROC		; std::max<wchar_t *>, COMDAT

; 42   :     const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Left < _Right)) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 43   :     // return larger of _Left and _Right
; 44   :     return _Left < _Right ? _Right : _Left;

	mov	rax, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@max
	mov	rax, QWORD PTR _Right$[rsp]
	mov	QWORD PTR tv65[rsp], rax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	rax, QWORD PTR _Left$[rsp]
	mov	QWORD PTR tv65[rsp], rax
$LN4@max:
	mov	rax, QWORD PTR tv65[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]

; 45   : }

	add	rsp, 16
	pop	rdi
	ret	0
??$max@PEA_W@std@@YAAEBQEA_WAEBQEA_W0@Z ENDP		; std::max<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 693  :     static _CONSTEXPR20_DYNALLOC void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 694  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 695  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 696  :         if (_STD is_constant_evaluated()) {
; 697  :             _Al.deallocate(_Ptr, _Count);
; 698  :         } else
; 699  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 700  :         {
; 701  :             (void) _Al;
; 702  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 703  :         }
; 704  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S75$8 = 100
rows$9 = 120
$S76$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 196
$T18 = 212
$T19 = 232
tv95 = 240
tv168 = 244
os$ = 272
a$ = 280
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z PROC ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x4,float,2>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+272]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S75$8[rsp], 4
	lea	rax, QWORD PTR $S75$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S76$10[rsp], 4
	lea	rax, QWORD PTR $S76$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z ; glm::row<glm::tmat4x4<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z ; glm::column<glm::tmat4x4<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z ; glm::column<glm::tmat4x4<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat4x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x4@M$01@0@H@Z ; glm::row<glm::tmat4x4<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 256				; 00000100H
	pop	rdi
	ret	0
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z ENDP ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x4,float,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S75$8 = 100
rows$9 = 120
$S76$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 196
$T18 = 212
$T19 = 232
tv95 = 240
tv168 = 244
os$ = 272
a$ = 280
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x4,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x4,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S75$8 = 100
rows$9 = 120
$S76$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 196
$T18 = 212
$T19 = 232
tv95 = 240
tv168 = 244
os$ = 272
a$ = 280
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x4,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x4,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S73$8 = 100
rows$9 = 120
$S74$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 192
$T18 = 204
$T19 = 224
tv95 = 232
tv168 = 236
os$ = 256
a$ = 264
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z PROC ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x3,float,2>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 240				; 000000f0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+256]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S73$8[rsp], 4
	lea	rax, QWORD PTR $S73$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S74$10[rsp], 3
	lea	rax, QWORD PTR $S74$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z ; glm::row<glm::tmat4x3<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z ; glm::column<glm::tmat4x3<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z ; glm::column<glm::tmat4x3<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat4x3@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x3@M$01@0@H@Z ; glm::row<glm::tmat4x3<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z ENDP ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x3,float,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S73$8 = 100
rows$9 = 120
$S74$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 192
$T18 = 204
$T19 = 224
tv95 = 232
tv168 = 236
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x3,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x3,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S73$8 = 100
rows$9 = 120
$S74$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 192
$T18 = 204
$T19 = 224
tv95 = 232
tv168 = 236
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x3,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x3,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S71$8 = 100
rows$9 = 120
$S72$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 188
$T18 = 196
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z PROC ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x2,float,2>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 240				; 000000f0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+256]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S71$8[rsp], 4
	lea	rax, QWORD PTR $S71$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S72$10[rsp], 2
	lea	rax, QWORD PTR $S72$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z ; glm::row<glm::tmat4x2<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z ; glm::column<glm::tmat4x2<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z ; glm::column<glm::tmat4x2<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat4x2@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat4x2@M$01@0@H@Z ; glm::row<glm::tmat4x2<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z ENDP ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x2,float,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S71$8 = 100
rows$9 = 120
$S72$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 188
$T18 = 196
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x2,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x2,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S71$8 = 100
rows$9 = 120
$S72$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 188
$T18 = 196
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x2,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x2,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S69$8 = 100
rows$9 = 120
$S70$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 192
$T18 = 208
$T19 = 224
tv95 = 232
tv168 = 236
os$ = 256
a$ = 264
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z PROC ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x4,float,2>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 240				; 000000f0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+256]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S69$8[rsp], 3
	lea	rax, QWORD PTR $S69$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S70$10[rsp], 4
	lea	rax, QWORD PTR $S70$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z ; glm::row<glm::tmat3x4<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z ; glm::column<glm::tmat3x4<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z ; glm::column<glm::tmat3x4<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat3x4@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x4@M$01@0@H@Z ; glm::row<glm::tmat3x4<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z ENDP ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x4,float,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S69$8 = 100
rows$9 = 120
$S70$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 192
$T18 = 208
$T19 = 224
tv95 = 232
tv168 = 236
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x4,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x4,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S69$8 = 100
rows$9 = 120
$S70$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 192
$T18 = 208
$T19 = 224
tv95 = 232
tv168 = 236
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x4,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x4,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S67$8 = 100
rows$9 = 120
$S68$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 188
$T18 = 200
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z PROC ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x3,float,2>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 240				; 000000f0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+256]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S67$8[rsp], 3
	lea	rax, QWORD PTR $S67$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S68$10[rsp], 3
	lea	rax, QWORD PTR $S68$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z ; glm::row<glm::tmat3x3<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z ; glm::column<glm::tmat3x3<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z ; glm::column<glm::tmat3x3<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat3x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x3@M$01@0@H@Z ; glm::row<glm::tmat3x3<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z ENDP ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x3,float,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S67$8 = 100
rows$9 = 120
$S68$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 188
$T18 = 200
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x3,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x3,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S67$8 = 100
rows$9 = 120
$S68$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 188
$T18 = 200
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x3,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x3,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S65$8 = 100
rows$9 = 120
$S66$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 184
$T18 = 192
$T19 = 208
tv95 = 216
tv168 = 220
os$ = 240
a$ = 248
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z PROC ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x2,float,2>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+240]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S65$8[rsp], 3
	lea	rax, QWORD PTR $S65$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S66$10[rsp], 2
	lea	rax, QWORD PTR $S66$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z ; glm::row<glm::tmat3x2<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z ; glm::column<glm::tmat3x2<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z ; glm::column<glm::tmat3x2<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat3x2@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat3x2@M$01@0@H@Z ; glm::row<glm::tmat3x2<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 224				; 000000e0H
	pop	rdi
	ret	0
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z ENDP ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x2,float,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S65$8 = 100
rows$9 = 120
$S66$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 184
$T18 = 192
$T19 = 208
tv95 = 216
tv168 = 220
os$ = 240
a$ = 248
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x2,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x2,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S65$8 = 100
rows$9 = 120
$S66$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 184
$T18 = 192
$T19 = 208
tv95 = 216
tv168 = 220
os$ = 240
a$ = 248
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x2,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x2,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S63$8 = 100
rows$9 = 120
$S64$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 188
$T18 = 204
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z PROC ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x4,float,2>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 240				; 000000f0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+256]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S63$8[rsp], 2
	lea	rax, QWORD PTR $S63$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S64$10[rsp], 4
	lea	rax, QWORD PTR $S64$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z ; glm::row<glm::tmat2x4<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z ; glm::column<glm::tmat2x4<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec4@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z ; glm::column<glm::tmat2x4<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat2x4@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x4@M$01@0@H@Z ; glm::row<glm::tmat2x4<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z ENDP ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x4,float,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S63$8 = 100
rows$9 = 120
$S64$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 188
$T18 = 204
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x4,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x4,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S63$8 = 100
rows$9 = 120
$S64$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 188
$T18 = 204
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x4,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x4,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S61$8 = 100
rows$9 = 120
$S62$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 184
$T18 = 196
$T19 = 208
tv95 = 216
tv168 = 220
os$ = 240
a$ = 248
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z PROC ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x3,float,2>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+240]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S61$8[rsp], 2
	lea	rax, QWORD PTR $S61$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S62$10[rsp], 3
	lea	rax, QWORD PTR $S62$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z ; glm::row<glm::tmat2x3<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z ; glm::column<glm::tmat2x3<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec3@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z ; glm::column<glm::tmat2x3<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat2x3@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x3@M$01@0@H@Z ; glm::row<glm::tmat2x3<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 224				; 000000e0H
	pop	rdi
	ret	0
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z ENDP ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x3,float,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S61$8 = 100
rows$9 = 120
$S62$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 184
$T18 = 196
$T19 = 208
tv95 = 216
tv168 = 220
os$ = 240
a$ = 248
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x3,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x3,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S61$8 = 100
rows$9 = 120
$S62$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 184
$T18 = 196
$T19 = 208
tv95 = 216
tv168 = 220
os$ = 240
a$ = 248
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x3,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x3,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S59$8 = 100
rows$9 = 120
$S60$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 180
$T18 = 188
$T19 = 200
tv95 = 208
tv168 = 212
os$ = 240
a$ = 248
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z PROC ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x2,float,2>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+240]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S59$8[rsp], 2
	lea	rax, QWORD PTR $S59$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S60$10[rsp], 2
	lea	rax, QWORD PTR $S60$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z ; glm::row<glm::tmat2x2<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z ; glm::column<glm::tmat2x2<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+36]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z ; glm::column<glm::tmat2x2<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat2x2@M$01@glm@@@glm@@YA?AU?$tvec2@M$01@0@AEBU?$tmat2x2@M$01@0@H@Z ; glm::row<glm::tmat2x2<float,2> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 224				; 000000e0H
	pop	rdi
	ret	0
??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z ENDP ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x2,float,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S59$8 = 100
rows$9 = 120
$S60$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 180
$T18 = 188
$T19 = 200
tv95 = 208
tv168 = 212
os$ = 240
a$ = 248
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x2,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x2,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S59$8 = 100
rows$9 = 120
$S60$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 180
$T18 = 188
$T19 = 200
tv95 = 208
tv168 = 212
os$ = 240
a$ = 248
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x2,float,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x2,float,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S57$8 = 100
rows$9 = 120
$S58$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 196
$T18 = 212
$T19 = 232
tv95 = 240
tv168 = 244
os$ = 272
a$ = 280
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z PROC ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x4,float,0>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+272]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S57$8[rsp], 4
	lea	rax, QWORD PTR $S57$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S58$10[rsp], 4
	lea	rax, QWORD PTR $S58$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z ; glm::row<glm::tmat4x4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z ; glm::column<glm::tmat4x4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z ; glm::column<glm::tmat4x4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat4x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x4@M$0A@@0@H@Z ; glm::row<glm::tmat4x4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 256				; 00000100H
	pop	rdi
	ret	0
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z ENDP ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x4,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S57$8 = 100
rows$9 = 120
$S58$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 196
$T18 = 212
$T19 = 232
tv95 = 240
tv168 = 244
os$ = 272
a$ = 280
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x4,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x4,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S57$8 = 100
rows$9 = 120
$S58$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 196
$T18 = 212
$T19 = 232
tv95 = 240
tv168 = 244
os$ = 272
a$ = 280
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x4,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x4,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S55$8 = 100
rows$9 = 120
$S56$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 192
$T18 = 204
$T19 = 224
tv95 = 232
tv168 = 236
os$ = 256
a$ = 264
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z PROC ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x3,float,0>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 240				; 000000f0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+256]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S55$8[rsp], 4
	lea	rax, QWORD PTR $S55$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S56$10[rsp], 3
	lea	rax, QWORD PTR $S56$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z ; glm::row<glm::tmat4x3<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z ; glm::column<glm::tmat4x3<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z ; glm::column<glm::tmat4x3<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat4x3@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x3@M$0A@@0@H@Z ; glm::row<glm::tmat4x3<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z ENDP ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x3,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S55$8 = 100
rows$9 = 120
$S56$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 192
$T18 = 204
$T19 = 224
tv95 = 232
tv168 = 236
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x3,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x3,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S55$8 = 100
rows$9 = 120
$S56$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 192
$T18 = 204
$T19 = 224
tv95 = 232
tv168 = 236
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x3,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x3,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S53$8 = 100
rows$9 = 120
$S54$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 188
$T18 = 196
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z PROC ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x2,float,0>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 240				; 000000f0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+256]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S53$8[rsp], 4
	lea	rax, QWORD PTR $S53$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S54$10[rsp], 2
	lea	rax, QWORD PTR $S54$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z ; glm::row<glm::tmat4x2<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z ; glm::column<glm::tmat4x2<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z ; glm::column<glm::tmat4x2<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat4x2@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat4x2@M$0A@@0@H@Z ; glm::row<glm::tmat4x2<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z ENDP ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x2,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S53$8 = 100
rows$9 = 120
$S54$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 188
$T18 = 196
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x2,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x2,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S53$8 = 100
rows$9 = 120
$S54$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 180
$T17 = 188
$T18 = 196
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x2,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x2,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S51$8 = 100
rows$9 = 120
$S52$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 192
$T18 = 208
$T19 = 224
tv95 = 232
tv168 = 236
os$ = 256
a$ = 264
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z PROC ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x4,float,0>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 240				; 000000f0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+256]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S51$8[rsp], 3
	lea	rax, QWORD PTR $S51$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S52$10[rsp], 4
	lea	rax, QWORD PTR $S52$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z ; glm::row<glm::tmat3x4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z ; glm::column<glm::tmat3x4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z ; glm::column<glm::tmat3x4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat3x4@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x4@M$0A@@0@H@Z ; glm::row<glm::tmat3x4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z ENDP ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x4,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S51$8 = 100
rows$9 = 120
$S52$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 192
$T18 = 208
$T19 = 224
tv95 = 232
tv168 = 236
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x4,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x4,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S51$8 = 100
rows$9 = 120
$S52$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 192
$T18 = 208
$T19 = 224
tv95 = 232
tv168 = 236
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x4,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x4,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S49$8 = 100
rows$9 = 120
$S50$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 188
$T18 = 200
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z PROC ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x3,float,0>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 240				; 000000f0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+256]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S49$8[rsp], 3
	lea	rax, QWORD PTR $S49$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S50$10[rsp], 3
	lea	rax, QWORD PTR $S50$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z ; glm::row<glm::tmat3x3<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z ; glm::column<glm::tmat3x3<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z ; glm::column<glm::tmat3x3<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat3x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x3@M$0A@@0@H@Z ; glm::row<glm::tmat3x3<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z ENDP ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x3,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S49$8 = 100
rows$9 = 120
$S50$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 188
$T18 = 200
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x3,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x3,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S49$8 = 100
rows$9 = 120
$S50$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 188
$T18 = 200
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x3,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x3,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S47$8 = 100
rows$9 = 120
$S48$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 184
$T18 = 192
$T19 = 208
tv95 = 216
tv168 = 220
os$ = 240
a$ = 248
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z PROC ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x2,float,0>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+240]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S47$8[rsp], 3
	lea	rax, QWORD PTR $S47$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S48$10[rsp], 2
	lea	rax, QWORD PTR $S48$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z ; glm::row<glm::tmat3x2<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z ; glm::column<glm::tmat3x2<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z ; glm::column<glm::tmat3x2<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat3x2@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat3x2@M$0A@@0@H@Z ; glm::row<glm::tmat3x2<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 224				; 000000e0H
	pop	rdi
	ret	0
??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z ENDP ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x2,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S47$8 = 100
rows$9 = 120
$S48$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 184
$T18 = 192
$T19 = 208
tv95 = 216
tv168 = 220
os$ = 240
a$ = 248
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x2,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x2,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S47$8 = 100
rows$9 = 120
$S48$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 176
$T17 = 184
$T18 = 192
$T19 = 208
tv95 = 216
tv168 = 220
os$ = 240
a$ = 248
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x2,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x2,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S45$8 = 100
rows$9 = 120
$S46$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 188
$T18 = 204
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z PROC ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x4,float,0>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 240				; 000000f0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+256]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S45$8[rsp], 2
	lea	rax, QWORD PTR $S45$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S46$10[rsp], 4
	lea	rax, QWORD PTR $S46$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z ; glm::row<glm::tmat2x4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z ; glm::column<glm::tmat2x4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z ; glm::column<glm::tmat2x4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat2x4@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x4@M$0A@@0@H@Z ; glm::row<glm::tmat2x4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z ENDP ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x4,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S45$8 = 100
rows$9 = 120
$S46$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 188
$T18 = 204
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x4,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x4,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S45$8 = 100
rows$9 = 120
$S46$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 188
$T18 = 204
$T19 = 216
tv95 = 224
tv168 = 228
os$ = 256
a$ = 264
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x4,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x4,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S43$8 = 100
rows$9 = 120
$S44$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 184
$T18 = 196
$T19 = 208
tv95 = 216
tv168 = 220
os$ = 240
a$ = 248
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z PROC ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x3,float,0>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+240]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S43$8[rsp], 2
	lea	rax, QWORD PTR $S43$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S44$10[rsp], 3
	lea	rax, QWORD PTR $S44$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z ; glm::row<glm::tmat2x3<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z ; glm::column<glm::tmat2x3<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z ; glm::column<glm::tmat2x3<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat2x3@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x3@M$0A@@0@H@Z ; glm::row<glm::tmat2x3<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 224				; 000000e0H
	pop	rdi
	ret	0
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z ENDP ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x3,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S43$8 = 100
rows$9 = 120
$S44$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 184
$T18 = 196
$T19 = 208
tv95 = 216
tv168 = 220
os$ = 240
a$ = 248
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x3,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x3,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S43$8 = 100
rows$9 = 120
$S44$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 184
$T18 = 196
$T19 = 208
tv95 = 216
tv168 = 220
os$ = 240
a$ = 248
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x3,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x3,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S41$8 = 100
rows$9 = 120
$S42$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 180
$T18 = 188
$T19 = 200
tv95 = 208
tv168 = 212
os$ = 240
a$ = 248
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z PROC ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x2,float,0>, COMDAT

; 232  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+240]

; 233  : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 234  : 
; 235  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN18@print_matr

; 236  : 		{
; 237  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 238  : 
; 239  : 			length_t const& cols(type<M, T, P>::cols);

	mov	DWORD PTR $S41$8[rsp], 2
	lea	rax, QWORD PTR $S41$8[rsp]
	mov	QWORD PTR cols$7[rsp], rax

; 240  : 			length_t const& rows(type<M, T, P>::rows);

	mov	DWORD PTR $S42$10[rsp], 2
	lea	rax, QWORD PTR $S42$10[rsp]
	mov	QWORD PTR rows$9[rsp], rax

; 241  : 
; 242  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN19@print_matr

; 243  : 			{
; 244  : 				os << fmt.newline << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 245  : 
; 246  : 				switch(fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv95[rsp], eax
	cmp	DWORD PTR tv95[rsp], 0
	je	SHORT $LN21@print_matr
	cmp	DWORD PTR tv95[rsp], 1
	je	$LN24@print_matr
	jmp	$LN2@print_matr
$LN21@print_matr:

; 247  : 				{
; 248  : 					case io::column_major:
; 249  : 					{
; 250  : 						for(length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN6@print_matr
$LN4@print_matr:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN6@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN5@print_matr

; 251  : 						{
; 252  : 							if (0 != i)

	cmp	DWORD PTR i$11[rsp], 0
	je	SHORT $LN22@print_matr

; 253  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN22@print_matr:

; 254  : 
; 255  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$11[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z ; glm::row<glm::tmat2x2<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 256  : 
; 257  : 							if(rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN23@print_matr

; 258  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN23@print_matr:

; 259  : 						}

	jmp	$LN4@print_matr
$LN5@print_matr:

; 260  : 					}
; 261  : 					break;

	jmp	$LN2@print_matr
$LN24@print_matr:

; 262  : 
; 263  : 					case io::row_major:
; 264  : 					{
; 265  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$12[rsp], 0
	jmp	SHORT $LN9@print_matr
$LN7@print_matr:
	mov	eax, DWORD PTR i$12[rsp]
	inc	eax
	mov	DWORD PTR i$12[rsp], eax
$LN9@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$12[rsp], eax
	jge	SHORT $LN2@print_matr

; 266  : 						{
; 267  : 							if(0 != i)

	cmp	DWORD PTR i$12[rsp], 0
	je	SHORT $LN25@print_matr

; 268  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN25@print_matr:

; 269  : 
; 270  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$12[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$column@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z ; glm::column<glm::tmat2x2<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 271  : 
; 272  : 							if(cols-1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$12[rsp]
	je	SHORT $LN26@print_matr

; 273  : 								os << fmt.newline;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN26@print_matr:

; 274  : 						}

	jmp	$LN7@print_matr
$LN2@print_matr:

; 275  : 					}
; 276  : 					break;
; 277  : 				}
; 278  : 
; 279  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 280  : 			}

	jmp	$LN18@print_matr
$LN19@print_matr:

; 281  : 			else
; 282  : 			{
; 283  : 				switch (fmt.order)

	mov	rax, QWORD PTR fmt$6[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR tv168[rsp], eax
	cmp	DWORD PTR tv168[rsp], 0
	je	SHORT $LN27@print_matr
	cmp	DWORD PTR tv168[rsp], 1
	je	$LN29@print_matr
	jmp	$LN18@print_matr
$LN27@print_matr:

; 284  : 				{
; 285  : 					case io::column_major:
; 286  : 					{
; 287  : 						for(length_t i(0); i < cols; ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN14@print_matr
$LN12@print_matr:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN14@print_matr:
	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN13@print_matr

; 288  : 						{
; 289  : 							os << column(a, i);

	mov	r8d, DWORD PTR i$13[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$column@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z ; glm::column<glm::tmat2x2<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 290  : 
; 291  : 							if(cols - 1 != i)

	mov	rax, QWORD PTR cols$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$13[rsp]
	je	SHORT $LN28@print_matr

; 292  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN28@print_matr:

; 293  : 						}

	jmp	SHORT $LN12@print_matr
$LN13@print_matr:

; 294  : 					}
; 295  : 					break;

	jmp	$LN18@print_matr
$LN29@print_matr:

; 296  : 
; 297  : 					case io::row_major:
; 298  : 					{
; 299  : 						for (length_t i(0); i < rows; ++i)

	mov	DWORD PTR i$14[rsp], 0
	jmp	SHORT $LN17@print_matr
$LN15@print_matr:
	mov	eax, DWORD PTR i$14[rsp]
	inc	eax
	mov	DWORD PTR i$14[rsp], eax
$LN17@print_matr:
	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$14[rsp], eax
	jge	SHORT $LN18@print_matr

; 300  : 						{
; 301  : 							os << row(a, i);

	mov	r8d, DWORD PTR i$14[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$row@U?$tmat2x2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU?$tmat2x2@M$0A@@0@H@Z ; glm::row<glm::tmat2x2<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>

; 302  : 
; 303  : 							if (rows-1 != i)

	mov	rax, QWORD PTR rows$9[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$14[rsp]
	je	SHORT $LN30@print_matr

; 304  : 								os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN30@print_matr:

; 305  : 						}

	jmp	SHORT $LN15@print_matr
$LN18@print_matr:

; 306  : 					}
; 307  : 					break;
; 308  : 				}
; 309  : 			}
; 310  : 		}
; 311  : 
; 312  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T19[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T19[rsp]

; 313  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 224				; 000000e0H
	pop	rdi
	ret	0
??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z ENDP ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x2,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S41$8 = 100
rows$9 = 120
$S42$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 180
$T18 = 188
$T19 = 200
tv95 = 208
tv168 = 212
os$ = 240
a$ = 248
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x2,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x2,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
cols$7 = 80
$S41$8 = 100
rows$9 = 120
$S42$10 = 132
i$11 = 148
i$12 = 152
i$13 = 156
i$14 = 160
$T15 = 164
$T16 = 172
$T17 = 180
$T18 = 188
$T19 = 200
tv95 = 208
tv168 = 212
os$ = 240
a$ = 248
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x2,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x2,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S40$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S40$8[rsp], 4
	lea	rax, QWORD PTR $S40$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@I$01@glm@@QEBAAEBIH@Z	; glm::tvec4<unsigned int,2>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@I$01@glm@@QEBAAEBIH@Z	; glm::tvec4<unsigned int,2>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S40$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S40$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S40$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S40$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S39$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S39$8[rsp], 3
	lea	rax, QWORD PTR $S39$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@I$01@glm@@QEBAAEBIH@Z	; glm::tvec3<unsigned int,2>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@I$01@glm@@QEBAAEBIH@Z	; glm::tvec3<unsigned int,2>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S39$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S39$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S39$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S39$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S38$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S38$8[rsp], 2
	lea	rax, QWORD PTR $S38$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@I$01@glm@@QEBAAEBIH@Z	; glm::tvec2<unsigned int,2>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@I$01@glm@@QEBAAEBIH@Z	; glm::tvec2<unsigned int,2>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S38$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S38$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S38$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S38$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S37$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z PROC ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S37$8[rsp], 4
	lea	rax, QWORD PTR $S37$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ; std::setfill<char>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@I$01@glm@@QEBAAEBIH@Z	; glm::tvec4<unsigned int,2>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@I$01@glm@@QEBAAEBIH@Z	; glm::tvec4<unsigned int,2>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z ENDP ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S37$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S37$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S37$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S37$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S36$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z PROC ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S36$8[rsp], 3
	lea	rax, QWORD PTR $S36$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ; std::setfill<char>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@I$01@glm@@QEBAAEBIH@Z	; glm::tvec3<unsigned int,2>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@I$01@glm@@QEBAAEBIH@Z	; glm::tvec3<unsigned int,2>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z ENDP ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S36$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S36$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S36$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S36$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S35$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z PROC ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S35$8[rsp], 2
	lea	rax, QWORD PTR $S35$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ; std::setfill<char>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@I$01@glm@@QEBAAEBIH@Z	; glm::tvec2<unsigned int,2>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@I$01@glm@@QEBAAEBIH@Z	; glm::tvec2<unsigned int,2>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z ENDP ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S35$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S35$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S35$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S35$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S34$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S34$8[rsp], 4
	lea	rax, QWORD PTR $S34$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@H$00@glm@@QEBAAEBHH@Z	; glm::tvec4<int,1>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@H@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@H$00@glm@@QEBAAEBHH@Z	; glm::tvec4<int,1>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@H@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S34$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S34$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S34$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S34$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S33$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S33$8[rsp], 3
	lea	rax, QWORD PTR $S33$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@H$00@glm@@QEBAAEBHH@Z	; glm::tvec3<int,1>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@H@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@H$00@glm@@QEBAAEBHH@Z	; glm::tvec3<int,1>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@H@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S33$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S33$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S33$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S33$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S32$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S32$8[rsp], 2
	lea	rax, QWORD PTR $S32$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@H$00@glm@@QEBAAEBHH@Z	; glm::tvec2<int,1>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@H@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@H$00@glm@@QEBAAEBHH@Z	; glm::tvec2<int,1>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@H@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S32$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S32$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S32$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S32$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S31$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z PROC ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S31$8[rsp], 4
	lea	rax, QWORD PTR $S31$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ; std::setfill<char>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@H$00@glm@@QEBAAEBHH@Z	; glm::tvec4<int,1>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@H$00@glm@@QEBAAEBHH@Z	; glm::tvec4<int,1>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z ENDP ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S31$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S31$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S31$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S31$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S30$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z PROC ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S30$8[rsp], 3
	lea	rax, QWORD PTR $S30$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ; std::setfill<char>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@H$00@glm@@QEBAAEBHH@Z	; glm::tvec3<int,1>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@H$00@glm@@QEBAAEBHH@Z	; glm::tvec3<int,1>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z ENDP ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S30$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S30$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S30$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S30$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S29$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z PROC ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S29$8[rsp], 2
	lea	rax, QWORD PTR $S29$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ; std::setfill<char>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@H$00@glm@@QEBAAEBHH@Z	; glm::tvec2<int,1>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@H$00@glm@@QEBAAEBHH@Z	; glm::tvec2<int,1>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z ENDP ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S29$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S29$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S29$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S29$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S28$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S28$8[rsp], 4
	lea	rax, QWORD PTR $S28$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	movss	xmm1, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S28$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S28$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S28$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S28$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S27$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S27$8[rsp], 3
	lea	rax, QWORD PTR $S27$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	movss	xmm1, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S27$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S27$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S27$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S27$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S26$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S26$8[rsp], 2
	lea	rax, QWORD PTR $S26$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	movss	xmm1, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S26$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S26$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S26$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S26$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S25$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z PROC ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S25$8[rsp], 4
	lea	rax, QWORD PTR $S25$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ; std::setfill<char>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	movss	xmm1, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z ENDP ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S25$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S25$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S25$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S25$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S24$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z PROC ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S24$8[rsp], 3
	lea	rax, QWORD PTR $S24$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ; std::setfill<char>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	movss	xmm1, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z ENDP ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S24$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S24$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S24$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S24$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S23$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z PROC ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S23$8[rsp], 2
	lea	rax, QWORD PTR $S23$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ; std::setfill<char>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	movss	xmm1, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z ENDP ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S23$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S23$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S23$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S23$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S22$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S22$8[rsp], 4
	lea	rax, QWORD PTR $S22$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tquat@I$01@glm@@QEBAAEBIH@Z	; glm::tquat<unsigned int,2>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tquat@I$01@glm@@QEBAAEBIH@Z	; glm::tquat<unsigned int,2>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S22$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S22$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S22$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S22$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S21$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z PROC ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S21$8[rsp], 4
	lea	rax, QWORD PTR $S21$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ; std::setfill<char>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tquat@I$01@glm@@QEBAAEBIH@Z	; glm::tquat<unsigned int,2>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tquat@I$01@glm@@QEBAAEBIH@Z	; glm::tquat<unsigned int,2>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z ENDP ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S21$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S21$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S21$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S21$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S20$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S20$8[rsp], 4
	lea	rax, QWORD PTR $S20$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tquat@H$00@glm@@QEBAAEBHH@Z	; glm::tquat<int,1>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@H@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tquat@H$00@glm@@QEBAAEBHH@Z	; glm::tquat<int,1>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@H@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S20$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S20$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S20$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S20$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S19$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z PROC ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S19$8[rsp], 4
	lea	rax, QWORD PTR $S19$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ; std::setfill<char>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tquat@H$00@glm@@QEBAAEBHH@Z	; glm::tquat<int,1>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tquat@H$00@glm@@QEBAAEBHH@Z	; glm::tquat<int,1>::operator[]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z ENDP ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S19$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S19$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S19$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S19$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S18$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z PROC ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S18$8[rsp], 4
	lea	rax, QWORD PTR $S18$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@_W@std@@YA?AU?$_Fillobj@_W@0@_W@Z ; std::setfill<wchar_t>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@_W@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Fillobj@_W@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,wchar_t>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rcx+30]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tquat@M$0A@@glm@@QEBAAEBMH@Z	; glm::tquat<float,0>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@_J@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	movss	xmm1, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tquat@M$0A@@glm@@QEBAAEBMH@Z	; glm::tquat<float,0>::operator[]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@M@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, WORD PTR [rax+34]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z ENDP ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S18$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S18$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S18$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S18$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z
_TEXT	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 86
$T6 = 88
$T7 = 90
$T8 = 96
tv136 = 104
tv290 = 108
tv291 = 112
tv292 = 120
tv293 = 128
tv294 = 136
tv295 = 144
tv296 = 152
tv297 = 160
_Ostr$ = 192
_Data$ = 200
_Size$ = 208
??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z PROC ; std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>, COMDAT

; 501  :     basic_ostream<_Elem, _Traits>& _Ostr, const _Elem* const _Data, const _SizeT _Size) {

$LN26:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]

; 502  :     // insert a character-type sequence into _Ostr as if through a basic_string copy
; 503  :     using _Ostr_t                    = basic_ostream<_Elem, _Traits>;
; 504  :     typename _Ostr_t::iostate _State = _Ostr_t::goodbit;

	mov	DWORD PTR _State$[rsp], 0

; 505  : 
; 506  :     _SizeT _Pad;
; 507  :     if (_Ostr.width() <= 0 || static_cast<_SizeT>(_Ostr.width()) <= _Size) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	test	rax, rax
	jle	SHORT $LN10@Insert_str
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, QWORD PTR _Size$[rsp]
	ja	SHORT $LN8@Insert_str
$LN10@Insert_str:

; 508  :         _Pad = 0;

	mov	QWORD PTR _Pad$[rsp], 0

; 509  :     } else {

	jmp	SHORT $LN9@Insert_str
$LN8@Insert_str:

; 510  :         _Pad = static_cast<_SizeT>(_Ostr.width()) - _Size;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	sub	rax, QWORD PTR _Size$[rsp]
	mov	QWORD PTR _Pad$[rsp], rax
$LN9@Insert_str:

; 511  :     }
; 512  : 
; 513  :     const typename _Ostr_t::sentry _Ok(_Ostr);

	mov	rdx, QWORD PTR _Ostr$[rsp]
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 514  : 
; 515  :     if (!_Ok) {

	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@Insert_str

; 516  :         _State |= _Ostr_t::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 517  :     } else { // state okay, insert characters

	jmp	$LN12@Insert_str
$LN11@Insert_str:

; 518  :         _TRY_IO_BEGIN
; 519  :         if ((_Ostr.flags() & _Ostr_t::adjustfield) != _Ostr_t::left) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv136[rsp], eax
	mov	eax, DWORD PTR tv136[rsp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN14@Insert_str

; 520  :             for (; 0 < _Pad; --_Pad) { // pad on left

	jmp	SHORT $LN4@Insert_str
$LN2@Insert_str:
	mov	rax, QWORD PTR _Pad$[rsp]
	dec	rax
	mov	QWORD PTR _Pad$[rsp], rax
$LN4@Insert_str:
	cmp	QWORD PTR _Pad$[rsp], 0
	jbe	$LN14@Insert_str

; 521  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ
	mov	WORD PTR tv290[rsp], ax
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR tv291[rsp], rax
	movzx	edx, WORD PTR tv290[rsp]
	mov	rcx, QWORD PTR tv291[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z
	mov	WORD PTR tv292[rsp], ax
	movzx	eax, WORD PTR tv292[rsp]
	mov	WORD PTR $T4[rsp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T5[rsp], ax
	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR $T5[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@Insert_str

; 522  :                     _State |= _Ostr_t::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 523  :                     break;

	jmp	SHORT $LN14@Insert_str
$LN15@Insert_str:

; 524  :                 }
; 525  :             }

	jmp	$LN2@Insert_str
$LN14@Insert_str:

; 526  :         }
; 527  : 
; 528  :         if (_State == _Ostr_t::goodbit
; 529  :             && _Ostr.rdbuf()->sputn(_Data, static_cast<streamsize>(_Size)) != static_cast<streamsize>(_Size)) {

	cmp	DWORD PTR _State$[rsp], 0
	jne	SHORT $LN16@Insert_str
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR tv293[rsp], rax
	mov	r8, QWORD PTR _Size$[rsp]
	mov	rdx, QWORD PTR _Data$[rsp]
	mov	rcx, QWORD PTR tv293[rsp]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAA_JPEB_W_J@Z
	mov	QWORD PTR tv294[rsp], rax
	mov	rax, QWORD PTR _Size$[rsp]
	cmp	QWORD PTR tv294[rsp], rax
	je	SHORT $LN16@Insert_str

; 530  :             _State |= _Ostr_t::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 531  :         } else {

	jmp	$LN17@Insert_str
$LN16@Insert_str:

; 532  :             for (; 0 < _Pad; --_Pad) { // pad on right

	jmp	SHORT $LN7@Insert_str
$LN5@Insert_str:
	mov	rax, QWORD PTR _Pad$[rsp]
	dec	rax
	mov	QWORD PTR _Pad$[rsp], rax
$LN7@Insert_str:
	cmp	QWORD PTR _Pad$[rsp], 0
	jbe	$LN17@Insert_str

; 533  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ
	mov	WORD PTR tv295[rsp], ax
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR tv296[rsp], rax
	movzx	edx, WORD PTR tv295[rsp]
	mov	rcx, QWORD PTR tv296[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z
	mov	WORD PTR tv297[rsp], ax
	movzx	eax, WORD PTR tv297[rsp]
	mov	WORD PTR $T6[rsp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T7[rsp], ax
	lea	rdx, QWORD PTR $T6[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@Insert_str

; 534  :                     _State |= _Ostr_t::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 535  :                     break;

	jmp	SHORT $LN17@Insert_str
$LN18@Insert_str:

; 536  :                 }
; 537  :             }

	jmp	$LN5@Insert_str
$LN17@Insert_str:

; 538  :         }
; 539  : 
; 540  :         _Ostr.width(0);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
	npad	1
	jmp	SHORT $LN12@Insert_str
$LN24@Insert_str:
$LN12@Insert_str:

; 541  :         _CATCH_IO_(_Ostr_t, _Ostr)
; 542  :     }
; 543  : 
; 544  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z

; 545  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	QWORD PTR $T8[rsp], rax
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T8[rsp]

; 546  : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z ENDP ; std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 86
$T6 = 88
$T7 = 90
$T8 = 96
tv136 = 104
tv290 = 108
tv291 = 112
tv292 = 120
tv293 = 128
tv294 = 136
tv295 = 144
tv296 = 152
tv297 = 160
_Ostr$ = 192
_Data$ = 200
_Size$ = 208
?dtor$0@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA PROC ; `std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA ENDP ; `std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 86
$T6 = 88
$T7 = 90
$T8 = 96
tv136 = 104
tv290 = 108
tv291 = 112
tv292 = 120
tv293 = 128
tv294 = 136
tv295 = 144
tv296 = 152
tv297 = 160
_Ostr$ = 192
_Data$ = 200
_Size$ = 208
?catch$1@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA PROC ; `std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>'::`1'::catch$1

; 541  :         _CATCH_IO_(_Ostr_t, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN24@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA ENDP ; `std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 86
$T6 = 88
$T7 = 90
$T8 = 96
tv136 = 104
tv290 = 108
tv291 = 112
tv292 = 120
tv293 = 128
tv294 = 136
tv295 = 144
tv296 = 152
tv297 = 160
_Ostr$ = 192
_Data$ = 200
_Size$ = 208
?dtor$0@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA PROC ; `std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA ENDP ; `std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 86
$T6 = 88
$T7 = 90
$T8 = 96
tv136 = 104
tv290 = 108
tv291 = 112
tv292 = 120
tv293 = 128
tv294 = 136
tv295 = 144
tv296 = 152
tv297 = 160
_Ostr$ = 192
_Data$ = 200
_Size$ = 208
?catch$1@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA PROC ; `std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>'::`1'::catch$1

; 541  :         _CATCH_IO_(_Ostr_t, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN24@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z@4HA ENDP ; `std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor', COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 136				; 00000088H
	mov	rcx, rax
	call	??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 136				; 00000088H
	mov	rcx, rax
	call	QWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 136				; 00000088H
	mov	rcx, rax
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 136				; 00000088H
	mov	edx, 232				; 000000e8H
	mov	rcx, rax
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 136				; 00000088H
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 120				; 00000078H
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAHH@Z
_TEXT	SEGMENT
_State$ = 0
_Mode$ = 32
?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAHH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate, COMDAT

; 514  :     static int _Getstate(ios_base::openmode _Mode) { // convert open mode to stream state bits

$LN7:
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 16

; 515  :         int _State = 0;

	mov	DWORD PTR _State$[rsp], 0

; 516  :         if (!(_Mode & ios_base::in)) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN2@Getstate

; 517  :             _State |= _Noread;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN2@Getstate:

; 518  :         }
; 519  : 
; 520  :         if (!(_Mode & ios_base::out)) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	jne	SHORT $LN3@Getstate

; 521  :             _State |= _Constant;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 2
	mov	DWORD PTR _State$[rsp], eax
$LN3@Getstate:

; 522  :         }
; 523  : 
; 524  :         if (_Mode & ios_base::app) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN4@Getstate

; 525  :             _State |= _Append;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 8
	mov	DWORD PTR _State$[rsp], eax
$LN4@Getstate:

; 526  :         }
; 527  : 
; 528  :         if (_Mode & ios_base::ate) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN5@Getstate

; 529  :             _State |= _Atend;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 16
	mov	DWORD PTR _State$[rsp], eax
$LN5@Getstate:

; 530  :         }
; 531  : 
; 532  :         return _State;

	mov	eax, DWORD PTR _State$[rsp]

; 533  :     }

	add	rsp, 16
	pop	rdi
	ret	0
?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAHH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ
_TEXT	SEGMENT
tv88 = 32
tv128 = 40
this$ = 64
?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT

; 494  :     void _Tidy() noexcept { // discard any allocated buffer and clear pointers

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 495  :         if (_Mystate & _Allocated) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@Tidy

; 496  :             _Al.deallocate(_Ptr_traits::pointer_to(*_Mysb::eback()),

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	SHORT $LN4@Tidy
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv88[rsp], rax
	jmp	SHORT $LN5@Tidy
$LN4@Tidy:
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv88[rsp], rax
$LN5@Tidy:
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv88[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	mov	QWORD PTR tv128[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, rax
	call	?pointer_to@?$pointer_traits@PEA_W@std@@SAPEA_WAEA_W@Z ; std::pointer_traits<wchar_t *>::pointer_to
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 116				; 00000074H
	mov	rdx, QWORD PTR tv128[rsp]
	mov	r8, rdx
	mov	rdx, rax
	call	?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ; std::allocator<wchar_t>::deallocate
$LN2@Tidy:

; 497  :                 static_cast<typename allocator_traits<allocator_type>::size_type>(
; 498  :                     (_Mysb::pptr() ? _Mysb::epptr() : _Mysb::egptr()) - _Mysb::eback()));
; 499  :         }
; 500  : 
; 501  :         _Mysb::setg(nullptr, nullptr, nullptr);

	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z

; 502  :         _Mysb::setp(nullptr, nullptr);

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W0@Z

; 503  :         _Seekhigh = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+104], 0

; 504  :         _Mystate &= ~_Allocated;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, -2
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+112], eax

; 505  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
_Off$ = 32
_Gptr_old$ = 40
_Pptr_old$ = 48
_Seeklow$ = 56
_Seekdist$ = 64
_Newptr$ = 72
tv81 = 80
this$ = 112
__$ReturnUdt$ = 120
_Pos$ = 128
_Mode$ = 136
?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos, COMDAT

; 399  :     virtual pos_type seekpos(pos_type _Pos, ios_base::openmode _Mode = ios_base::in | ios_base::out) {

$LN12:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 400  :         // change position to _Pos, according to _Mode
; 401  :         const auto _Off      = static_cast<streamoff>(_Pos);

	mov	rcx, QWORD PTR _Pos$[rsp]
	call	??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ	; std::fpos<_Mbstatet>::operator __int64
	mov	QWORD PTR _Off$[rsp], rax

; 402  :         const auto _Gptr_old = _Mysb::gptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR _Gptr_old$[rsp], rax

; 403  :         const auto _Pptr_old = (_Mystate & _Constant) ? nullptr : _Mysb::pptr();

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN10@seekpos
	mov	QWORD PTR tv81[rsp], 0
	jmp	SHORT $LN11@seekpos
$LN10@seekpos:
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv81[rsp], rax
$LN11@seekpos:
	mov	rax, QWORD PTR tv81[rsp]
	mov	QWORD PTR _Pptr_old$[rsp], rax

; 404  :         if (_Pptr_old && _Seekhigh < _Pptr_old) { // update high-water pointer

	cmp	QWORD PTR _Pptr_old$[rsp], 0
	je	SHORT $LN2@seekpos
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Pptr_old$[rsp]
	cmp	QWORD PTR [rax+104], rcx
	jae	SHORT $LN2@seekpos

; 405  :             _Seekhigh = _Pptr_old;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Pptr_old$[rsp]
	mov	QWORD PTR [rax+104], rcx
$LN2@seekpos:

; 406  :         }
; 407  : 
; 408  :         const auto _Seeklow  = _Mysb::eback();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR _Seeklow$[rsp], rax

; 409  :         const auto _Seekdist = _Seekhigh - _Seeklow;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Seeklow$[rsp]
	mov	rax, QWORD PTR [rax+104]
	sub	rax, rcx
	sar	rax, 1
	mov	QWORD PTR _Seekdist$[rsp], rax

; 410  :         if (static_cast<unsigned long long>(_Off) > static_cast<unsigned long long>(_Seekdist)) {

	mov	rax, QWORD PTR _Seekdist$[rsp]
	cmp	QWORD PTR _Off$[rsp], rax
	jbe	SHORT $LN3@seekpos

; 411  :             return pos_type(off_type(-1));

	mov	rdx, -1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@seekpos
$LN3@seekpos:

; 412  :         }
; 413  : 
; 414  :         if (_Off != 0 && (((_Mode & ios_base::in) && !_Gptr_old) || ((_Mode & ios_base::out) && !_Pptr_old))) {

	cmp	QWORD PTR _Off$[rsp], 0
	je	SHORT $LN4@seekpos
	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN6@seekpos
	cmp	QWORD PTR _Gptr_old$[rsp], 0
	je	SHORT $LN5@seekpos
$LN6@seekpos:
	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN4@seekpos
	cmp	QWORD PTR _Pptr_old$[rsp], 0
	jne	SHORT $LN4@seekpos
$LN5@seekpos:

; 415  :             return pos_type(off_type(-1));

	mov	rdx, -1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@seekpos
$LN4@seekpos:

; 416  :         }
; 417  : 
; 418  :         const auto _Newptr = _Seeklow + _Off; // may perform nullptr + 0

	mov	rax, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR _Off$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR _Newptr$[rsp], rax

; 419  :         if ((_Mode & ios_base::in) && _Gptr_old) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN7@seekpos
	cmp	QWORD PTR _Gptr_old$[rsp], 0
	je	SHORT $LN7@seekpos

; 420  :             _Mysb::setg(_Seeklow, _Newptr, _Seekhigh);

	mov	rax, QWORD PTR this$[rsp]
	mov	r9, QWORD PTR [rax+104]
	mov	r8, QWORD PTR _Newptr$[rsp]
	mov	rdx, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z
$LN7@seekpos:

; 421  :         }
; 422  : 
; 423  :         if ((_Mode & ios_base::out) && _Pptr_old) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN8@seekpos
	cmp	QWORD PTR _Pptr_old$[rsp], 0
	je	SHORT $LN8@seekpos

; 424  :             _Mysb::setp(_Seeklow, _Newptr, _Mysb::epptr());

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	r9, rax
	mov	r8, QWORD PTR _Newptr$[rsp]
	mov	rdx, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z
$LN8@seekpos:

; 425  :         }
; 426  : 
; 427  :         return pos_type(_Off);

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@seekpos:

; 428  :     }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
_Gptr_old$ = 32
_Pptr_old$ = 40
_Seeklow$ = 48
_Seekdist$ = 56
_Newoff$ = 64
_Both$1 = 72
_Newptr$ = 80
tv79 = 88
tv93 = 96
this$ = 128
__$ReturnUdt$ = 136
_Off$ = 144
_Way$ = 152
_Mode$ = 160
?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff, COMDAT

; 338  :         off_type _Off, ios_base::seekdir _Way, ios_base::openmode _Mode = ios_base::in | ios_base::out) {

$LN25:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H

; 339  :         // change position by _Off, according to _Way, _Mode
; 340  :         const auto _Gptr_old = _Mysb::gptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR _Gptr_old$[rsp], rax

; 341  :         const auto _Pptr_old = (_Mystate & _Constant) ? nullptr : _Mysb::pptr();

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN23@seekoff
	mov	QWORD PTR tv79[rsp], 0
	jmp	SHORT $LN24@seekoff
$LN23@seekoff:
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv79[rsp], rax
$LN24@seekoff:
	mov	rax, QWORD PTR tv79[rsp]
	mov	QWORD PTR _Pptr_old$[rsp], rax

; 342  :         if (_Pptr_old && _Seekhigh < _Pptr_old) { // update high-water pointer

	cmp	QWORD PTR _Pptr_old$[rsp], 0
	je	SHORT $LN4@seekoff
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Pptr_old$[rsp]
	cmp	QWORD PTR [rax+104], rcx
	jae	SHORT $LN4@seekoff

; 343  :             _Seekhigh = _Pptr_old;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Pptr_old$[rsp]
	mov	QWORD PTR [rax+104], rcx
$LN4@seekoff:

; 344  :         }
; 345  : 
; 346  :         const auto _Seeklow  = _Mysb::eback();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR _Seeklow$[rsp], rax

; 347  :         const auto _Seekdist = _Seekhigh - _Seeklow;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Seeklow$[rsp]
	mov	rax, QWORD PTR [rax+104]
	sub	rax, rcx
	sar	rax, 1
	mov	QWORD PTR _Seekdist$[rsp], rax

; 348  :         off_type _Newoff;
; 349  :         switch (_Way) {

	mov	eax, DWORD PTR _Way$[rsp]
	mov	DWORD PTR tv93[rsp], eax
	cmp	DWORD PTR tv93[rsp], 0
	je	SHORT $LN5@seekoff
	cmp	DWORD PTR tv93[rsp], 1
	je	SHORT $LN7@seekoff
	cmp	DWORD PTR tv93[rsp], 2
	je	SHORT $LN6@seekoff
	jmp	$LN15@seekoff
$LN5@seekoff:

; 350  :         case ios_base::beg:
; 351  :             _Newoff = 0;

	mov	QWORD PTR _Newoff$[rsp], 0

; 352  :             break;

	jmp	$LN2@seekoff
$LN6@seekoff:

; 353  :         case ios_base::end:
; 354  :             _Newoff = _Seekdist;

	mov	rax, QWORD PTR _Seekdist$[rsp]
	mov	QWORD PTR _Newoff$[rsp], rax

; 355  :             break;

	jmp	$LN2@seekoff
$LN7@seekoff:

; 356  :         case ios_base::cur:
; 357  :             {
; 358  :                 constexpr auto _Both = ios_base::in | ios_base::out;

	mov	DWORD PTR _Both$1[rsp], 3

; 359  :                 if ((_Mode & _Both)
; 360  :                     != _Both) { // prohibited by N4727 [stringbuf.virtuals] Table 107 "seekoff positioning"

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 3
	cmp	eax, 3
	je	SHORT $LN8@seekoff

; 361  :                     if (_Mode & ios_base::in) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN9@seekoff

; 362  :                         if (_Gptr_old || !_Seeklow) {

	cmp	QWORD PTR _Gptr_old$[rsp], 0
	jne	SHORT $LN12@seekoff
	cmp	QWORD PTR _Seeklow$[rsp], 0
	jne	SHORT $LN11@seekoff
$LN12@seekoff:

; 363  :                             _Newoff = _Gptr_old - _Seeklow;

	mov	rax, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR _Gptr_old$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	mov	QWORD PTR _Newoff$[rsp], rax

; 364  :                             break;

	jmp	SHORT $LN2@seekoff
$LN11@seekoff:

; 365  :                         }

	jmp	SHORT $LN10@seekoff
$LN9@seekoff:

; 366  :                     } else if ((_Mode & ios_base::out) && (_Pptr_old || !_Seeklow)) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN13@seekoff
	cmp	QWORD PTR _Pptr_old$[rsp], 0
	jne	SHORT $LN14@seekoff
	cmp	QWORD PTR _Seeklow$[rsp], 0
	jne	SHORT $LN13@seekoff
$LN14@seekoff:

; 367  :                         _Newoff = _Pptr_old - _Seeklow;

	mov	rax, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR _Pptr_old$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	mov	QWORD PTR _Newoff$[rsp], rax

; 368  :                         break;

	jmp	SHORT $LN2@seekoff
$LN13@seekoff:
$LN10@seekoff:
$LN8@seekoff:
$LN15@seekoff:

; 369  :                     }
; 370  :                 }
; 371  :             }
; 372  : 
; 373  :             // fallthrough
; 374  :         default:
; 375  :             return pos_type(off_type(-1));

	mov	rdx, -1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@seekoff
$LN2@seekoff:

; 376  :         }
; 377  : 
; 378  :         if (static_cast<unsigned long long>(_Off) + _Newoff > static_cast<unsigned long long>(_Seekdist)) {

	mov	rax, QWORD PTR _Newoff$[rsp]
	mov	rcx, QWORD PTR _Off$[rsp]
	add	rcx, rax
	mov	rax, rcx
	cmp	rax, QWORD PTR _Seekdist$[rsp]
	jbe	SHORT $LN16@seekoff

; 379  :             return pos_type(off_type(-1));

	mov	rdx, -1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@seekoff
$LN16@seekoff:

; 380  :         }
; 381  : 
; 382  :         _Off += _Newoff;

	mov	rax, QWORD PTR _Newoff$[rsp]
	mov	rcx, QWORD PTR _Off$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Off$[rsp], rax

; 383  :         if (_Off != 0 && (((_Mode & ios_base::in) && !_Gptr_old) || ((_Mode & ios_base::out) && !_Pptr_old))) {

	cmp	QWORD PTR _Off$[rsp], 0
	je	SHORT $LN17@seekoff
	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN19@seekoff
	cmp	QWORD PTR _Gptr_old$[rsp], 0
	je	SHORT $LN18@seekoff
$LN19@seekoff:
	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN17@seekoff
	cmp	QWORD PTR _Pptr_old$[rsp], 0
	jne	SHORT $LN17@seekoff
$LN18@seekoff:

; 384  :             return pos_type(off_type(-1));

	mov	rdx, -1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@seekoff
$LN17@seekoff:

; 385  :         }
; 386  : 
; 387  :         const auto _Newptr = _Seeklow + _Off; // may perform nullptr + 0

	mov	rax, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR _Off$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR _Newptr$[rsp], rax

; 388  :         if ((_Mode & ios_base::in) && _Gptr_old) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN20@seekoff
	cmp	QWORD PTR _Gptr_old$[rsp], 0
	je	SHORT $LN20@seekoff

; 389  :             _Mysb::setg(_Seeklow, _Newptr, _Seekhigh);

	mov	rax, QWORD PTR this$[rsp]
	mov	r9, QWORD PTR [rax+104]
	mov	r8, QWORD PTR _Newptr$[rsp]
	mov	rdx, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z
$LN20@seekoff:

; 390  :         }
; 391  : 
; 392  :         if ((_Mode & ios_base::out) && _Pptr_old) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN21@seekoff
	cmp	QWORD PTR _Pptr_old$[rsp], 0
	je	SHORT $LN21@seekoff

; 393  :             _Mysb::setp(_Seeklow, _Newptr, _Mysb::epptr());

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	r9, rax
	mov	r8, QWORD PTR _Newptr$[rsp]
	mov	rdx, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z
$LN21@seekoff:

; 394  :         }
; 395  : 
; 396  :         return pos_type(_Off);

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@seekoff:

; 397  :     }

	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ
_TEXT	SEGMENT
_Gptr$ = 32
_Pptr$ = 56
_Local_highwater$ = 72
tv142 = 80
this$ = 112
?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow, COMDAT

; 311  :     virtual int_type underflow() { // get an element from stream, but don't point past it

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 312  :         const auto _Gptr = _Mysb::gptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR _Gptr$[rsp], rax

; 313  :         if (!_Gptr) { // no character buffer, fail

	cmp	QWORD PTR _Gptr$[rsp], 0
	jne	SHORT $LN2@underflow

; 314  :             return _Traits::eof();

	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	jmp	$LN1@underflow
$LN2@underflow:

; 315  :         }
; 316  : 
; 317  :         if (_Gptr < _Mysb::egptr()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	cmp	QWORD PTR _Gptr$[rsp], rax
	jae	SHORT $LN3@underflow

; 318  :             return _Traits::to_int_type(*_Gptr);

	mov	rcx, QWORD PTR _Gptr$[rsp]
	call	?to_int_type@?$_WChar_traits@_W@std@@SAGAEB_W@Z ; std::_WChar_traits<wchar_t>::to_int_type
	jmp	$LN1@underflow
$LN3@underflow:

; 319  :         }
; 320  : 
; 321  :         // try to add initialized characters from the put area into the get area
; 322  :         const auto _Pptr = _Mysb::pptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR _Pptr$[rsp], rax

; 323  :         if (!_Pptr || (_Mystate & _Noread)) { // no put area or read disallowed

	cmp	QWORD PTR _Pptr$[rsp], 0
	je	SHORT $LN5@underflow
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN4@underflow
$LN5@underflow:

; 324  :             return _Traits::eof();

	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	jmp	$LN1@underflow
$LN4@underflow:

; 325  :         }
; 326  : 
; 327  :         const auto _Local_highwater = (_STD max)(_Seekhigh, _Pptr);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 104				; 00000068H
	lea	rdx, QWORD PTR _Pptr$[rsp]
	mov	rcx, rax
	call	??$max@PEA_W@std@@YAAEBQEA_WAEBQEA_W0@Z	; std::max<wchar_t *>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Local_highwater$[rsp], rax

; 328  :         if (_Local_highwater <= _Gptr) { // nothing in the put area to take

	mov	rax, QWORD PTR _Gptr$[rsp]
	cmp	QWORD PTR _Local_highwater$[rsp], rax
	ja	SHORT $LN6@underflow

; 329  :             return _Traits::eof();

	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	jmp	SHORT $LN1@underflow
$LN6@underflow:

; 330  :         }
; 331  : 
; 332  :         _Seekhigh = _Local_highwater;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Local_highwater$[rsp]
	mov	QWORD PTR [rax+104], rcx

; 333  :         _Mysb::setg(_Mysb::eback(), _Mysb::gptr(), _Local_highwater);

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv142[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	r9, QWORD PTR _Local_highwater$[rsp]
	mov	rcx, QWORD PTR tv142[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z

; 334  :         return _Traits::to_int_type(*_Mysb::gptr());

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, rax
	call	?to_int_type@?$_WChar_traits@_W@std@@SAGAEB_W@Z ; std::_WChar_traits<wchar_t>::to_int_type
$LN1@underflow:

; 335  :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z
_TEXT	SEGMENT
_Gptr$ = 32
$T1 = 40
$T2 = 42
$T3 = 44
tv143 = 46
this$ = 64
_Meta$ = 72
?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail, COMDAT

; 294  :     virtual int_type pbackfail(int_type _Meta = _Traits::eof()) { // put an element back to stream

$LN6:
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 295  :         const auto _Gptr = _Mysb::gptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR _Gptr$[rsp], rax

; 296  :         if (!_Gptr || _Gptr <= _Mysb::eback()
; 297  :             || (!_Traits::eq_int_type(_Traits::eof(), _Meta) && !_Traits::eq(_Traits::to_char_type(_Meta), _Gptr[-1])

	cmp	QWORD PTR _Gptr$[rsp], 0
	je	SHORT $LN3@pbackfail
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	cmp	QWORD PTR _Gptr$[rsp], rax
	jbe	SHORT $LN3@pbackfail
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T1[rsp], ax
	lea	rdx, QWORD PTR _Meta$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@pbackfail
	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?to_char_type@?$_WChar_traits@_W@std@@SA_WAEBG@Z ; std::_WChar_traits<wchar_t>::to_char_type
	mov	WORD PTR $T2[rsp], ax
	mov	eax, 2
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Gptr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	?eq@?$_WChar_traits@_W@std@@SA_NAEB_W0@Z ; std::_WChar_traits<wchar_t>::eq
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@pbackfail
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN2@pbackfail
$LN3@pbackfail:

; 298  :                 && (_Mystate & _Constant))) { // can't put back, fail
; 299  :             return _Traits::eof();

	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	jmp	SHORT $LN1@pbackfail
$LN2@pbackfail:

; 300  :         }
; 301  : 
; 302  :         // back up one position and store put-back character
; 303  :         _Mysb::gbump(-1);

	mov	edx, -1
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXH@Z

; 304  :         if (!_Traits::eq_int_type(_Traits::eof(), _Meta)) {

	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T3[rsp], ax
	lea	rdx, QWORD PTR _Meta$[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@pbackfail

; 305  :             *_Mysb::gptr() = _Traits::to_char_type(_Meta);

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?to_char_type@?$_WChar_traits@_W@std@@SA_WAEBG@Z ; std::_WChar_traits<wchar_t>::to_char_type
	mov	WORD PTR tv143[rsp], ax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	movzx	ecx, WORD PTR tv143[rsp]
	mov	WORD PTR [rax], cx
$LN4@pbackfail:

; 306  :         }
; 307  : 
; 308  :         return _Traits::not_eof(_Meta);

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?not_eof@?$_WChar_traits@_W@std@@SAGAEBG@Z ; std::_WChar_traits<wchar_t>::not_eof
$LN1@pbackfail:

; 309  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z
_TEXT	SEGMENT
_Pptr$ = 32
_Epptr$ = 40
_Oldsize$ = 48
_Oldptr$ = 56
_Newsize$ = 64
_Newptr$ = 72
_New_pnext$ = 80
$T1 = 88
tv217 = 90
tv215 = 92
this$ = 112
_Meta$ = 120
?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow, COMDAT

; 237  :     virtual int_type overflow(int_type _Meta = _Traits::eof()) { // put an element to stream

$LN16:
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 238  :         if (_Mystate & _Constant) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN2@overflow

; 239  :             return _Traits::eof(); // array nonmutable, fail

	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	jmp	$LN1@overflow
$LN2@overflow:

; 240  :         }
; 241  : 
; 242  :         if (_Traits::eq_int_type(_Traits::eof(), _Meta)) {

	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T1[rsp], ax
	lea	rdx, QWORD PTR _Meta$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@overflow

; 243  :             return _Traits::not_eof(_Meta); // EOF, return success code

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?not_eof@?$_WChar_traits@_W@std@@SAGAEBG@Z ; std::_WChar_traits<wchar_t>::not_eof
	jmp	$LN1@overflow
$LN3@overflow:

; 244  :         }
; 245  : 
; 246  :         const auto _Pptr  = _Mysb::pptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR _Pptr$[rsp], rax

; 247  :         const auto _Epptr = _Mysb::epptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR _Epptr$[rsp], rax

; 248  :         if (_Pptr && _Pptr < _Epptr) { // room in buffer, store it

	cmp	QWORD PTR _Pptr$[rsp], 0
	je	SHORT $LN4@overflow
	mov	rax, QWORD PTR _Epptr$[rsp]
	cmp	QWORD PTR _Pptr$[rsp], rax
	jae	SHORT $LN4@overflow

; 249  :             *_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?to_char_type@?$_WChar_traits@_W@std@@SA_WAEBG@Z ; std::_WChar_traits<wchar_t>::to_char_type
	mov	WORD PTR tv217[rsp], ax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAPEA_WXZ
	movzx	ecx, WORD PTR tv217[rsp]
	mov	WORD PTR [rax], cx

; 250  :             _Seekhigh        = _Pptr + 1;

	mov	rax, QWORD PTR _Pptr$[rsp]
	add	rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+104], rax

; 251  :             return _Meta;

	movzx	eax, WORD PTR _Meta$[rsp]
	jmp	$LN1@overflow
$LN4@overflow:

; 252  :         }
; 253  : 
; 254  :         // grow buffer and store element
; 255  :         size_t _Oldsize    = 0;

	mov	QWORD PTR _Oldsize$[rsp], 0

; 256  :         const auto _Oldptr = _Mysb::eback();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR _Oldptr$[rsp], rax

; 257  :         if (_Pptr) {

	cmp	QWORD PTR _Pptr$[rsp], 0
	je	SHORT $LN5@overflow

; 258  :             _Oldsize = static_cast<size_t>(_Epptr - _Oldptr);

	mov	rax, QWORD PTR _Oldptr$[rsp]
	mov	rcx, QWORD PTR _Epptr$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	mov	QWORD PTR _Oldsize$[rsp], rax
$LN5@overflow:

; 259  :         }
; 260  : 
; 261  :         size_t _Newsize;
; 262  :         if (_Oldsize < _MINSIZE) {

	cmp	QWORD PTR _Oldsize$[rsp], 32		; 00000020H
	jae	SHORT $LN6@overflow

; 263  :             _Newsize = _MINSIZE;

	mov	QWORD PTR _Newsize$[rsp], 32		; 00000020H
	jmp	SHORT $LN7@overflow
$LN6@overflow:

; 264  :         } else if (_Oldsize < INT_MAX / 2) { // grow by 50 percent

	cmp	QWORD PTR _Oldsize$[rsp], 1073741823	; 3fffffffH
	jae	SHORT $LN8@overflow

; 265  :             _Newsize = _Oldsize << 1;

	mov	rax, QWORD PTR _Oldsize$[rsp]
	add	rax, rax
	mov	QWORD PTR _Newsize$[rsp], rax
	jmp	SHORT $LN9@overflow
$LN8@overflow:

; 266  :         } else if (_Oldsize < INT_MAX) {

	cmp	QWORD PTR _Oldsize$[rsp], 2147483647	; 7fffffffH
	jae	SHORT $LN10@overflow

; 267  :             _Newsize = INT_MAX;

	mov	QWORD PTR _Newsize$[rsp], 2147483647	; 7fffffffH

; 268  :         } else { // buffer can't grow, fail

	jmp	SHORT $LN11@overflow
$LN10@overflow:

; 269  :             return _Traits::eof();

	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	jmp	$LN1@overflow
$LN11@overflow:
$LN9@overflow:
$LN7@overflow:

; 270  :         }
; 271  : 
; 272  :         const auto _Newptr = _Unfancy(_Al.allocate(_Newsize));

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 116				; 00000074H
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, rax
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
	mov	rcx, rax
	call	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z	; std::_Unfancy<wchar_t>
	mov	QWORD PTR _Newptr$[rsp], rax

; 273  :         _Traits::copy(_Newptr, _Oldptr, _Oldsize);

	mov	r8, QWORD PTR _Oldsize$[rsp]
	mov	rdx, QWORD PTR _Oldptr$[rsp]
	mov	rcx, QWORD PTR _Newptr$[rsp]
	call	?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_Char_traits<wchar_t,unsigned short>::copy

; 274  : 
; 275  :         const auto _New_pnext = _Newptr + _Oldsize;

	mov	rax, QWORD PTR _Newptr$[rsp]
	mov	rcx, QWORD PTR _Oldsize$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR _New_pnext$[rsp], rax

; 276  :         _Seekhigh             = _New_pnext + 1; // to include _Meta

	mov	rax, QWORD PTR _New_pnext$[rsp]
	add	rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+104], rax

; 277  : 
; 278  :         _Mysb::setp(_Newptr, _New_pnext, _Newptr + _Newsize);

	mov	rax, QWORD PTR _Newptr$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	r9, rax
	mov	r8, QWORD PTR _New_pnext$[rsp]
	mov	rdx, QWORD PTR _Newptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z

; 279  :         if (_Mystate & _Noread) { // maintain eback() == allocated pointer invariant

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN12@overflow

; 280  :             _Mysb::setg(_Newptr, nullptr, _Newptr);

	mov	r9, QWORD PTR _Newptr$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Newptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z

; 281  :         } else { // if readable, set the get area to initialized region

	jmp	SHORT $LN13@overflow
$LN12@overflow:

; 282  :             _Mysb::setg(_Newptr, _Newptr + (_Mysb::gptr() - _Oldptr), _Seekhigh);

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	sub	rax, QWORD PTR _Oldptr$[rsp]
	sar	rax, 1
	mov	rcx, QWORD PTR _Newptr$[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	rcx, QWORD PTR this$[rsp]
	mov	r9, QWORD PTR [rcx+104]
	mov	r8, rax
	mov	rdx, QWORD PTR _Newptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z
$LN13@overflow:

; 283  :         }
; 284  : 
; 285  :         if (_Mystate & _Allocated) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN14@overflow

; 286  :             _Al.deallocate(_Ptr_traits::pointer_to(*_Oldptr), _Oldsize);

	mov	rcx, QWORD PTR _Oldptr$[rsp]
	call	?pointer_to@?$pointer_traits@PEA_W@std@@SAPEA_WAEA_W@Z ; std::pointer_traits<wchar_t *>::pointer_to
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 116				; 00000074H
	mov	r8, QWORD PTR _Oldsize$[rsp]
	mov	rdx, rax
	call	?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ; std::allocator<wchar_t>::deallocate
$LN14@overflow:

; 287  :         }
; 288  : 
; 289  :         _Mystate |= _Allocated;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	or	eax, 1
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+112], eax

; 290  :         *_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?to_char_type@?$_WChar_traits@_W@std@@SA_WAEBG@Z ; std::_WChar_traits<wchar_t>::to_char_type
	mov	WORD PTR tv215[rsp], ax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAPEA_WXZ
	movzx	ecx, WORD PTR tv215[rsp]
	mov	WORD PTR [rax], cx

; 291  :         return _Meta;

	movzx	eax, WORD PTR _Meta$[rsp]
$LN1@overflow:

; 292  :     }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
_Result$ = 40
_View$ = 104
$T5 = 144
__$ArrayPad$ = 152
this$ = 176
__$ReturnUdt$ = 184
?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str, COMDAT

; 156  :     {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T5[rsp], 0

; 157  :         _Mystr _Result(_Al);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 116				; 00000074H
	mov	rdx, rax
	lea	rcx, QWORD PTR _Result$[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 158  :         const auto _View = _Get_buffer_view();

	lea	rdx, QWORD PTR _View$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Get_buffer_view

; 159  :         if (_View._Ptr) {

	cmp	QWORD PTR _View$[rsp], 0
	je	SHORT $LN2@str

; 160  :             _Result.assign(_View._Ptr, _View._Size);

	mov	r8, QWORD PTR _View$[rsp+8]
	mov	rdx, QWORD PTR _View$[rsp]
	lea	rcx, QWORD PTR _Result$[rsp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN2@str:

; 161  :         }
; 162  :         return _Result;

	lea	rdx, QWORD PTR _Result$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR _Result$[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 163  :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
_View$ = 104
$T5 = 144
__$ArrayPad$ = 152
this$ = 176
__$ReturnUdt$ = 184
?dtor$0@?0??str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Result$[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
_View$ = 104
$T5 = 144
__$ArrayPad$ = 152
this$ = 176
__$ReturnUdt$ = 184
?dtor$0@?0??str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Result$[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ
_TEXT	SEGMENT
_Result$ = 40
_Base$4 = 72
_Base$5 = 80
$T6 = 88
this$ = 128
__$ReturnUdt$ = 136
?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Get_buffer_view, COMDAT

; 133  :     _NODISCARD _Buffer_view _Get_buffer_view() const noexcept {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]

; 134  :         _Buffer_view _Result{};

	lea	rax, QWORD PTR _Result$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 24
	rep stosb

; 135  :         if ((!(_Mystate & _Constant) || (_Mystate & _From_rvalue)) && _Mysb::pptr()) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN4@Get_buffer
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 32					; 00000020H
	test	eax, eax
	je	$LN2@Get_buffer
$LN4@Get_buffer:
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	SHORT $LN2@Get_buffer

; 136  :             // writable, make string view from write buffer
; 137  :             const auto _Base = _Mysb::pbase();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR _Base$4[rsp], rax

; 138  :             _Result._Ptr     = _Base;

	mov	rax, QWORD PTR _Base$4[rsp]
	mov	QWORD PTR _Result$[rsp], rax

; 139  :             _Result._Size    = static_cast<_Mysize_type>((_STD max)(_Mysb::pptr(), _Seekhigh) - _Base);

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR $T6[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 104				; 00000068H
	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rsp]
	call	??$max@PEA_W@std@@YAAEBQEA_WAEBQEA_W0@Z	; std::max<wchar_t *>
	mov	rcx, QWORD PTR _Base$4[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 1
	mov	QWORD PTR _Result$[rsp+8], rax

; 140  :             _Result._Res     = static_cast<_Mysize_type>(_Mysb::epptr() - _Base);

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	sub	rax, QWORD PTR _Base$4[rsp]
	sar	rax, 1
	mov	QWORD PTR _Result$[rsp+16], rax
	jmp	SHORT $LN3@Get_buffer
$LN2@Get_buffer:

; 141  :         } else if (!(_Mystate & _Noread) && _Mysb::gptr()) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@Get_buffer
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	SHORT $LN3@Get_buffer

; 142  :             // readable, make string view from read buffer
; 143  :             const auto _Base = _Mysb::eback();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR _Base$5[rsp], rax

; 144  :             _Result._Ptr     = _Base;

	mov	rax, QWORD PTR _Base$5[rsp]
	mov	QWORD PTR _Result$[rsp], rax

; 145  :             _Result._Size    = static_cast<_Mysize_type>(_Mysb::egptr() - _Base);

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	sub	rax, QWORD PTR _Base$5[rsp]
	sar	rax, 1
	mov	QWORD PTR _Result$[rsp+8], rax

; 146  :             _Result._Res     = _Result._Size;

	mov	rax, QWORD PTR _Result$[rsp+8]
	mov	QWORD PTR _Result$[rsp+16], rax
$LN3@Get_buffer:

; 147  :         }
; 148  :         return _Result;

	lea	rax, QWORD PTR _Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 149  :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
?_Get_buffer_view@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AU_Buffer_view@12@XZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Get_buffer_view
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 110  :     virtual ~basic_stringbuf() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
	mov	QWORD PTR [rax], rcx

; 111  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 112  :     }

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 48
_Mode$ = 56
??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 38   :     explicit basic_stringbuf(ios_base::openmode _Mode) : _Seekhigh(nullptr), _Mystate(_Getstate(_Mode)), _Al() {}

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+104], 0
	mov	ecx, DWORD PTR _Mode$[rsp]
	call	?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+112], eax
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 116				; 00000074H
	mov	rcx, rax
	call	??0?$allocator@_W@std@@QEAA@XZ		; std::allocator<wchar_t>::allocator<wchar_t>
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$ = 56
?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$ = 56
?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str, COMDAT

; 746  :     {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 747  :         return _Stringbuffer.str();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, rax
	call	?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 748  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 735  :     virtual ~basic_ostringstream() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax-136]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdx, OFFSET FLAT:??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
	mov	QWORD PTR [rcx+rax-136], rdx
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax-136]
	movsxd	rax, DWORD PTR [rax+4]
	sub	rax, 136				; 00000088H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx-136]
	movsxd	rcx, DWORD PTR [rcx+4]
	mov	rdx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rdx+rcx-140], eax
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 128				; 00000080H
	mov	rcx, rax
	call	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 120				; 00000078H
	mov	rcx, rax
	call	QWORD PTR __imp_??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
$initVBases$ = 72
??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 680  :     basic_ostringstream() : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(ios_base::out) {}

$LN8:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0
	cmp	DWORD PTR $initVBases$[rsp], 0
	je	SHORT $LN2@basic_ostr
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_8?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 136				; 00000088H
	mov	rcx, rax
	call	QWORD PTR __imp_??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IEAA@XZ
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
$LN2@basic_ostr:
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??$addressof@V?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::addressof<std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@PEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@_N@Z
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdx, OFFSET FLAT:??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
	mov	QWORD PTR [rcx+rax], rdx
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	sub	rax, 136				; 00000088H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	movsxd	rcx, DWORD PTR [rcx+4]
	mov	rdx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rdx+rcx-4], eax
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	edx, 2
	mov	rcx, rax
	call	??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
$initVBases$ = 72
?dtor$0@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
$initVBases$ = 72
?dtor$1@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 16
	call	QWORD PTR __imp_??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
$initVBases$ = 72
?dtor$0@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
$initVBases$ = 72
?dtor$1@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 16
	call	QWORD PTR __imp_??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 16
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool, COMDAT

; 124  :         explicit __CLR_OR_THIS_CALL operator bool() const {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 125  :             return _Ok;

	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+8]

; 126  :         }

	pop	rdi
	ret	0
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Zero_uncaught_exceptions$ = 32
tv72 = 33
this$ = 64
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry, COMDAT

; 109  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 110  : #if !_HAS_EXCEPTIONS
; 111  :             const bool _Zero_uncaught_exceptions = true;
; 112  : #elif _HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 113  :             const bool _Zero_uncaught_exceptions = !_STD uncaught_exception(); // TRANSITION, ArchivedOS-12000909

	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@sentry
	mov	BYTE PTR tv72[rsp], 1
	jmp	SHORT $LN5@sentry
$LN4@sentry:
	mov	BYTE PTR tv72[rsp], 0
$LN5@sentry:
	movzx	eax, BYTE PTR tv72[rsp]
	mov	BYTE PTR _Zero_uncaught_exceptions$[rsp], al

; 114  : #else // ^^^ _HAS_DEPRECATED_UNCAUGHT_EXCEPTION / !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION vvv
; 115  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;
; 116  : #endif // !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 117  : 
; 118  :             if (_Zero_uncaught_exceptions) {

	movzx	eax, BYTE PTR _Zero_uncaught_exceptions$[rsp]
	test	eax, eax
	je	SHORT $LN2@sentry

; 119  :                 this->_Myostr._Osfx();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ
$LN2@sentry:

; 120  :             }
; 121  :         }

	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
	npad	1
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Tied$ = 32
this$ = 64
_Ostr$ = 72
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry, COMDAT

; 92   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr) : _Sentry_base(_Ostr) {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdx, QWORD PTR _Ostr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
	npad	1

; 93   :             if (!_Ostr.good()) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry

; 94   :                 _Ok = false;

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+8], 0

; 95   :                 return;

	jmp	SHORT $LN1@sentry
$LN2@sentry:

; 96   :             }
; 97   : 
; 98   :             const auto _Tied = _Ostr.tie();

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR _Tied$[rsp], rax

; 99   :             if (!_Tied || _Tied == &_Ostr) {

	cmp	QWORD PTR _Tied$[rsp], 0
	je	SHORT $LN4@sentry
	mov	rax, QWORD PTR _Ostr$[rsp]
	cmp	QWORD PTR _Tied$[rsp], rax
	jne	SHORT $LN3@sentry
$LN4@sentry:

; 100  :                 _Ok = true;

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+8], 1

; 101  :                 return;

	jmp	SHORT $LN1@sentry
$LN3@sentry:

; 102  :             }
; 103  : 
; 104  :             _Tied->flush();

	mov	rcx, QWORD PTR _Tied$[rsp]
	call	QWORD PTR __imp_?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ

; 105  :             _Ok = _Ostr.good(); // store test only after flushing tie

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	BYTE PTR [rcx+8], al
$LN1@sentry:

; 106  :         }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Rdbuf$ = 32
tv72 = 40
this$ = 64
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base, COMDAT

; 78   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 79   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv72[rsp], rax
	mov	rax, QWORD PTR tv72[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR tv72[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR _Rdbuf$[rsp], rax

; 80   :             if (_Rdbuf) {

	cmp	QWORD PTR _Rdbuf$[rsp], 0
	je	SHORT $LN2@Sentry_bas

; 81   :                 _Rdbuf->_Unlock();

	mov	rax, QWORD PTR _Rdbuf$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Rdbuf$[rsp]
	call	QWORD PTR [rax+16]
	npad	1
$LN2@Sentry_bas:

; 82   :             }
; 83   :         }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Rdbuf$ = 32
tv73 = 40
this$ = 64
_Ostr$ = 72
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base, COMDAT

; 71   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	mov	QWORD PTR [rax], rcx

; 72   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv73[rsp], rax
	mov	rax, QWORD PTR tv73[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR tv73[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR _Rdbuf$[rsp], rax

; 73   :             if (_Rdbuf) {

	cmp	QWORD PTR _Rdbuf$[rsp], 0
	je	SHORT $LN2@Sentry_bas

; 74   :                 _Rdbuf->_Lock();

	mov	rax, QWORD PTR _Rdbuf$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Rdbuf$[rsp]
	call	QWORD PTR [rax+8]
$LN2@Sentry_bas:

; 75   :             }
; 76   :         }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z
_TEXT	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S17$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z PROC ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>, COMDAT

; 158  : 	{

$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]

; 159  : 		typename std::basic_ostream<CTy, CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 160  : 
; 161  : 		if(cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@print_vect

; 162  : 		{
; 163  : 			io::format_punct<CTy> const & fmt(io::get_facet<io::format_punct<CTy> >(os));

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	QWORD PTR fmt$6[rsp], rax

; 164  : 
; 165  : 			length_t const& components(type<V, T, P>::components);

	mov	DWORD PTR $S17$8[rsp], 4
	lea	rax, QWORD PTR $S17$8[rsp]
	mov	QWORD PTR components$7[rsp], rax

; 166  : 
; 167  : 			if(fmt.formatted)

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	eax, BYTE PTR [rax+16]
	test	eax, eax
	je	$LN9@print_vect

; 168  : 			{
; 169  : 				io::basic_state_saver<CTy> const bss(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR bss$9[rsp]
	call	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
	npad	1

; 170  : 
; 171  : 				os << std::fixed << std::right << std::setprecision(fmt.precision) << std::setfill(fmt.space) << fmt.delim_left;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ; std::setfill<char>
	mov	QWORD PTR tv137[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T13[rsp]
	call	?setprecision@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setprecision
	mov	QWORD PTR tv143[rsp], rax
	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?right@std@@YAAEAVios_base@1@AEAV21@@Z ; std::right
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv143[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv137[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
	mov	rcx, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rcx+29]
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 172  : 
; 173  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$10[rsp], 0
	jmp	SHORT $LN4@print_vect
$LN2@print_vect:
	mov	eax, DWORD PTR i$10[rsp]
	inc	eax
	mov	DWORD PTR i$10[rsp], eax
$LN4@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$10[rsp], eax
	jge	$LN3@print_vect

; 174  : 				{
; 175  : 					os << std::setw(fmt.width) << a[i];

	mov	edx, DWORD PTR i$10[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tquat@M$0A@@glm@@QEBAAEBMH@Z	; glm::tquat<float,0>::operator[]
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR fmt$6[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	edx, ecx
	lea	rcx, QWORD PTR $T14[rsp]
	call	?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z	; std::setw
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	rcx, QWORD PTR tv170[rsp]
	movss	xmm1, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z

; 176  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$10[rsp]
	je	SHORT $LN11@print_vect

; 177  : 						os << fmt.separator;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+28]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN11@print_vect:

; 178  : 				}

	jmp	$LN2@print_vect
$LN3@print_vect:

; 179  : 
; 180  : 				os << fmt.delim_right;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+30]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1

; 181  : 			}

	lea	rcx, QWORD PTR bss$9[rsp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	jmp	SHORT $LN8@print_vect
$LN9@print_vect:

; 182  : 			else
; 183  : 			{
; 184  : 				for(length_t i(0); i < components; ++i)

	mov	DWORD PTR i$11[rsp], 0
	jmp	SHORT $LN7@print_vect
$LN5@print_vect:
	mov	eax, DWORD PTR i$11[rsp]
	inc	eax
	mov	DWORD PTR i$11[rsp], eax
$LN7@print_vect:
	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$11[rsp], eax
	jge	SHORT $LN8@print_vect

; 185  : 				{
; 186  : 					os << a[i];

	mov	edx, DWORD PTR i$11[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	??A?$tquat@M$0A@@glm@@QEBAAEBMH@Z	; glm::tquat<float,0>::operator[]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z

; 187  : 
; 188  : 					if(components-1 != i)

	mov	rax, QWORD PTR components$7[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cmp	eax, DWORD PTR i$11[rsp]
	je	SHORT $LN12@print_vect

; 189  : 						os << fmt.space;

	mov	rax, QWORD PTR fmt$6[rsp]
	movzx	edx, BYTE PTR [rax+31]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN12@print_vect:

; 190  : 				}

	jmp	SHORT $LN5@print_vect
$LN8@print_vect:

; 191  : 			}
; 192  : 		}
; 193  : 
; 194  : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T15[rsp]

; 195  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z ENDP ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S17$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S17$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S17$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
fmt$6 = 72
components$7 = 80
$S17$8 = 100
bss$9 = 136
i$10 = 196
i$11 = 200
$T12 = 204
$T13 = 208
$T14 = 224
$T15 = 240
tv137 = 248
tv143 = 256
tv170 = 264
os$ = 288
a$ = 296
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA PROC ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bss$9[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z@4HA ENDP ; `glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
_TEXT	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 88
$T6 = 92
$T7 = 96
$T8 = 104
tv136 = 112
tv290 = 116
tv291 = 120
tv292 = 128
tv293 = 136
tv294 = 144
tv295 = 152
tv296 = 160
tv297 = 168
_Ostr$ = 192
_Data$ = 200
_Size$ = 208
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z PROC ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>, COMDAT

; 501  :     basic_ostream<_Elem, _Traits>& _Ostr, const _Elem* const _Data, const _SizeT _Size) {

$LN26:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]

; 502  :     // insert a character-type sequence into _Ostr as if through a basic_string copy
; 503  :     using _Ostr_t                    = basic_ostream<_Elem, _Traits>;
; 504  :     typename _Ostr_t::iostate _State = _Ostr_t::goodbit;

	mov	DWORD PTR _State$[rsp], 0

; 505  : 
; 506  :     _SizeT _Pad;
; 507  :     if (_Ostr.width() <= 0 || static_cast<_SizeT>(_Ostr.width()) <= _Size) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	test	rax, rax
	jle	SHORT $LN10@Insert_str
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, QWORD PTR _Size$[rsp]
	ja	SHORT $LN8@Insert_str
$LN10@Insert_str:

; 508  :         _Pad = 0;

	mov	QWORD PTR _Pad$[rsp], 0

; 509  :     } else {

	jmp	SHORT $LN9@Insert_str
$LN8@Insert_str:

; 510  :         _Pad = static_cast<_SizeT>(_Ostr.width()) - _Size;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	sub	rax, QWORD PTR _Size$[rsp]
	mov	QWORD PTR _Pad$[rsp], rax
$LN9@Insert_str:

; 511  :     }
; 512  : 
; 513  :     const typename _Ostr_t::sentry _Ok(_Ostr);

	mov	rdx, QWORD PTR _Ostr$[rsp]
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 514  : 
; 515  :     if (!_Ok) {

	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@Insert_str

; 516  :         _State |= _Ostr_t::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 517  :     } else { // state okay, insert characters

	jmp	$LN12@Insert_str
$LN11@Insert_str:

; 518  :         _TRY_IO_BEGIN
; 519  :         if ((_Ostr.flags() & _Ostr_t::adjustfield) != _Ostr_t::left) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv136[rsp], eax
	mov	eax, DWORD PTR tv136[rsp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN14@Insert_str

; 520  :             for (; 0 < _Pad; --_Pad) { // pad on left

	jmp	SHORT $LN4@Insert_str
$LN2@Insert_str:
	mov	rax, QWORD PTR _Pad$[rsp]
	dec	rax
	mov	QWORD PTR _Pad$[rsp], rax
$LN4@Insert_str:
	cmp	QWORD PTR _Pad$[rsp], 0
	jbe	$LN14@Insert_str

; 521  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv290[rsp], al
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv291[rsp], rax
	movzx	edx, BYTE PTR tv290[rsp]
	mov	rcx, QWORD PTR tv291[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv292[rsp], eax
	mov	eax, DWORD PTR tv292[rsp]
	mov	DWORD PTR $T4[rsp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[rsp], eax
	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR $T5[rsp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@Insert_str

; 522  :                     _State |= _Ostr_t::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 523  :                     break;

	jmp	SHORT $LN14@Insert_str
$LN15@Insert_str:

; 524  :                 }
; 525  :             }

	jmp	$LN2@Insert_str
$LN14@Insert_str:

; 526  :         }
; 527  : 
; 528  :         if (_State == _Ostr_t::goodbit
; 529  :             && _Ostr.rdbuf()->sputn(_Data, static_cast<streamsize>(_Size)) != static_cast<streamsize>(_Size)) {

	cmp	DWORD PTR _State$[rsp], 0
	jne	SHORT $LN16@Insert_str
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv293[rsp], rax
	mov	r8, QWORD PTR _Size$[rsp]
	mov	rdx, QWORD PTR _Data$[rsp]
	mov	rcx, QWORD PTR tv293[rsp]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	mov	QWORD PTR tv294[rsp], rax
	mov	rax, QWORD PTR _Size$[rsp]
	cmp	QWORD PTR tv294[rsp], rax
	je	SHORT $LN16@Insert_str

; 530  :             _State |= _Ostr_t::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 531  :         } else {

	jmp	$LN17@Insert_str
$LN16@Insert_str:

; 532  :             for (; 0 < _Pad; --_Pad) { // pad on right

	jmp	SHORT $LN7@Insert_str
$LN5@Insert_str:
	mov	rax, QWORD PTR _Pad$[rsp]
	dec	rax
	mov	QWORD PTR _Pad$[rsp], rax
$LN7@Insert_str:
	cmp	QWORD PTR _Pad$[rsp], 0
	jbe	$LN17@Insert_str

; 533  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv295[rsp], al
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv296[rsp], rax
	movzx	edx, BYTE PTR tv295[rsp]
	mov	rcx, QWORD PTR tv296[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv297[rsp], eax
	mov	eax, DWORD PTR tv297[rsp]
	mov	DWORD PTR $T6[rsp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T7[rsp], eax
	lea	rdx, QWORD PTR $T6[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@Insert_str

; 534  :                     _State |= _Ostr_t::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 535  :                     break;

	jmp	SHORT $LN17@Insert_str
$LN18@Insert_str:

; 536  :                 }
; 537  :             }

	jmp	$LN5@Insert_str
$LN17@Insert_str:

; 538  :         }
; 539  : 
; 540  :         _Ostr.width(0);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
	npad	1
	jmp	SHORT $LN12@Insert_str
$LN24@Insert_str:
$LN12@Insert_str:

; 541  :         _CATCH_IO_(_Ostr_t, _Ostr)
; 542  :     }
; 543  : 
; 544  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 545  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	QWORD PTR $T8[rsp], rax
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T8[rsp]

; 546  : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ENDP ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 88
$T6 = 92
$T7 = 96
$T8 = 104
tv136 = 112
tv290 = 116
tv291 = 120
tv292 = 128
tv293 = 136
tv294 = 144
tv295 = 152
tv296 = 160
tv297 = 168
_Ostr$ = 192
_Data$ = 200
_Size$ = 208
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 88
$T6 = 92
$T7 = 96
$T8 = 104
tv136 = 112
tv290 = 116
tv291 = 120
tv292 = 128
tv293 = 136
tv294 = 144
tv295 = 152
tv296 = 160
tv297 = 168
_Ostr$ = 192
_Data$ = 200
_Size$ = 208
?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$1

; 541  :         _CATCH_IO_(_Ostr_t, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN24@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 88
$T6 = 92
$T7 = 96
$T8 = 104
tv136 = 112
tv290 = 116
tv291 = 120
tv292 = 128
tv293 = 136
tv294 = 144
tv295 = 152
tv296 = 160
tv297 = 168
_Ostr$ = 192
_Data$ = 200
_Size$ = 208
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 88
$T6 = 92
$T7 = 96
$T8 = 104
tv136 = 112
tv290 = 116
tv291 = 120
tv292 = 128
tv293 = 136
tv294 = 144
tv295 = 152
tv296 = 160
tv297 = 168
_Ostr$ = 192
_Data$ = 200
_Size$ = 208
?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$1

; 541  :         _CATCH_IO_(_Ostr_t, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN24@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 136				; 00000088H
	mov	rcx, rax
	call	??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 136				; 00000088H
	mov	rcx, rax
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 136				; 00000088H
	mov	rcx, rax
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 136				; 00000088H
	mov	edx, 232				; 000000e8H
	mov	rcx, rax
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 136				; 00000088H
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 120				; 00000078H
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z
_TEXT	SEGMENT
_State$ = 0
_Mode$ = 32
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT

; 514  :     static int _Getstate(ios_base::openmode _Mode) { // convert open mode to stream state bits

$LN7:
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 16

; 515  :         int _State = 0;

	mov	DWORD PTR _State$[rsp], 0

; 516  :         if (!(_Mode & ios_base::in)) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN2@Getstate

; 517  :             _State |= _Noread;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN2@Getstate:

; 518  :         }
; 519  : 
; 520  :         if (!(_Mode & ios_base::out)) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	jne	SHORT $LN3@Getstate

; 521  :             _State |= _Constant;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 2
	mov	DWORD PTR _State$[rsp], eax
$LN3@Getstate:

; 522  :         }
; 523  : 
; 524  :         if (_Mode & ios_base::app) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN4@Getstate

; 525  :             _State |= _Append;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 8
	mov	DWORD PTR _State$[rsp], eax
$LN4@Getstate:

; 526  :         }
; 527  : 
; 528  :         if (_Mode & ios_base::ate) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN5@Getstate

; 529  :             _State |= _Atend;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 16
	mov	DWORD PTR _State$[rsp], eax
$LN5@Getstate:

; 530  :         }
; 531  : 
; 532  :         return _State;

	mov	eax, DWORD PTR _State$[rsp]

; 533  :     }

	add	rsp, 16
	pop	rdi
	ret	0
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
_TEXT	SEGMENT
tv88 = 32
tv95 = 40
this$ = 64
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT

; 494  :     void _Tidy() noexcept { // discard any allocated buffer and clear pointers

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 495  :         if (_Mystate & _Allocated) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@Tidy

; 496  :             _Al.deallocate(_Ptr_traits::pointer_to(*_Mysb::eback()),

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	test	rax, rax
	je	SHORT $LN4@Tidy
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR tv88[rsp], rax
	jmp	SHORT $LN5@Tidy
$LN4@Tidy:
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR tv88[rsp], rax
$LN5@Tidy:
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	rcx, QWORD PTR tv88[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv95[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	rcx, rax
	call	?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ; std::pointer_traits<char *>::pointer_to
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 116				; 00000074H
	mov	rdx, QWORD PTR tv95[rsp]
	mov	r8, rdx
	mov	rdx, rax
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN2@Tidy:

; 497  :                 static_cast<typename allocator_traits<allocator_type>::size_type>(
; 498  :                     (_Mysb::pptr() ? _Mysb::epptr() : _Mysb::egptr()) - _Mysb::eback()));
; 499  :         }
; 500  : 
; 501  :         _Mysb::setg(nullptr, nullptr, nullptr);

	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z

; 502  :         _Mysb::setp(nullptr, nullptr);

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD0@Z

; 503  :         _Seekhigh = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+104], 0

; 504  :         _Mystate &= ~_Allocated;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, -2
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+112], eax

; 505  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
_Off$ = 32
_Gptr_old$ = 40
_Pptr_old$ = 48
_Seeklow$ = 56
_Seekdist$ = 64
_Newptr$ = 72
tv81 = 80
this$ = 112
__$ReturnUdt$ = 120
_Pos$ = 128
_Mode$ = 136
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT

; 399  :     virtual pos_type seekpos(pos_type _Pos, ios_base::openmode _Mode = ios_base::in | ios_base::out) {

$LN12:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 400  :         // change position to _Pos, according to _Mode
; 401  :         const auto _Off      = static_cast<streamoff>(_Pos);

	mov	rcx, QWORD PTR _Pos$[rsp]
	call	??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ	; std::fpos<_Mbstatet>::operator __int64
	mov	QWORD PTR _Off$[rsp], rax

; 402  :         const auto _Gptr_old = _Mysb::gptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR _Gptr_old$[rsp], rax

; 403  :         const auto _Pptr_old = (_Mystate & _Constant) ? nullptr : _Mysb::pptr();

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN10@seekpos
	mov	QWORD PTR tv81[rsp], 0
	jmp	SHORT $LN11@seekpos
$LN10@seekpos:
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR tv81[rsp], rax
$LN11@seekpos:
	mov	rax, QWORD PTR tv81[rsp]
	mov	QWORD PTR _Pptr_old$[rsp], rax

; 404  :         if (_Pptr_old && _Seekhigh < _Pptr_old) { // update high-water pointer

	cmp	QWORD PTR _Pptr_old$[rsp], 0
	je	SHORT $LN2@seekpos
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Pptr_old$[rsp]
	cmp	QWORD PTR [rax+104], rcx
	jae	SHORT $LN2@seekpos

; 405  :             _Seekhigh = _Pptr_old;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Pptr_old$[rsp]
	mov	QWORD PTR [rax+104], rcx
$LN2@seekpos:

; 406  :         }
; 407  : 
; 408  :         const auto _Seeklow  = _Mysb::eback();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR _Seeklow$[rsp], rax

; 409  :         const auto _Seekdist = _Seekhigh - _Seeklow;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Seeklow$[rsp]
	mov	rax, QWORD PTR [rax+104]
	sub	rax, rcx
	mov	QWORD PTR _Seekdist$[rsp], rax

; 410  :         if (static_cast<unsigned long long>(_Off) > static_cast<unsigned long long>(_Seekdist)) {

	mov	rax, QWORD PTR _Seekdist$[rsp]
	cmp	QWORD PTR _Off$[rsp], rax
	jbe	SHORT $LN3@seekpos

; 411  :             return pos_type(off_type(-1));

	mov	rdx, -1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@seekpos
$LN3@seekpos:

; 412  :         }
; 413  : 
; 414  :         if (_Off != 0 && (((_Mode & ios_base::in) && !_Gptr_old) || ((_Mode & ios_base::out) && !_Pptr_old))) {

	cmp	QWORD PTR _Off$[rsp], 0
	je	SHORT $LN4@seekpos
	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN6@seekpos
	cmp	QWORD PTR _Gptr_old$[rsp], 0
	je	SHORT $LN5@seekpos
$LN6@seekpos:
	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN4@seekpos
	cmp	QWORD PTR _Pptr_old$[rsp], 0
	jne	SHORT $LN4@seekpos
$LN5@seekpos:

; 415  :             return pos_type(off_type(-1));

	mov	rdx, -1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@seekpos
$LN4@seekpos:

; 416  :         }
; 417  : 
; 418  :         const auto _Newptr = _Seeklow + _Off; // may perform nullptr + 0

	mov	rax, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR _Seeklow$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Newptr$[rsp], rax

; 419  :         if ((_Mode & ios_base::in) && _Gptr_old) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN7@seekpos
	cmp	QWORD PTR _Gptr_old$[rsp], 0
	je	SHORT $LN7@seekpos

; 420  :             _Mysb::setg(_Seeklow, _Newptr, _Seekhigh);

	mov	rax, QWORD PTR this$[rsp]
	mov	r9, QWORD PTR [rax+104]
	mov	r8, QWORD PTR _Newptr$[rsp]
	mov	rdx, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN7@seekpos:

; 421  :         }
; 422  : 
; 423  :         if ((_Mode & ios_base::out) && _Pptr_old) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN8@seekpos
	cmp	QWORD PTR _Pptr_old$[rsp], 0
	je	SHORT $LN8@seekpos

; 424  :             _Mysb::setp(_Seeklow, _Newptr, _Mysb::epptr());

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	r9, rax
	mov	r8, QWORD PTR _Newptr$[rsp]
	mov	rdx, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN8@seekpos:

; 425  :         }
; 426  : 
; 427  :         return pos_type(_Off);

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@seekpos:

; 428  :     }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
_Gptr_old$ = 32
_Pptr_old$ = 40
_Seeklow$ = 48
_Seekdist$ = 56
_Newoff$ = 64
_Both$1 = 72
_Newptr$ = 80
tv79 = 88
tv92 = 96
this$ = 128
__$ReturnUdt$ = 136
_Off$ = 144
_Way$ = 152
_Mode$ = 160
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT

; 338  :         off_type _Off, ios_base::seekdir _Way, ios_base::openmode _Mode = ios_base::in | ios_base::out) {

$LN25:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H

; 339  :         // change position by _Off, according to _Way, _Mode
; 340  :         const auto _Gptr_old = _Mysb::gptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR _Gptr_old$[rsp], rax

; 341  :         const auto _Pptr_old = (_Mystate & _Constant) ? nullptr : _Mysb::pptr();

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN23@seekoff
	mov	QWORD PTR tv79[rsp], 0
	jmp	SHORT $LN24@seekoff
$LN23@seekoff:
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR tv79[rsp], rax
$LN24@seekoff:
	mov	rax, QWORD PTR tv79[rsp]
	mov	QWORD PTR _Pptr_old$[rsp], rax

; 342  :         if (_Pptr_old && _Seekhigh < _Pptr_old) { // update high-water pointer

	cmp	QWORD PTR _Pptr_old$[rsp], 0
	je	SHORT $LN4@seekoff
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Pptr_old$[rsp]
	cmp	QWORD PTR [rax+104], rcx
	jae	SHORT $LN4@seekoff

; 343  :             _Seekhigh = _Pptr_old;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Pptr_old$[rsp]
	mov	QWORD PTR [rax+104], rcx
$LN4@seekoff:

; 344  :         }
; 345  : 
; 346  :         const auto _Seeklow  = _Mysb::eback();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR _Seeklow$[rsp], rax

; 347  :         const auto _Seekdist = _Seekhigh - _Seeklow;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Seeklow$[rsp]
	mov	rax, QWORD PTR [rax+104]
	sub	rax, rcx
	mov	QWORD PTR _Seekdist$[rsp], rax

; 348  :         off_type _Newoff;
; 349  :         switch (_Way) {

	mov	eax, DWORD PTR _Way$[rsp]
	mov	DWORD PTR tv92[rsp], eax
	cmp	DWORD PTR tv92[rsp], 0
	je	SHORT $LN5@seekoff
	cmp	DWORD PTR tv92[rsp], 1
	je	SHORT $LN7@seekoff
	cmp	DWORD PTR tv92[rsp], 2
	je	SHORT $LN6@seekoff
	jmp	$LN15@seekoff
$LN5@seekoff:

; 350  :         case ios_base::beg:
; 351  :             _Newoff = 0;

	mov	QWORD PTR _Newoff$[rsp], 0

; 352  :             break;

	jmp	$LN2@seekoff
$LN6@seekoff:

; 353  :         case ios_base::end:
; 354  :             _Newoff = _Seekdist;

	mov	rax, QWORD PTR _Seekdist$[rsp]
	mov	QWORD PTR _Newoff$[rsp], rax

; 355  :             break;

	jmp	$LN2@seekoff
$LN7@seekoff:

; 356  :         case ios_base::cur:
; 357  :             {
; 358  :                 constexpr auto _Both = ios_base::in | ios_base::out;

	mov	DWORD PTR _Both$1[rsp], 3

; 359  :                 if ((_Mode & _Both)
; 360  :                     != _Both) { // prohibited by N4727 [stringbuf.virtuals] Table 107 "seekoff positioning"

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 3
	cmp	eax, 3
	je	SHORT $LN8@seekoff

; 361  :                     if (_Mode & ios_base::in) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN9@seekoff

; 362  :                         if (_Gptr_old || !_Seeklow) {

	cmp	QWORD PTR _Gptr_old$[rsp], 0
	jne	SHORT $LN12@seekoff
	cmp	QWORD PTR _Seeklow$[rsp], 0
	jne	SHORT $LN11@seekoff
$LN12@seekoff:

; 363  :                             _Newoff = _Gptr_old - _Seeklow;

	mov	rax, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR _Gptr_old$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Newoff$[rsp], rax

; 364  :                             break;

	jmp	SHORT $LN2@seekoff
$LN11@seekoff:

; 365  :                         }

	jmp	SHORT $LN10@seekoff
$LN9@seekoff:

; 366  :                     } else if ((_Mode & ios_base::out) && (_Pptr_old || !_Seeklow)) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN13@seekoff
	cmp	QWORD PTR _Pptr_old$[rsp], 0
	jne	SHORT $LN14@seekoff
	cmp	QWORD PTR _Seeklow$[rsp], 0
	jne	SHORT $LN13@seekoff
$LN14@seekoff:

; 367  :                         _Newoff = _Pptr_old - _Seeklow;

	mov	rax, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR _Pptr_old$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Newoff$[rsp], rax

; 368  :                         break;

	jmp	SHORT $LN2@seekoff
$LN13@seekoff:
$LN10@seekoff:
$LN8@seekoff:
$LN15@seekoff:

; 369  :                     }
; 370  :                 }
; 371  :             }
; 372  : 
; 373  :             // fallthrough
; 374  :         default:
; 375  :             return pos_type(off_type(-1));

	mov	rdx, -1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@seekoff
$LN2@seekoff:

; 376  :         }
; 377  : 
; 378  :         if (static_cast<unsigned long long>(_Off) + _Newoff > static_cast<unsigned long long>(_Seekdist)) {

	mov	rax, QWORD PTR _Newoff$[rsp]
	mov	rcx, QWORD PTR _Off$[rsp]
	add	rcx, rax
	mov	rax, rcx
	cmp	rax, QWORD PTR _Seekdist$[rsp]
	jbe	SHORT $LN16@seekoff

; 379  :             return pos_type(off_type(-1));

	mov	rdx, -1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@seekoff
$LN16@seekoff:

; 380  :         }
; 381  : 
; 382  :         _Off += _Newoff;

	mov	rax, QWORD PTR _Newoff$[rsp]
	mov	rcx, QWORD PTR _Off$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Off$[rsp], rax

; 383  :         if (_Off != 0 && (((_Mode & ios_base::in) && !_Gptr_old) || ((_Mode & ios_base::out) && !_Pptr_old))) {

	cmp	QWORD PTR _Off$[rsp], 0
	je	SHORT $LN17@seekoff
	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN19@seekoff
	cmp	QWORD PTR _Gptr_old$[rsp], 0
	je	SHORT $LN18@seekoff
$LN19@seekoff:
	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN17@seekoff
	cmp	QWORD PTR _Pptr_old$[rsp], 0
	jne	SHORT $LN17@seekoff
$LN18@seekoff:

; 384  :             return pos_type(off_type(-1));

	mov	rdx, -1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@seekoff
$LN17@seekoff:

; 385  :         }
; 386  : 
; 387  :         const auto _Newptr = _Seeklow + _Off; // may perform nullptr + 0

	mov	rax, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR _Seeklow$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Newptr$[rsp], rax

; 388  :         if ((_Mode & ios_base::in) && _Gptr_old) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN20@seekoff
	cmp	QWORD PTR _Gptr_old$[rsp], 0
	je	SHORT $LN20@seekoff

; 389  :             _Mysb::setg(_Seeklow, _Newptr, _Seekhigh);

	mov	rax, QWORD PTR this$[rsp]
	mov	r9, QWORD PTR [rax+104]
	mov	r8, QWORD PTR _Newptr$[rsp]
	mov	rdx, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN20@seekoff:

; 390  :         }
; 391  : 
; 392  :         if ((_Mode & ios_base::out) && _Pptr_old) {

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN21@seekoff
	cmp	QWORD PTR _Pptr_old$[rsp], 0
	je	SHORT $LN21@seekoff

; 393  :             _Mysb::setp(_Seeklow, _Newptr, _Mysb::epptr());

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	r9, rax
	mov	r8, QWORD PTR _Newptr$[rsp]
	mov	rdx, QWORD PTR _Seeklow$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN21@seekoff:

; 394  :         }
; 395  : 
; 396  :         return pos_type(_Off);

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@seekoff:

; 397  :     }

	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ
_TEXT	SEGMENT
_Gptr$ = 32
_Pptr$ = 56
_Local_highwater$ = 72
tv142 = 80
this$ = 112
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT

; 311  :     virtual int_type underflow() { // get an element from stream, but don't point past it

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 312  :         const auto _Gptr = _Mysb::gptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR _Gptr$[rsp], rax

; 313  :         if (!_Gptr) { // no character buffer, fail

	cmp	QWORD PTR _Gptr$[rsp], 0
	jne	SHORT $LN2@underflow

; 314  :             return _Traits::eof();

	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@underflow
$LN2@underflow:

; 315  :         }
; 316  : 
; 317  :         if (_Gptr < _Mysb::egptr()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	cmp	QWORD PTR _Gptr$[rsp], rax
	jae	SHORT $LN3@underflow

; 318  :             return _Traits::to_int_type(*_Gptr);

	mov	rcx, QWORD PTR _Gptr$[rsp]
	call	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
	jmp	$LN1@underflow
$LN3@underflow:

; 319  :         }
; 320  : 
; 321  :         // try to add initialized characters from the put area into the get area
; 322  :         const auto _Pptr = _Mysb::pptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR _Pptr$[rsp], rax

; 323  :         if (!_Pptr || (_Mystate & _Noread)) { // no put area or read disallowed

	cmp	QWORD PTR _Pptr$[rsp], 0
	je	SHORT $LN5@underflow
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN4@underflow
$LN5@underflow:

; 324  :             return _Traits::eof();

	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@underflow
$LN4@underflow:

; 325  :         }
; 326  : 
; 327  :         const auto _Local_highwater = (_STD max)(_Seekhigh, _Pptr);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 104				; 00000068H
	lea	rdx, QWORD PTR _Pptr$[rsp]
	mov	rcx, rax
	call	??$max@PEAD@std@@YAAEBQEADAEBQEAD0@Z	; std::max<char *>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Local_highwater$[rsp], rax

; 328  :         if (_Local_highwater <= _Gptr) { // nothing in the put area to take

	mov	rax, QWORD PTR _Gptr$[rsp]
	cmp	QWORD PTR _Local_highwater$[rsp], rax
	ja	SHORT $LN6@underflow

; 329  :             return _Traits::eof();

	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	SHORT $LN1@underflow
$LN6@underflow:

; 330  :         }
; 331  : 
; 332  :         _Seekhigh = _Local_highwater;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Local_highwater$[rsp]
	mov	QWORD PTR [rax+104], rcx

; 333  :         _Mysb::setg(_Mysb::eback(), _Mysb::gptr(), _Local_highwater);

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR tv142[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	r9, QWORD PTR _Local_highwater$[rsp]
	mov	rcx, QWORD PTR tv142[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z

; 334  :         return _Traits::to_int_type(*_Mysb::gptr());

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	rcx, rax
	call	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
$LN1@underflow:

; 335  :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
_TEXT	SEGMENT
_Gptr$ = 32
$T1 = 40
$T2 = 44
$T3 = 48
tv143 = 52
this$ = 80
_Meta$ = 88
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT

; 294  :     virtual int_type pbackfail(int_type _Meta = _Traits::eof()) { // put an element back to stream

$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 295  :         const auto _Gptr = _Mysb::gptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR _Gptr$[rsp], rax

; 296  :         if (!_Gptr || _Gptr <= _Mysb::eback()
; 297  :             || (!_Traits::eq_int_type(_Traits::eof(), _Meta) && !_Traits::eq(_Traits::to_char_type(_Meta), _Gptr[-1])

	cmp	QWORD PTR _Gptr$[rsp], 0
	je	SHORT $LN3@pbackfail
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	cmp	QWORD PTR _Gptr$[rsp], rax
	jbe	SHORT $LN3@pbackfail
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T1[rsp], eax
	lea	rdx, QWORD PTR _Meta$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@pbackfail
	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	mov	BYTE PTR $T2[rsp], al
	mov	eax, 1
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Gptr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z ; std::_Narrow_char_traits<char,int>::eq
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@pbackfail
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN2@pbackfail
$LN3@pbackfail:

; 298  :                 && (_Mystate & _Constant))) { // can't put back, fail
; 299  :             return _Traits::eof();

	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	SHORT $LN1@pbackfail
$LN2@pbackfail:

; 300  :         }
; 301  : 
; 302  :         // back up one position and store put-back character
; 303  :         _Mysb::gbump(-1);

	mov	edx, -1
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z

; 304  :         if (!_Traits::eq_int_type(_Traits::eof(), _Meta)) {

	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T3[rsp], eax
	lea	rdx, QWORD PTR _Meta$[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@pbackfail

; 305  :             *_Mysb::gptr() = _Traits::to_char_type(_Meta);

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	mov	BYTE PTR tv143[rsp], al
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	movzx	ecx, BYTE PTR tv143[rsp]
	mov	BYTE PTR [rax], cl
$LN4@pbackfail:

; 306  :         }
; 307  : 
; 308  :         return _Traits::not_eof(_Meta);

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ; std::_Narrow_char_traits<char,int>::not_eof
$LN1@pbackfail:

; 309  :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
_TEXT	SEGMENT
_Pptr$ = 32
_Epptr$ = 40
_Oldsize$ = 48
_Oldptr$ = 56
_Newsize$ = 64
_Newptr$ = 72
_New_pnext$ = 80
$T1 = 88
tv212 = 92
tv210 = 93
this$ = 112
_Meta$ = 120
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT

; 237  :     virtual int_type overflow(int_type _Meta = _Traits::eof()) { // put an element to stream

$LN16:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 238  :         if (_Mystate & _Constant) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN2@overflow

; 239  :             return _Traits::eof(); // array nonmutable, fail

	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@overflow
$LN2@overflow:

; 240  :         }
; 241  : 
; 242  :         if (_Traits::eq_int_type(_Traits::eof(), _Meta)) {

	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T1[rsp], eax
	lea	rdx, QWORD PTR _Meta$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@overflow

; 243  :             return _Traits::not_eof(_Meta); // EOF, return success code

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ; std::_Narrow_char_traits<char,int>::not_eof
	jmp	$LN1@overflow
$LN3@overflow:

; 244  :         }
; 245  : 
; 246  :         const auto _Pptr  = _Mysb::pptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR _Pptr$[rsp], rax

; 247  :         const auto _Epptr = _Mysb::epptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR _Epptr$[rsp], rax

; 248  :         if (_Pptr && _Pptr < _Epptr) { // room in buffer, store it

	cmp	QWORD PTR _Pptr$[rsp], 0
	je	SHORT $LN4@overflow
	mov	rax, QWORD PTR _Epptr$[rsp]
	cmp	QWORD PTR _Pptr$[rsp], rax
	jae	SHORT $LN4@overflow

; 249  :             *_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	mov	BYTE PTR tv212[rsp], al
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
	movzx	ecx, BYTE PTR tv212[rsp]
	mov	BYTE PTR [rax], cl

; 250  :             _Seekhigh        = _Pptr + 1;

	mov	rax, QWORD PTR _Pptr$[rsp]
	inc	rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+104], rax

; 251  :             return _Meta;

	mov	eax, DWORD PTR _Meta$[rsp]
	jmp	$LN1@overflow
$LN4@overflow:

; 252  :         }
; 253  : 
; 254  :         // grow buffer and store element
; 255  :         size_t _Oldsize    = 0;

	mov	QWORD PTR _Oldsize$[rsp], 0

; 256  :         const auto _Oldptr = _Mysb::eback();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR _Oldptr$[rsp], rax

; 257  :         if (_Pptr) {

	cmp	QWORD PTR _Pptr$[rsp], 0
	je	SHORT $LN5@overflow

; 258  :             _Oldsize = static_cast<size_t>(_Epptr - _Oldptr);

	mov	rax, QWORD PTR _Oldptr$[rsp]
	mov	rcx, QWORD PTR _Epptr$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Oldsize$[rsp], rax
$LN5@overflow:

; 259  :         }
; 260  : 
; 261  :         size_t _Newsize;
; 262  :         if (_Oldsize < _MINSIZE) {

	cmp	QWORD PTR _Oldsize$[rsp], 32		; 00000020H
	jae	SHORT $LN6@overflow

; 263  :             _Newsize = _MINSIZE;

	mov	QWORD PTR _Newsize$[rsp], 32		; 00000020H
	jmp	SHORT $LN7@overflow
$LN6@overflow:

; 264  :         } else if (_Oldsize < INT_MAX / 2) { // grow by 50 percent

	cmp	QWORD PTR _Oldsize$[rsp], 1073741823	; 3fffffffH
	jae	SHORT $LN8@overflow

; 265  :             _Newsize = _Oldsize << 1;

	mov	rax, QWORD PTR _Oldsize$[rsp]
	shl	rax, 1
	mov	QWORD PTR _Newsize$[rsp], rax
	jmp	SHORT $LN9@overflow
$LN8@overflow:

; 266  :         } else if (_Oldsize < INT_MAX) {

	cmp	QWORD PTR _Oldsize$[rsp], 2147483647	; 7fffffffH
	jae	SHORT $LN10@overflow

; 267  :             _Newsize = INT_MAX;

	mov	QWORD PTR _Newsize$[rsp], 2147483647	; 7fffffffH

; 268  :         } else { // buffer can't grow, fail

	jmp	SHORT $LN11@overflow
$LN10@overflow:

; 269  :             return _Traits::eof();

	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@overflow
$LN11@overflow:
$LN9@overflow:
$LN7@overflow:

; 270  :         }
; 271  : 
; 272  :         const auto _Newptr = _Unfancy(_Al.allocate(_Newsize));

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 116				; 00000074H
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	rcx, rax
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	QWORD PTR _Newptr$[rsp], rax

; 273  :         _Traits::copy(_Newptr, _Oldptr, _Oldsize);

	mov	r8, QWORD PTR _Oldsize$[rsp]
	mov	rdx, QWORD PTR _Oldptr$[rsp]
	mov	rcx, QWORD PTR _Newptr$[rsp]
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 274  : 
; 275  :         const auto _New_pnext = _Newptr + _Oldsize;

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newptr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _New_pnext$[rsp], rax

; 276  :         _Seekhigh             = _New_pnext + 1; // to include _Meta

	mov	rax, QWORD PTR _New_pnext$[rsp]
	inc	rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+104], rax

; 277  : 
; 278  :         _Mysb::setp(_Newptr, _New_pnext, _Newptr + _Newsize);

	mov	rax, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR _Newptr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	r9, rax
	mov	r8, QWORD PTR _New_pnext$[rsp]
	mov	rdx, QWORD PTR _Newptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z

; 279  :         if (_Mystate & _Noread) { // maintain eback() == allocated pointer invariant

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN12@overflow

; 280  :             _Mysb::setg(_Newptr, nullptr, _Newptr);

	mov	r9, QWORD PTR _Newptr$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Newptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z

; 281  :         } else { // if readable, set the get area to initialized region

	jmp	SHORT $LN13@overflow
$LN12@overflow:

; 282  :             _Mysb::setg(_Newptr, _Newptr + (_Mysb::gptr() - _Oldptr), _Seekhigh);

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	sub	rax, QWORD PTR _Oldptr$[rsp]
	mov	rcx, QWORD PTR _Newptr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR this$[rsp]
	mov	r9, QWORD PTR [rcx+104]
	mov	r8, rax
	mov	rdx, QWORD PTR _Newptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN13@overflow:

; 283  :         }
; 284  : 
; 285  :         if (_Mystate & _Allocated) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN14@overflow

; 286  :             _Al.deallocate(_Ptr_traits::pointer_to(*_Oldptr), _Oldsize);

	mov	rcx, QWORD PTR _Oldptr$[rsp]
	call	?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ; std::pointer_traits<char *>::pointer_to
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 116				; 00000074H
	mov	r8, QWORD PTR _Oldsize$[rsp]
	mov	rdx, rax
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN14@overflow:

; 287  :         }
; 288  : 
; 289  :         _Mystate |= _Allocated;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	or	eax, 1
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+112], eax

; 290  :         *_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	mov	BYTE PTR tv210[rsp], al
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
	movzx	ecx, BYTE PTR tv210[rsp]
	mov	BYTE PTR [rax], cl

; 291  :         return _Meta;

	mov	eax, DWORD PTR _Meta$[rsp]
$LN1@overflow:

; 292  :     }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_Result$ = 40
_View$ = 104
$T5 = 144
__$ArrayPad$ = 152
this$ = 176
__$ReturnUdt$ = 184
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT

; 156  :     {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T5[rsp], 0

; 157  :         _Mystr _Result(_Al);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 116				; 00000074H
	mov	rdx, rax
	lea	rcx, QWORD PTR _Result$[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 158  :         const auto _View = _Get_buffer_view();

	lea	rdx, QWORD PTR _View$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Get_buffer_view

; 159  :         if (_View._Ptr) {

	cmp	QWORD PTR _View$[rsp], 0
	je	SHORT $LN2@str

; 160  :             _Result.assign(_View._Ptr, _View._Size);

	mov	r8, QWORD PTR _View$[rsp+8]
	mov	rdx, QWORD PTR _View$[rsp]
	lea	rcx, QWORD PTR _Result$[rsp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN2@str:

; 161  :         }
; 162  :         return _Result;

	lea	rdx, QWORD PTR _Result$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR _Result$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 163  :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
_View$ = 104
$T5 = 144
__$ArrayPad$ = 152
this$ = 176
__$ReturnUdt$ = 184
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Result$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
_View$ = 104
$T5 = 144
__$ArrayPad$ = 152
this$ = 176
__$ReturnUdt$ = 184
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Result$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ
_TEXT	SEGMENT
_Result$ = 40
_Base$4 = 72
_Base$5 = 80
$T6 = 88
this$ = 128
__$ReturnUdt$ = 136
?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Get_buffer_view, COMDAT

; 133  :     _NODISCARD _Buffer_view _Get_buffer_view() const noexcept {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]

; 134  :         _Buffer_view _Result{};

	lea	rax, QWORD PTR _Result$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 24
	rep stosb

; 135  :         if ((!(_Mystate & _Constant) || (_Mystate & _From_rvalue)) && _Mysb::pptr()) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN4@Get_buffer
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 32					; 00000020H
	test	eax, eax
	je	$LN2@Get_buffer
$LN4@Get_buffer:
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	test	rax, rax
	je	SHORT $LN2@Get_buffer

; 136  :             // writable, make string view from write buffer
; 137  :             const auto _Base = _Mysb::pbase();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR _Base$4[rsp], rax

; 138  :             _Result._Ptr     = _Base;

	mov	rax, QWORD PTR _Base$4[rsp]
	mov	QWORD PTR _Result$[rsp], rax

; 139  :             _Result._Size    = static_cast<_Mysize_type>((_STD max)(_Mysb::pptr(), _Seekhigh) - _Base);

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR $T6[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 104				; 00000068H
	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rsp]
	call	??$max@PEAD@std@@YAAEBQEADAEBQEAD0@Z	; std::max<char *>
	mov	rcx, QWORD PTR _Base$4[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Result$[rsp+8], rax

; 140  :             _Result._Res     = static_cast<_Mysize_type>(_Mysb::epptr() - _Base);

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	sub	rax, QWORD PTR _Base$4[rsp]
	mov	QWORD PTR _Result$[rsp+16], rax
	jmp	SHORT $LN3@Get_buffer
$LN2@Get_buffer:

; 141  :         } else if (!(_Mystate & _Noread) && _Mysb::gptr()) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@Get_buffer
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	test	rax, rax
	je	SHORT $LN3@Get_buffer

; 142  :             // readable, make string view from read buffer
; 143  :             const auto _Base = _Mysb::eback();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR _Base$5[rsp], rax

; 144  :             _Result._Ptr     = _Base;

	mov	rax, QWORD PTR _Base$5[rsp]
	mov	QWORD PTR _Result$[rsp], rax

; 145  :             _Result._Size    = static_cast<_Mysize_type>(_Mysb::egptr() - _Base);

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	sub	rax, QWORD PTR _Base$5[rsp]
	mov	QWORD PTR _Result$[rsp+8], rax

; 146  :             _Result._Res     = _Result._Size;

	mov	rax, QWORD PTR _Result$[rsp+8]
	mov	QWORD PTR _Result$[rsp+16], rax
$LN3@Get_buffer:

; 147  :         }
; 148  :         return _Result;

	lea	rax, QWORD PTR _Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 149  :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
?_Get_buffer_view@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AU_Buffer_view@12@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Get_buffer_view
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 110  :     virtual ~basic_stringbuf() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rax], rcx

; 111  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 112  :     }

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 48
_Mode$ = 56
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 38   :     explicit basic_stringbuf(ios_base::openmode _Mode) : _Seekhigh(nullptr), _Mystate(_Getstate(_Mode)), _Al() {}

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+104], 0
	mov	ecx, DWORD PTR _Mode$[rsp]
	call	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+112], eax
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 116				; 00000074H
	mov	rcx, rax
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$ = 56
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$ = 56
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT

; 746  :     {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 747  :         return _Stringbuffer.str();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, rax
	call	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 748  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 735  :     virtual ~basic_ostringstream() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax-136]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdx, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rcx+rax-136], rdx
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax-136]
	movsxd	rax, DWORD PTR [rax+4]
	sub	rax, 136				; 00000088H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx-136]
	movsxd	rcx, DWORD PTR [rcx+4]
	mov	rdx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rdx+rcx-140], eax
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 128				; 00000080H
	mov	rcx, rax
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 120				; 00000078H
	mov	rcx, rax
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\sstream
;	COMDAT ??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
$initVBases$ = 72
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 680  :     basic_ostringstream() : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(ios_base::out) {}

$LN8:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0
	cmp	DWORD PTR $initVBases$[rsp], 0
	je	SHORT $LN2@basic_ostr
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 136				; 00000088H
	mov	rcx, rax
	call	QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
$LN2@basic_ostr:
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdx, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rcx+rax], rdx
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	sub	rax, 136				; 00000088H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	movsxd	rcx, DWORD PTR [rcx+4]
	mov	rdx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rdx+rcx-4], eax
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	edx, 2
	mov	rcx, rax
	call	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
$initVBases$ = 72
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
$initVBases$ = 72
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 16
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
$initVBases$ = 72
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
$initVBases$ = 72
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 16
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 16
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 124  :         explicit __CLR_OR_THIS_CALL operator bool() const {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 125  :             return _Ok;

	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+8]

; 126  :         }

	pop	rdi
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Zero_uncaught_exceptions$ = 32
tv72 = 33
this$ = 64
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 109  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 110  : #if !_HAS_EXCEPTIONS
; 111  :             const bool _Zero_uncaught_exceptions = true;
; 112  : #elif _HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 113  :             const bool _Zero_uncaught_exceptions = !_STD uncaught_exception(); // TRANSITION, ArchivedOS-12000909

	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@sentry
	mov	BYTE PTR tv72[rsp], 1
	jmp	SHORT $LN5@sentry
$LN4@sentry:
	mov	BYTE PTR tv72[rsp], 0
$LN5@sentry:
	movzx	eax, BYTE PTR tv72[rsp]
	mov	BYTE PTR _Zero_uncaught_exceptions$[rsp], al

; 114  : #else // ^^^ _HAS_DEPRECATED_UNCAUGHT_EXCEPTION / !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION vvv
; 115  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;
; 116  : #endif // !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 117  : 
; 118  :             if (_Zero_uncaught_exceptions) {

	movzx	eax, BYTE PTR _Zero_uncaught_exceptions$[rsp]
	test	eax, eax
	je	SHORT $LN2@sentry

; 119  :                 this->_Myostr._Osfx();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
$LN2@sentry:

; 120  :             }
; 121  :         }

	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	npad	1
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Tied$ = 32
this$ = 64
_Ostr$ = 72
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 92   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr) : _Sentry_base(_Ostr) {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdx, QWORD PTR _Ostr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	npad	1

; 93   :             if (!_Ostr.good()) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry

; 94   :                 _Ok = false;

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+8], 0

; 95   :                 return;

	jmp	SHORT $LN1@sentry
$LN2@sentry:

; 96   :             }
; 97   : 
; 98   :             const auto _Tied = _Ostr.tie();

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Tied$[rsp], rax

; 99   :             if (!_Tied || _Tied == &_Ostr) {

	cmp	QWORD PTR _Tied$[rsp], 0
	je	SHORT $LN4@sentry
	mov	rax, QWORD PTR _Ostr$[rsp]
	cmp	QWORD PTR _Tied$[rsp], rax
	jne	SHORT $LN3@sentry
$LN4@sentry:

; 100  :                 _Ok = true;

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+8], 1

; 101  :                 return;

	jmp	SHORT $LN1@sentry
$LN3@sentry:

; 102  :             }
; 103  : 
; 104  :             _Tied->flush();

	mov	rcx, QWORD PTR _Tied$[rsp]
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 105  :             _Ok = _Ostr.good(); // store test only after flushing tie

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	BYTE PTR [rcx+8], al
$LN1@sentry:

; 106  :         }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Rdbuf$ = 32
tv72 = 40
this$ = 64
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 78   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 79   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv72[rsp], rax
	mov	rax, QWORD PTR tv72[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR tv72[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Rdbuf$[rsp], rax

; 80   :             if (_Rdbuf) {

	cmp	QWORD PTR _Rdbuf$[rsp], 0
	je	SHORT $LN2@Sentry_bas

; 81   :                 _Rdbuf->_Unlock();

	mov	rax, QWORD PTR _Rdbuf$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Rdbuf$[rsp]
	call	QWORD PTR [rax+16]
	npad	1
$LN2@Sentry_bas:

; 82   :             }
; 83   :         }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Rdbuf$ = 32
tv73 = 40
this$ = 64
_Ostr$ = 72
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 71   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	mov	QWORD PTR [rax], rcx

; 72   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv73[rsp], rax
	mov	rax, QWORD PTR tv73[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR tv73[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Rdbuf$[rsp], rax

; 73   :             if (_Rdbuf) {

	cmp	QWORD PTR _Rdbuf$[rsp], 0
	je	SHORT $LN2@Sentry_bas

; 74   :                 _Rdbuf->_Lock();

	mov	rax, QWORD PTR _Rdbuf$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Rdbuf$[rsp]
	call	QWORD PTR [rax+8]
$LN2@Sentry_bas:

; 75   :             }
; 76   :         }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>, COMDAT

; 1375 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z ; std::forward<std::allocator<wchar_t> const &>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>, COMDAT

; 1375 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ; std::forward<std::allocator<char> const &>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
<_Val2_0>$ = 64
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>, COMDAT

; 1370 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR <_Val2_0>$[rsp]
	call	??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ; std::forward<std::_Facet_base * &>
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xlocale
;	COMDAT ??$?0V?$format_punct@_W@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@_W@io@glm@@@Z
_TEXT	SEGMENT
this$ = 48
_Loc$ = 56
_Facptr$ = 64
??$?0V?$format_punct@_W@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@_W@io@glm@@@Z PROC ; std::locale::locale<glm::io::format_punct<wchar_t> >, COMDAT

; 257  :     locale(const locale& _Loc, const _Facet* _Facptr) : _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr)) {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR _Loc$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_?_New_Locimp@_Locimp@locale@std@@CAPEAV123@AEBV123@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 258  :         if (_Facptr) { // replace facet

	cmp	QWORD PTR _Facptr$[rsp], 0
	je	SHORT $LN2@locale

; 259  :             _Ptr->_Addfac(const_cast<_Facet*>(_Facptr), _Facet::id);

	lea	rcx, OFFSET FLAT:?id@?$format_punct@_W@io@glm@@2V0locale@std@@A ; glm::io::format_punct<wchar_t>::id
	call	QWORD PTR __imp_??Bid@locale@std@@QEAA_KXZ
	mov	r8, rax
	mov	rdx, QWORD PTR _Facptr$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_?_Addfac@_Locimp@locale@std@@AEAAXPEAVfacet@23@_K@Z

; 260  :             _Ptr->_Catmask = none;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	DWORD PTR [rax+32], 0

; 261  :             _Ptr->_Name    = "*";

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 40					; 00000028H
	lea	rdx, OFFSET FLAT:??_C@_01NBENCBCI@?$CK@
	mov	rcx, rax
	call	QWORD PTR __imp_??4?$_Yarn@D@std@@QEAAAEAV01@PEBD@Z
$LN2@locale:

; 262  :         }
; 263  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0V?$format_punct@_W@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@_W@io@glm@@@Z ENDP ; std::locale::locale<glm::io::format_punct<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z PROC ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >, COMDAT

; 98   : 	{

$LN14:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 224				; 000000e0H

; 99   : 		if(!std::has_facet<FTy>(ios.getloc()))

	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, QWORD PTR ios$[rsp]
	call	QWORD PTR __imp_?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	mov	QWORD PTR tv156[rsp], rax
	mov	rcx, QWORD PTR tv156[rsp]
	call	??$has_facet@V?$format_punct@_W@io@glm@@@std@@YA_NAEBVlocale@0@@Z ; std::has_facet<glm::io::format_punct<wchar_t> >
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@get_facet
	mov	DWORD PTR tv77[rsp], 1
	jmp	SHORT $LN5@get_facet
$LN4@get_facet:
	mov	DWORD PTR tv77[rsp], 0
$LN5@get_facet:
	movzx	eax, BYTE PTR tv77[rsp]
	mov	BYTE PTR $T1[rsp], al
	lea	rcx, QWORD PTR $T2[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	movzx	eax, BYTE PTR $T1[rsp]
	test	eax, eax
	je	$LN2@get_facet

; 100  : 			ios.imbue(std::locale(ios.getloc(), new FTy));

	mov	ecx, 48					; 00000030H
	call	QWORD PTR __imp_??2_Crt_new_delete@std@@SAPEAX_K@Z
	mov	QWORD PTR $T5[rsp], rax
	cmp	QWORD PTR $T5[rsp], 0
	je	SHORT $LN6@get_facet
	xor	edx, edx
	mov	rcx, QWORD PTR $T5[rsp]
	call	??0?$format_punct@_W@io@glm@@QEAA@_K@Z	; glm::io::format_punct<wchar_t>::format_punct<wchar_t>
	mov	QWORD PTR tv128[rsp], rax
	jmp	SHORT $LN7@get_facet
$LN6@get_facet:
	mov	QWORD PTR tv128[rsp], 0
$LN7@get_facet:
	mov	rax, QWORD PTR tv128[rsp]
	mov	QWORD PTR $T4[rsp], rax
	lea	rdx, QWORD PTR $T6[rsp]
	mov	rcx, QWORD PTR ios$[rsp]
	call	QWORD PTR __imp_?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	mov	QWORD PTR tv82[rsp], rax
	mov	rax, QWORD PTR tv82[rsp]
	mov	QWORD PTR tv159[rsp], rax
	mov	r8, QWORD PTR $T4[rsp]
	mov	rdx, QWORD PTR tv159[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0V?$format_punct@_W@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@_W@io@glm@@@Z ; std::locale::locale<glm::io::format_punct<wchar_t> >
	mov	QWORD PTR tv165[rsp], rax
	mov	rax, QWORD PTR tv165[rsp]
	mov	QWORD PTR tv161[rsp], rax
	mov	r8, QWORD PTR tv161[rsp]
	lea	rdx, QWORD PTR $T7[rsp]
	mov	rcx, QWORD PTR ios$[rsp]
	call	QWORD PTR __imp_?imbue@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAA?AVlocale@2@AEBV32@@Z
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	npad	1
	lea	rcx, QWORD PTR $T3[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	npad	1
	lea	rcx, QWORD PTR $T6[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
$LN2@get_facet:

; 101  : 
; 102  : 		return std::use_facet<FTy>(ios.getloc());

	lea	rdx, QWORD PTR $T9[rsp]
	mov	rcx, QWORD PTR ios$[rsp]
	call	QWORD PTR __imp_?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	mov	QWORD PTR tv166[rsp], rax
	mov	rax, QWORD PTR tv166[rsp]
	mov	QWORD PTR tv164[rsp], rax
	mov	rcx, QWORD PTR tv164[rsp]
	call	??$use_facet@V?$format_punct@_W@io@glm@@@std@@YAAEBV?$format_punct@_W@io@glm@@AEBVlocale@0@@Z ; std::use_facet<glm::io::format_punct<wchar_t> >
	mov	QWORD PTR $T8[rsp], rax
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	mov	rax, QWORD PTR $T8[rsp]

; 103  : 	}

	add	rsp, 224				; 000000e0H
	pop	rdi
	ret	0
??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ENDP ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$1@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T5[rbp]
	call	QWORD PTR __imp_??3_Crt_new_delete@std@@SAXPEAX@Z
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$2@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T6[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$3@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T3[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$5@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$1@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T5[rbp]
	call	QWORD PTR __imp_??3_Crt_new_delete@std@@SAXPEAX@Z
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$2@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T6[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$3@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T3[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$5@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$format_punct@_W@io@glm@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$format_punct@_W@io@glm@@UEAAPEAXI@Z PROC		; glm::io::format_punct<wchar_t>::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$format_punct@_W@io@glm@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3_Crt_new_delete@std@@SAXPEAX@Z
	jmp	SHORT $LN2@scalar
$LN3@scalar:
	mov	edx, 48					; 00000030H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$format_punct@_W@io@glm@@UEAAPEAXI@Z ENDP		; glm::io::format_punct<wchar_t>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$format_punct@_W@io@glm@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$format_punct@_W@io@glm@@UEAA@XZ PROC		; glm::io::format_punct<wchar_t>::~format_punct<wchar_t>, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1facet@locale@std@@MEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$format_punct@_W@io@glm@@UEAA@XZ ENDP		; glm::io::format_punct<wchar_t>::~format_punct<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??0?$format_punct@_W@io@glm@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
this$ = 48
a$ = 56
??0?$format_punct@_W@io@glm@@QEAA@AEBV012@@Z PROC	; glm::io::format_punct<wchar_t>::format_punct<wchar_t>, COMDAT

; 39   : 	{}

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 29   : 		: std::locale::facet(0)

	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0facet@locale@std@@IEAA@_K@Z

; 39   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7?$format_punct@_W@io@glm@@6B@
	mov	QWORD PTR [rax], rcx

; 30   : 		, formatted(a.formatted)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movzx	ecx, BYTE PTR [rcx+16]
	mov	BYTE PTR [rax+16], cl

; 31   : 		, precision(a.precision)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	DWORD PTR [rax+20], ecx

; 32   : 		, width(a.width)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	DWORD PTR [rax+24], ecx

; 33   : 		, separator(a.separator)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movzx	ecx, WORD PTR [rcx+28]
	mov	WORD PTR [rax+28], cx

; 34   : 		, delim_left(a.delim_left)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movzx	ecx, WORD PTR [rcx+30]
	mov	WORD PTR [rax+30], cx

; 35   : 		, delim_right(a.delim_right)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movzx	ecx, WORD PTR [rcx+32]
	mov	WORD PTR [rax+32], cx

; 36   : 		, space(a.space)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movzx	ecx, WORD PTR [rcx+34]
	mov	WORD PTR [rax+34], cx

; 37   : 		, newline(a.newline)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movzx	ecx, WORD PTR [rcx+36]
	mov	WORD PTR [rax+36], cx

; 38   : 		, order(a.order)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx+40]
	mov	DWORD PTR [rax+40], ecx

; 39   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$format_punct@_W@io@glm@@QEAA@AEBV012@@Z ENDP	; glm::io::format_punct<wchar_t>::format_punct<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??0?$format_punct@_W@io@glm@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 48
a$ = 56
??0?$format_punct@_W@io@glm@@QEAA@_K@Z PROC		; glm::io::format_punct<wchar_t>::format_punct<wchar_t>, COMDAT

; 25   : 	{}

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 15   : 		: std::locale::facet(a)

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0facet@locale@std@@IEAA@_K@Z

; 25   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7?$format_punct@_W@io@glm@@6B@
	mov	QWORD PTR [rax], rcx

; 16   : 		, formatted(true)

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+16], 1

; 17   : 		, precision(3)

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+20], 3

; 18   : 		, width(1 + 4 + 1 + precision)

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+20]
	add	eax, 6
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+24], eax

; 19   : 		, separator(',')

	mov	eax, 44					; 0000002cH
	mov	rcx, QWORD PTR this$[rsp]
	mov	WORD PTR [rcx+28], ax

; 20   : 		, delim_left('[')

	mov	eax, 91					; 0000005bH
	mov	rcx, QWORD PTR this$[rsp]
	mov	WORD PTR [rcx+30], ax

; 21   : 		, delim_right(']')

	mov	eax, 93					; 0000005dH
	mov	rcx, QWORD PTR this$[rsp]
	mov	WORD PTR [rcx+32], ax

; 22   : 		, space(' ')

	mov	eax, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	mov	WORD PTR [rcx+34], ax

; 23   : 		, newline('\n')

	mov	eax, 10
	mov	rcx, QWORD PTR this$[rsp]
	mov	WORD PTR [rcx+36], ax

; 24   : 		, order(column_major)

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+40], 0

; 25   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$format_punct@_W@io@glm@@QEAA@_K@Z ENDP		; glm::io::format_punct<wchar_t>::format_punct<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xlocale
;	COMDAT ??$?0V?$format_punct@D@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@D@io@glm@@@Z
_TEXT	SEGMENT
this$ = 48
_Loc$ = 56
_Facptr$ = 64
??$?0V?$format_punct@D@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@D@io@glm@@@Z PROC ; std::locale::locale<glm::io::format_punct<char> >, COMDAT

; 257  :     locale(const locale& _Loc, const _Facet* _Facptr) : _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr)) {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR _Loc$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_?_New_Locimp@_Locimp@locale@std@@CAPEAV123@AEBV123@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 258  :         if (_Facptr) { // replace facet

	cmp	QWORD PTR _Facptr$[rsp], 0
	je	SHORT $LN2@locale

; 259  :             _Ptr->_Addfac(const_cast<_Facet*>(_Facptr), _Facet::id);

	lea	rcx, OFFSET FLAT:?id@?$format_punct@D@io@glm@@2V0locale@std@@A ; glm::io::format_punct<char>::id
	call	QWORD PTR __imp_??Bid@locale@std@@QEAA_KXZ
	mov	r8, rax
	mov	rdx, QWORD PTR _Facptr$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_?_Addfac@_Locimp@locale@std@@AEAAXPEAVfacet@23@_K@Z

; 260  :             _Ptr->_Catmask = none;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	DWORD PTR [rax+32], 0

; 261  :             _Ptr->_Name    = "*";

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 40					; 00000028H
	lea	rdx, OFFSET FLAT:??_C@_01NBENCBCI@?$CK@
	mov	rcx, rax
	call	QWORD PTR __imp_??4?$_Yarn@D@std@@QEAAAEAV01@PEBD@Z
$LN2@locale:

; 262  :         }
; 263  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0V?$format_punct@D@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@D@io@glm@@@Z ENDP ; std::locale::locale<glm::io::format_punct<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z PROC ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >, COMDAT

; 98   : 	{

$LN14:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 224				; 000000e0H

; 99   : 		if(!std::has_facet<FTy>(ios.getloc()))

	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, QWORD PTR ios$[rsp]
	call	QWORD PTR __imp_?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	mov	QWORD PTR tv156[rsp], rax
	mov	rcx, QWORD PTR tv156[rsp]
	call	??$has_facet@V?$format_punct@D@io@glm@@@std@@YA_NAEBVlocale@0@@Z ; std::has_facet<glm::io::format_punct<char> >
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@get_facet
	mov	DWORD PTR tv77[rsp], 1
	jmp	SHORT $LN5@get_facet
$LN4@get_facet:
	mov	DWORD PTR tv77[rsp], 0
$LN5@get_facet:
	movzx	eax, BYTE PTR tv77[rsp]
	mov	BYTE PTR $T1[rsp], al
	lea	rcx, QWORD PTR $T2[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	movzx	eax, BYTE PTR $T1[rsp]
	test	eax, eax
	je	$LN2@get_facet

; 100  : 			ios.imbue(std::locale(ios.getloc(), new FTy));

	mov	ecx, 40					; 00000028H
	call	QWORD PTR __imp_??2_Crt_new_delete@std@@SAPEAX_K@Z
	mov	QWORD PTR $T5[rsp], rax
	cmp	QWORD PTR $T5[rsp], 0
	je	SHORT $LN6@get_facet
	xor	edx, edx
	mov	rcx, QWORD PTR $T5[rsp]
	call	??0?$format_punct@D@io@glm@@QEAA@_K@Z	; glm::io::format_punct<char>::format_punct<char>
	mov	QWORD PTR tv128[rsp], rax
	jmp	SHORT $LN7@get_facet
$LN6@get_facet:
	mov	QWORD PTR tv128[rsp], 0
$LN7@get_facet:
	mov	rax, QWORD PTR tv128[rsp]
	mov	QWORD PTR $T4[rsp], rax
	lea	rdx, QWORD PTR $T6[rsp]
	mov	rcx, QWORD PTR ios$[rsp]
	call	QWORD PTR __imp_?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	mov	QWORD PTR tv82[rsp], rax
	mov	rax, QWORD PTR tv82[rsp]
	mov	QWORD PTR tv159[rsp], rax
	mov	r8, QWORD PTR $T4[rsp]
	mov	rdx, QWORD PTR tv159[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0V?$format_punct@D@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@D@io@glm@@@Z ; std::locale::locale<glm::io::format_punct<char> >
	mov	QWORD PTR tv165[rsp], rax
	mov	rax, QWORD PTR tv165[rsp]
	mov	QWORD PTR tv161[rsp], rax
	mov	r8, QWORD PTR tv161[rsp]
	lea	rdx, QWORD PTR $T7[rsp]
	mov	rcx, QWORD PTR ios$[rsp]
	call	QWORD PTR __imp_?imbue@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAA?AVlocale@2@AEBV32@@Z
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	npad	1
	lea	rcx, QWORD PTR $T3[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	npad	1
	lea	rcx, QWORD PTR $T6[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
$LN2@get_facet:

; 101  : 
; 102  : 		return std::use_facet<FTy>(ios.getloc());

	lea	rdx, QWORD PTR $T9[rsp]
	mov	rcx, QWORD PTR ios$[rsp]
	call	QWORD PTR __imp_?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	mov	QWORD PTR tv166[rsp], rax
	mov	rax, QWORD PTR tv166[rsp]
	mov	QWORD PTR tv164[rsp], rax
	mov	rcx, QWORD PTR tv164[rsp]
	call	??$use_facet@V?$format_punct@D@io@glm@@@std@@YAAEBV?$format_punct@D@io@glm@@AEBVlocale@0@@Z ; std::use_facet<glm::io::format_punct<char> >
	mov	QWORD PTR $T8[rsp], rax
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	mov	rax, QWORD PTR $T8[rsp]

; 103  : 	}

	add	rsp, 224				; 000000e0H
	pop	rdi
	ret	0
??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ENDP ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$1@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T5[rbp]
	call	QWORD PTR __imp_??3_Crt_new_delete@std@@SAXPEAX@Z
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$2@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T6[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$3@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T3[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$5@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$1@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T5[rbp]
	call	QWORD PTR __imp_??3_Crt_new_delete@std@@SAXPEAX@Z
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$2@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T6[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$3@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T3[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 104
$T8 = 120
$T9 = 128
tv156 = 144
tv77 = 152
tv128 = 160
tv82 = 168
tv159 = 176
tv165 = 184
tv161 = 192
tv166 = 200
tv164 = 208
ios$ = 240
?dtor$5@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$format_punct@D@io@glm@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$format_punct@D@io@glm@@UEAAPEAXI@Z PROC		; glm::io::format_punct<char>::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$format_punct@D@io@glm@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3_Crt_new_delete@std@@SAXPEAX@Z
	jmp	SHORT $LN2@scalar
$LN3@scalar:
	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$format_punct@D@io@glm@@UEAAPEAXI@Z ENDP		; glm::io::format_punct<char>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$format_punct@D@io@glm@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$format_punct@D@io@glm@@UEAA@XZ PROC		; glm::io::format_punct<char>::~format_punct<char>, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1facet@locale@std@@MEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$format_punct@D@io@glm@@UEAA@XZ ENDP		; glm::io::format_punct<char>::~format_punct<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??0?$format_punct@D@io@glm@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
this$ = 48
a$ = 56
??0?$format_punct@D@io@glm@@QEAA@AEBV012@@Z PROC	; glm::io::format_punct<char>::format_punct<char>, COMDAT

; 39   : 	{}

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 29   : 		: std::locale::facet(0)

	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0facet@locale@std@@IEAA@_K@Z

; 39   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7?$format_punct@D@io@glm@@6B@
	mov	QWORD PTR [rax], rcx

; 30   : 		, formatted(a.formatted)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movzx	ecx, BYTE PTR [rcx+16]
	mov	BYTE PTR [rax+16], cl

; 31   : 		, precision(a.precision)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	DWORD PTR [rax+20], ecx

; 32   : 		, width(a.width)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	DWORD PTR [rax+24], ecx

; 33   : 		, separator(a.separator)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movzx	ecx, BYTE PTR [rcx+28]
	mov	BYTE PTR [rax+28], cl

; 34   : 		, delim_left(a.delim_left)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movzx	ecx, BYTE PTR [rcx+29]
	mov	BYTE PTR [rax+29], cl

; 35   : 		, delim_right(a.delim_right)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movzx	ecx, BYTE PTR [rcx+30]
	mov	BYTE PTR [rax+30], cl

; 36   : 		, space(a.space)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movzx	ecx, BYTE PTR [rcx+31]
	mov	BYTE PTR [rax+31], cl

; 37   : 		, newline(a.newline)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movzx	ecx, BYTE PTR [rcx+32]
	mov	BYTE PTR [rax+32], cl

; 38   : 		, order(a.order)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx+36]
	mov	DWORD PTR [rax+36], ecx

; 39   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$format_punct@D@io@glm@@QEAA@AEBV012@@Z ENDP	; glm::io::format_punct<char>::format_punct<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??0?$format_punct@D@io@glm@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 48
a$ = 56
??0?$format_punct@D@io@glm@@QEAA@_K@Z PROC		; glm::io::format_punct<char>::format_punct<char>, COMDAT

; 25   : 	{}

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 15   : 		: std::locale::facet(a)

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0facet@locale@std@@IEAA@_K@Z

; 25   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7?$format_punct@D@io@glm@@6B@
	mov	QWORD PTR [rax], rcx

; 16   : 		, formatted(true)

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+16], 1

; 17   : 		, precision(3)

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+20], 3

; 18   : 		, width(1 + 4 + 1 + precision)

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+20]
	add	eax, 6
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+24], eax

; 19   : 		, separator(',')

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+28], 44			; 0000002cH

; 20   : 		, delim_left('[')

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+29], 91			; 0000005bH

; 21   : 		, delim_right(']')

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+30], 93			; 0000005dH

; 22   : 		, space(' ')

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+31], 32			; 00000020H

; 23   : 		, newline('\n')

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+32], 10

; 24   : 		, order(column_major)

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+36], 0

; 25   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$format_punct@D@io@glm@@QEAA@_K@Z ENDP		; glm::io::format_punct<char>::format_punct<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
;	COMDAT ??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z PROC ; std::exchange<std::_Facet_base *,std::nullptr_t>, COMDAT

; 614  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 615  :     // assign _New_val to _Val, return previous _Val
; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Old_val$[rsp], rax

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rcx, QWORD PTR _New_val$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 618  :     return _Old_val;

	mov	rax, QWORD PTR _Old_val$[rsp]

; 619  : }

	add	rsp, 16
	pop	rdi
	ret	0
??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z ENDP ; std::exchange<std::_Facet_base *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z PROC	; std::forward<wchar_t * const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z ENDP	; std::forward<wchar_t * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 134  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 135  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	rax, QWORD PTR _Bytes$[rsp]
	add	rax, 47					; 0000002fH
	mov	QWORD PTR _Block_size$[rsp], rax

; 137  :     if (_Block_size <= _Bytes) {

	mov	rax, QWORD PTR _Bytes$[rsp]
	cmp	QWORD PTR _Block_size$[rsp], rax
	ja	SHORT $LN8@Allocate_m

; 138  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	rcx, QWORD PTR _Block_size$[rsp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	mov	QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	QWORD PTR _Ptr_container$[rsp], 0
	je	SHORT $LN9@Allocate_m
	jmp	SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
	lea	rax, OFFSET FLAT:$SG94601
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG94602
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 142				; 0000008eH
	lea	rdx, OFFSET FLAT:$SG94603
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
	xor	eax, eax
$LN12@Allocate_m:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 142				; 0000008eH
	lea	r8, OFFSET FLAT:$SG94604
	lea	rdx, OFFSET FLAT:$SG94605
	lea	rcx, OFFSET FLAT:$SG94606
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN10@Allocate_m:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@Allocate_m

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	rax, QWORD PTR _Ptr_container$[rsp]
	add	rax, 47					; 0000002fH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR _Ptr$[rsp], rax

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, QWORD PTR _Ptr_container$[rsp]
	mov	QWORD PTR [rcx+rax], rdx

; 145  : 
; 146  : #ifdef _DEBUG
; 147  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	mov	QWORD PTR [rcx+rax], rdx

; 148  : #endif // _DEBUG
; 149  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 150  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z PROC		; std::forward<char * &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z PROC	; std::_Voidify_iter<char * *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z ENDP	; std::_Voidify_iter<char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 276  : }

	pop	rdi
	ret	0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z PROC	; std::forward<wchar_t * &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z ENDP	; std::forward<wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Voidify_iter@PEAPEA_W@std@@YAPEAXPEAPEA_W@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAPEA_W@std@@YAPEAXPEAPEA_W@Z PROC	; std::_Voidify_iter<wchar_t * *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAPEA_W@std@@YAPEAXPEAPEA_W@Z ENDP	; std::_Voidify_iter<wchar_t * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z PROC	; std::addressof<wchar_t *>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 276  : }

	pop	rdi
	ret	0
??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ENDP	; std::addressof<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z PROC ; std::_Voidify_iter<std::_Container_proxy *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ENDP ; std::_Voidify_iter<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 276  : }

	pop	rdi
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z PROC ; std::forward<std::allocator<wchar_t> >, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1445 : }

	pop	rdi
	ret	0
??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ENDP ; std::forward<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 985  : _CONSTEXPR20_DYNALLOC void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 986  :     // deallocate a plain pointer using an allocator
; 987  :     using _Alloc_traits = allocator_traits<_Alloc>;
; 988  :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 989  :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

	mov	r8d, 1
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	npad	1

; 990  :     } else {
; 991  :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 992  :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 993  :     }
; 994  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x4@M$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x4@M$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>, COMDAT

; 366  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 367  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x4@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x4,float,2>

; 368  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x4@M$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$tmat4x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z PROC	; glm::tmat4x4<float,2>::operator[], COMDAT

; 248  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 249  : 		assert(i < this->length());

	call	?length@?$tmat4x4@M$01@glm@@SAHXZ	; glm::tmat4x4<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 249				; 000000f9H
	lea	rdx, OFFSET FLAT:??_C@_1IO@MHMJNBDF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 250  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 251  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ENDP	; glm::tmat4x4<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x4.hpp
;	COMDAT ?length@?$tmat4x4@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat4x4@M$01@glm@@SAHXZ PROC			; glm::tmat4x4<float,2>::length, COMDAT

; 84   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tmat4x4@M$01@glm@@SAHXZ ENDP			; glm::tmat4x4<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$tmat4x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@000@Z
_TEXT	SEGMENT
this$ = 64
v0$ = 72
v1$ = 80
v2$ = 88
v3$ = 96
??0?$tmat4x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@000@Z PROC ; glm::tmat4x4<float,2>::tmat4x4<float,2>, COMDAT

; 80   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@M$01@glm@@QEAA@XZ ; glm::tvec4<float,2>::tvec4<float,2>
	mov	r8d, 4
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 81   : 		this->value[0] = v0;

	mov	eax, 16
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v0$[rsp]
	mov	ecx, 16
	rep movsb

; 82   : 		this->value[1] = v1;

	mov	eax, 16
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 16
	rep movsb

; 83   : 		this->value[2] = v2;

	mov	eax, 16
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v2$[rsp]
	mov	ecx, 16
	rep movsb

; 84   : 		this->value[3] = v3;

	mov	eax, 16
	imul	rax, rax, 3
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v3$[rsp]
	mov	ecx, 16
	rep movsb

; 85   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat4x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@000@Z ENDP ; glm::tmat4x4<float,2>::tmat4x4<float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x3@M$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x3@M$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>, COMDAT

; 360  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 361  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x3@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x3,float,2>

; 362  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x3@M$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$tmat4x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z PROC	; glm::tmat4x3<float,2>::operator[], COMDAT

; 218  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 219  : 		assert(i < this->length());

	call	?length@?$tmat4x3@M$01@glm@@SAHXZ	; glm::tmat4x3<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 219				; 000000dbH
	lea	rdx, OFFSET FLAT:??_C@_1IO@LDFBDILK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 220  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 221  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ENDP	; glm::tmat4x3<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x3.hpp
;	COMDAT ?length@?$tmat4x3@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat4x3@M$01@glm@@SAHXZ PROC			; glm::tmat4x3<float,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tmat4x3@M$01@glm@@SAHXZ ENDP			; glm::tmat4x3<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$tmat4x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@000@Z
_TEXT	SEGMENT
this$ = 64
v0$ = 72
v1$ = 80
v2$ = 88
v3$ = 96
??0?$tmat4x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@000@Z PROC ; glm::tmat4x3<float,2>::tmat4x3<float,2>, COMDAT

; 78   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@M$01@glm@@QEAA@XZ ; glm::tvec3<float,2>::tvec3<float,2>
	mov	r8d, 4
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 79   : 		this->value[0] = v0;

	mov	eax, 12
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v0$[rsp]
	mov	ecx, 12
	rep movsb

; 80   : 		this->value[1] = v1;

	mov	eax, 12
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 12
	rep movsb

; 81   : 		this->value[2] = v2;

	mov	eax, 12
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v2$[rsp]
	mov	ecx, 12
	rep movsb

; 82   : 		this->value[3] = v3;

	mov	eax, 12
	imul	rax, rax, 3
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v3$[rsp]
	mov	ecx, 12
	rep movsb

; 83   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat4x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@000@Z ENDP ; glm::tmat4x3<float,2>::tmat4x3<float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x2@M$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x2@M$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>, COMDAT

; 354  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 355  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat4x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat4x2@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat4x2,float,2>

; 356  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x2@M$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$tmat4x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z PROC	; glm::tmat4x2<float,2>::operator[], COMDAT

; 225  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 226  : 		assert(i < this->length());

	call	?length@?$tmat4x2@M$01@glm@@SAHXZ	; glm::tmat4x2<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 226				; 000000e2H
	lea	rdx, OFFSET FLAT:??_C@_1IO@CIPEHENF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 227  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 228  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ENDP	; glm::tmat4x2<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x2.hpp
;	COMDAT ?length@?$tmat4x2@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat4x2@M$01@glm@@SAHXZ PROC			; glm::tmat4x2<float,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tmat4x2@M$01@glm@@SAHXZ ENDP			; glm::tmat4x2<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$tmat4x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@000@Z
_TEXT	SEGMENT
this$ = 48
v0$ = 56
v1$ = 64
v2$ = 72
v3$ = 80
??0?$tmat4x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@000@Z PROC ; glm::tmat4x2<float,2>::tmat4x2<float,2>, COMDAT

; 85   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@M$01@glm@@QEAA@XZ ; glm::tvec2<float,2>::tvec2<float,2>
	mov	r8d, 4
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 86   : 		this->value[0] = v0;

	mov	rax, QWORD PTR v0$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 87   : 		this->value[1] = v1;

	mov	rax, QWORD PTR v1$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 88   : 		this->value[2] = v2;

	mov	rax, QWORD PTR v2$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 89   : 		this->value[3] = v3;

	mov	rax, QWORD PTR v3$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 90   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$tmat4x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@000@Z ENDP ; glm::tmat4x2<float,2>::tmat4x2<float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x4@M$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x4@M$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>, COMDAT

; 348  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 349  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x4@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x4,float,2>

; 350  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x4@M$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$tmat3x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z PROC	; glm::tmat3x4<float,2>::operator[], COMDAT

; 196  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 197  : 		assert(i < this->length());

	call	?length@?$tmat3x4@M$01@glm@@SAHXZ	; glm::tmat3x4<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 197				; 000000c5H
	lea	rdx, OFFSET FLAT:??_C@_1IO@DKDACJEA@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 198  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 199  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ENDP	; glm::tmat3x4<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x4.hpp
;	COMDAT ?length@?$tmat3x4@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat3x4@M$01@glm@@SAHXZ PROC			; glm::tmat3x4<float,2>::length, COMDAT

; 80   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tmat3x4@M$01@glm@@SAHXZ ENDP			; glm::tmat3x4<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$tmat3x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@00@Z
_TEXT	SEGMENT
this$ = 64
v0$ = 72
v1$ = 80
v2$ = 88
??0?$tmat3x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@00@Z PROC ; glm::tmat3x4<float,2>::tmat3x4<float,2>, COMDAT

; 71   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@M$01@glm@@QEAA@XZ ; glm::tvec4<float,2>::tvec4<float,2>
	mov	r8d, 3
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 72   : 		this->value[0] = v0;

	mov	eax, 16
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v0$[rsp]
	mov	ecx, 16
	rep movsb

; 73   : 		this->value[1] = v1;

	mov	eax, 16
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 16
	rep movsb

; 74   : 		this->value[2] = v2;

	mov	eax, 16
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v2$[rsp]
	mov	ecx, 16
	rep movsb

; 75   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat3x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@00@Z ENDP ; glm::tmat3x4<float,2>::tmat3x4<float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x3@M$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x3@M$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>, COMDAT

; 342  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 343  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x3@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x3,float,2>

; 344  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x3@M$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$tmat3x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z PROC	; glm::tmat3x3<float,2>::operator[], COMDAT

; 198  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 199  : 		assert(i < this->length());

	call	?length@?$tmat3x3@M$01@glm@@SAHXZ	; glm::tmat3x3<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 199				; 000000c7H
	lea	rdx, OFFSET FLAT:??_C@_1IO@EOKIMAMP@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 200  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 201  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ENDP	; glm::tmat3x3<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x3.hpp
;	COMDAT ?length@?$tmat3x3@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat3x3@M$01@glm@@SAHXZ PROC			; glm::tmat3x3<float,2>::length, COMDAT

; 79   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tmat3x3@M$01@glm@@SAHXZ ENDP			; glm::tmat3x3<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$tmat3x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@00@Z
_TEXT	SEGMENT
this$ = 64
v0$ = 72
v1$ = 80
v2$ = 88
??0?$tmat3x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@00@Z PROC ; glm::tmat3x3<float,2>::tmat3x3<float,2>, COMDAT

; 73   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@M$01@glm@@QEAA@XZ ; glm::tvec3<float,2>::tvec3<float,2>
	mov	r8d, 3
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 74   : 		this->value[0] = v0;

	mov	eax, 12
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v0$[rsp]
	mov	ecx, 12
	rep movsb

; 75   : 		this->value[1] = v1;

	mov	eax, 12
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 12
	rep movsb

; 76   : 		this->value[2] = v2;

	mov	eax, 12
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v2$[rsp]
	mov	ecx, 12
	rep movsb

; 77   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat3x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@00@Z ENDP ; glm::tmat3x3<float,2>::tmat3x3<float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x2@M$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x2@M$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>, COMDAT

; 336  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat3x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat3x2@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat3x2,float,2>

; 338  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x2@M$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$tmat3x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z PROC	; glm::tmat3x2<float,2>::operator[], COMDAT

; 196  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 197  : 		assert(i < this->length());

	call	?length@?$tmat3x2@M$01@glm@@SAHXZ	; glm::tmat3x2<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 197				; 000000c5H
	lea	rdx, OFFSET FLAT:??_C@_1IO@NFANIMKA@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 198  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 199  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ENDP	; glm::tmat3x2<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x2.hpp
;	COMDAT ?length@?$tmat3x2@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat3x2@M$01@glm@@SAHXZ PROC			; glm::tmat3x2<float,2>::length, COMDAT

; 80   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tmat3x2@M$01@glm@@SAHXZ ENDP			; glm::tmat3x2<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$tmat3x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@00@Z
_TEXT	SEGMENT
this$ = 48
v0$ = 56
v1$ = 64
v2$ = 72
??0?$tmat3x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@00@Z PROC ; glm::tmat3x2<float,2>::tmat3x2<float,2>, COMDAT

; 71   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@M$01@glm@@QEAA@XZ ; glm::tvec2<float,2>::tvec2<float,2>
	mov	r8d, 3
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 72   : 		this->value[0] = v0;

	mov	rax, QWORD PTR v0$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 73   : 		this->value[1] = v1;

	mov	rax, QWORD PTR v1$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 74   : 		this->value[2] = v2;

	mov	rax, QWORD PTR v2$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 75   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$tmat3x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@00@Z ENDP ; glm::tmat3x2<float,2>::tmat3x2<float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x4@M$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x4@M$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>, COMDAT

; 330  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 331  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x4@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x4@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x4,float,2>

; 332  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x4@M$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$tmat2x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z PROC	; glm::tmat2x4<float,2>::operator[], COMDAT

; 167  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 168  : 		assert(i < this->length());

	call	?length@?$tmat2x4@M$01@glm@@SAHXZ	; glm::tmat2x4<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 168				; 000000a8H
	lea	rdx, OFFSET FLAT:??_C@_1IO@JEFILINB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 169  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 170  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x4@M$01@glm@@QEBAAEBU?$tvec4@M$01@1@H@Z ENDP	; glm::tmat2x4<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x4.hpp
;	COMDAT ?length@?$tmat2x4@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat2x4@M$01@glm@@SAHXZ PROC			; glm::tmat2x4<float,2>::length, COMDAT

; 75   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tmat2x4@M$01@glm@@SAHXZ ENDP			; glm::tmat2x4<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$tmat2x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@0@Z
_TEXT	SEGMENT
this$ = 64
v0$ = 72
v1$ = 80
??0?$tmat2x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@0@Z PROC	; glm::tmat2x4<float,2>::tmat2x4<float,2>, COMDAT

; 61   : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@M$01@glm@@QEAA@XZ ; glm::tvec4<float,2>::tvec4<float,2>
	mov	r8d, 2
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 62   : 		this->value[0] = v0;

	mov	eax, 16
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v0$[rsp]
	mov	ecx, 16
	rep movsb

; 63   : 		this->value[1] = v1;

	mov	eax, 16
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 16
	rep movsb

; 64   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat2x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@0@Z ENDP	; glm::tmat2x4<float,2>::tmat2x4<float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x3@M$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x3@M$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>, COMDAT

; 324  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 325  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x3@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x3@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x3,float,2>

; 326  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x3@M$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$tmat2x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z PROC	; glm::tmat2x3<float,2>::operator[], COMDAT

; 166  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 167  : 		assert(i < this->length());

	call	?length@?$tmat2x3@M$01@glm@@SAHXZ	; glm::tmat2x3<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 167				; 000000a7H
	lea	rdx, OFFSET FLAT:??_C@_1IO@OAMAFBFO@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 168  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 169  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x3@M$01@glm@@QEBAAEBU?$tvec3@M$01@1@H@Z ENDP	; glm::tmat2x3<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x3.hpp
;	COMDAT ?length@?$tmat2x3@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat2x3@M$01@glm@@SAHXZ PROC			; glm::tmat2x3<float,2>::length, COMDAT

; 73   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tmat2x3@M$01@glm@@SAHXZ ENDP			; glm::tmat2x3<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$tmat2x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@0@Z
_TEXT	SEGMENT
this$ = 64
v0$ = 72
v1$ = 80
??0?$tmat2x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@0@Z PROC	; glm::tmat2x3<float,2>::tmat2x3<float,2>, COMDAT

; 60   : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@M$01@glm@@QEAA@XZ ; glm::tvec3<float,2>::tvec3<float,2>
	mov	r8d, 2
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 61   : 		this->value[0] = v0;

	mov	eax, 12
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v0$[rsp]
	mov	ecx, 12
	rep movsb

; 62   : 		this->value[1] = v1;

	mov	eax, 12
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 12
	rep movsb

; 63   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat2x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@0@Z ENDP	; glm::tmat2x3<float,2>::tmat2x3<float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x2@M$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x2@M$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>, COMDAT

; 318  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 319  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@_WU?$char_traits@_W@std@@Utmat2x2@glm@@M$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tmat2x2@M$01@1@@Z ; glm::detail::print_matrix_on<wchar_t,std::char_traits<wchar_t>,glm::tmat2x2,float,2>

; 320  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x2@M$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$tmat2x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z PROC	; glm::tmat2x2<float,2>::operator[], COMDAT

; 166  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 167  : 		assert(i < this->length());

	call	?length@?$tmat2x2@M$01@glm@@SAHXZ	; glm::tmat2x2<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 167				; 000000a7H
	lea	rdx, OFFSET FLAT:??_C@_1IO@HLGFBNDB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 168  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 169  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x2@M$01@glm@@QEBAAEBU?$tvec2@M$01@1@H@Z ENDP	; glm::tmat2x2<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x2.hpp
;	COMDAT ?length@?$tmat2x2@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat2x2@M$01@glm@@SAHXZ PROC			; glm::tmat2x2<float,2>::length, COMDAT

; 72   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tmat2x2@M$01@glm@@SAHXZ ENDP			; glm::tmat2x2<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$tmat2x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@0@Z
_TEXT	SEGMENT
this$ = 48
v0$ = 56
v1$ = 64
??0?$tmat2x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@0@Z PROC	; glm::tmat2x2<float,2>::tmat2x2<float,2>, COMDAT

; 62   : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@M$01@glm@@QEAA@XZ ; glm::tvec2<float,2>::tvec2<float,2>
	mov	r8d, 2
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 63   : 		this->value[0] = v0;

	mov	rax, QWORD PTR v0$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 64   : 		this->value[1] = v1;

	mov	rax, QWORD PTR v1$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 65   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$tmat2x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@0@Z ENDP	; glm::tmat2x2<float,2>::tmat2x2<float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z
_TEXT	SEGMENT
cerberus$ = 40
$T4 = 72
tv72 = 80
os$ = 112
a$ = 120
??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z PROC ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 11   : 	{

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 12   : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 13   : 
; 14   : 		if (cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@operator

; 15   : 		{
; 16   : 			switch (a) {

	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv72[rsp], eax
	cmp	DWORD PTR tv72[rsp], 0
	je	SHORT $LN5@operator
	cmp	DWORD PTR tv72[rsp], 1
	je	SHORT $LN6@operator
	cmp	DWORD PTR tv72[rsp], 2
	je	SHORT $LN7@operator
	jmp	SHORT $LN4@operator
$LN5@operator:

; 17   : 			case glm::highp:			os << "uhi"; break;

	lea	rdx, OFFSET FLAT:$SG94044
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN4@operator
$LN6@operator:

; 18   : 			case glm::mediump:			os << "umd"; break;

	lea	rdx, OFFSET FLAT:$SG94046
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN4@operator
$LN7@operator:

; 19   : 			case glm::lowp:				os << "ulo"; break;

	lea	rdx, OFFSET FLAT:$SG94048
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN4@operator:

; 20   : #			if GLM_HAS_ALIGNED_TYPE
; 21   : 				case glm::aligned_highp:	os << "ahi"; break;
; 22   : 				case glm::aligned_mediump:	os << "amd"; break;
; 23   : 				case glm::aligned_lowp:		os << "alo"; break;
; 24   : #			endif
; 25   : 			}
; 26   : 		}
; 27   : 
; 28   : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T4[rsp]

; 29   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ENDP ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
$T4 = 72
tv72 = 80
os$ = 112
a$ = 120
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA PROC ; ``anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA ENDP ; ``anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
$T4 = 72
tv72 = 80
os$ = 112
a$ = 120
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA PROC ; ``anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA ENDP ; ``anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUorder@01@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUorder@01@@Z PROC ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 147  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 148  : 		const_cast<format_punct<CTy>&>(get_facet<format_punct<CTy> >(os)).order = a.value;

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+40], ecx

; 149  : 		return os;

	mov	rax, QWORD PTR os$[rsp]

; 150  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUorder@01@@Z ENDP ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$tvec4@M$01@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHHH@?$tvec4@M$01@glm@@QEAA@HHHH@Z PROC		; glm::tvec4<float,2>::tvec4<float,2><int,int,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsi2ss xmm0, DWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHHH@?$tvec4@M$01@glm@@QEAA@HHHH@Z ENDP		; glm::tvec4<float,2>::tvec4<float,2><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$01@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec4@M$01@glm@@QEAA@XZ PROC			; glm::tvec4<float,2>::tvec4<float,2>, COMDAT

; 163  : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 161  : 				: x(0), y(0), z(0), w(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12], xmm0

; 163  : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$01@glm@@QEAA@XZ ENDP			; glm::tvec4<float,2>::tvec4<float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@M$01@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@M$01@glm@@QEBAAEBMH@Z PROC			; glm::tvec4<float,2>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@M$01@glm@@SAHXZ		; glm::tvec4<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1IK@NGAJILNN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@M$01@glm@@QEBAAEBMH@Z ENDP			; glm::tvec4<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@M$01@glm@@QEAAAEAMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@M$01@glm@@QEAAAEAMH@Z PROC			; glm::tvec4<float,2>::operator[], COMDAT

; 329  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 330  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@M$01@glm@@SAHXZ		; glm::tvec4<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 330				; 0000014aH
	lea	rdx, OFFSET FLAT:??_C@_1IK@NGAJILNN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 331  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 332  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@M$01@glm@@QEAAAEAMH@Z ENDP			; glm::tvec4<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@M$01@glm@@SAHXZ PROC			; glm::tvec4<float,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@M$01@glm@@SAHXZ ENDP			; glm::tvec4<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$tvec3@M$01@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0HHH@?$tvec3@M$01@glm@@QEAA@HHH@Z PROC		; glm::tvec3<float,2>::tvec3<float,2><int,int,int>, COMDAT

; 80   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 78   : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 79   : 		z(static_cast<T>(c))

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHH@?$tvec3@M$01@glm@@QEAA@HHH@Z ENDP		; glm::tvec3<float,2>::tvec3<float,2><int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@M$01@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec3@M$01@glm@@QEAA@XZ PROC			; glm::tvec3<float,2>::tvec3<float,2>, COMDAT

; 40   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 38   : 				: x(0), y(0), z(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0

; 40   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@M$01@glm@@QEAA@XZ ENDP			; glm::tvec3<float,2>::tvec3<float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@M$01@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@M$01@glm@@QEBAAEBMH@Z PROC			; glm::tvec3<float,2>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@M$01@glm@@SAHXZ		; glm::tvec3<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1IK@KCJBGCFC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@M$01@glm@@QEBAAEBMH@Z ENDP			; glm::tvec3<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@M$01@glm@@QEAAAEAMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@M$01@glm@@QEAAAEAMH@Z PROC			; glm::tvec3<float,2>::operator[], COMDAT

; 144  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 145  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@M$01@glm@@SAHXZ		; glm::tvec3<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 145				; 00000091H
	lea	rdx, OFFSET FLAT:??_C@_1IK@KCJBGCFC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 146  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 147  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@M$01@glm@@QEAAAEAMH@Z ENDP			; glm::tvec3<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@M$01@glm@@SAHXZ PROC			; glm::tvec3<float,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@M$01@glm@@SAHXZ ENDP			; glm::tvec3<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$tvec2@M$01@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HH@?$tvec2@M$01@glm@@QEAA@HH@Z PROC		; glm::tvec2<float,2>::tvec2<float,2><int,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HH@?$tvec2@M$01@glm@@QEAA@HH@Z ENDP		; glm::tvec2<float,2>::tvec2<float,2><int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$01@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec2@M$01@glm@@QEAA@XZ PROC			; glm::tvec2<float,2>::tvec2<float,2>, COMDAT

; 27   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 25   : 				: x(0), y(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0

; 27   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$01@glm@@QEAA@XZ ENDP			; glm::tvec2<float,2>::tvec2<float,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@M$01@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@M$01@glm@@QEBAAEBMH@Z PROC			; glm::tvec2<float,2>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@M$01@glm@@SAHXZ		; glm::tvec2<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@M$01@glm@@QEBAAEBMH@Z ENDP			; glm::tvec2<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@M$01@glm@@QEAAAEAMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@M$01@glm@@QEAAAEAMH@Z PROC			; glm::tvec2<float,2>::operator[], COMDAT

; 102  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 103  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@M$01@glm@@SAHXZ		; glm::tvec2<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 103				; 00000067H
	lea	rdx, OFFSET FLAT:??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 104  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 105  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@M$01@glm@@QEAAAEAMH@Z ENDP			; glm::tvec2<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@M$01@glm@@SAHXZ PROC			; glm::tvec2<float,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@M$01@glm@@SAHXZ ENDP			; glm::tvec2<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x4@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x4@M$0A@@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,float,0>, COMDAT

; 366  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 367  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x4@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x4,float,0>

; 368  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x4@M$0A@@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z PROC ; glm::tmat4x4<float,0>::operator[], COMDAT

; 248  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 249  : 		assert(i < this->length());

	call	?length@?$tmat4x4@M$0A@@glm@@SAHXZ	; glm::tmat4x4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 249				; 000000f9H
	lea	rdx, OFFSET FLAT:??_C@_1IO@MHMJNBDF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 250  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 251  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ENDP ; glm::tmat4x4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x4.hpp
;	COMDAT ?length@?$tmat4x4@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat4x4@M$0A@@glm@@SAHXZ PROC			; glm::tmat4x4<float,0>::length, COMDAT

; 84   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tmat4x4@M$0A@@glm@@SAHXZ ENDP			; glm::tmat4x4<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$tmat4x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@000@Z
_TEXT	SEGMENT
this$ = 64
v0$ = 72
v1$ = 80
v2$ = 88
v3$ = 96
??0?$tmat4x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@000@Z PROC ; glm::tmat4x4<float,0>::tmat4x4<float,0>, COMDAT

; 80   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@M$0A@@glm@@QEAA@XZ ; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8d, 4
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 81   : 		this->value[0] = v0;

	mov	eax, 16
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v0$[rsp]
	mov	ecx, 16
	rep movsb

; 82   : 		this->value[1] = v1;

	mov	eax, 16
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 16
	rep movsb

; 83   : 		this->value[2] = v2;

	mov	eax, 16
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v2$[rsp]
	mov	ecx, 16
	rep movsb

; 84   : 		this->value[3] = v3;

	mov	eax, 16
	imul	rax, rax, 3
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v3$[rsp]
	mov	ecx, 16
	rep movsb

; 85   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat4x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@000@Z ENDP ; glm::tmat4x4<float,0>::tmat4x4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x3@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x3@M$0A@@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,float,0>, COMDAT

; 360  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 361  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x3@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x3,float,0>

; 362  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x3@M$0A@@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z PROC ; glm::tmat4x3<float,0>::operator[], COMDAT

; 218  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 219  : 		assert(i < this->length());

	call	?length@?$tmat4x3@M$0A@@glm@@SAHXZ	; glm::tmat4x3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 219				; 000000dbH
	lea	rdx, OFFSET FLAT:??_C@_1IO@LDFBDILK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 220  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 221  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ENDP ; glm::tmat4x3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x3.hpp
;	COMDAT ?length@?$tmat4x3@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat4x3@M$0A@@glm@@SAHXZ PROC			; glm::tmat4x3<float,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tmat4x3@M$0A@@glm@@SAHXZ ENDP			; glm::tmat4x3<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$tmat4x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@000@Z
_TEXT	SEGMENT
this$ = 64
v0$ = 72
v1$ = 80
v2$ = 88
v3$ = 96
??0?$tmat4x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@000@Z PROC ; glm::tmat4x3<float,0>::tmat4x3<float,0>, COMDAT

; 78   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@M$0A@@glm@@QEAA@XZ ; glm::tvec3<float,0>::tvec3<float,0>
	mov	r8d, 4
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 79   : 		this->value[0] = v0;

	mov	eax, 12
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v0$[rsp]
	mov	ecx, 12
	rep movsb

; 80   : 		this->value[1] = v1;

	mov	eax, 12
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 12
	rep movsb

; 81   : 		this->value[2] = v2;

	mov	eax, 12
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v2$[rsp]
	mov	ecx, 12
	rep movsb

; 82   : 		this->value[3] = v3;

	mov	eax, 12
	imul	rax, rax, 3
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v3$[rsp]
	mov	ecx, 12
	rep movsb

; 83   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat4x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@000@Z ENDP ; glm::tmat4x3<float,0>::tmat4x3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x2@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x2@M$0A@@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,float,0>, COMDAT

; 354  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 355  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@DU?$char_traits@D@std@@Utmat4x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat4x2@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat4x2,float,0>

; 356  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x2@M$0A@@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z PROC ; glm::tmat4x2<float,0>::operator[], COMDAT

; 225  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 226  : 		assert(i < this->length());

	call	?length@?$tmat4x2@M$0A@@glm@@SAHXZ	; glm::tmat4x2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 226				; 000000e2H
	lea	rdx, OFFSET FLAT:??_C@_1IO@CIPEHENF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 227  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 228  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ENDP ; glm::tmat4x2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x2.hpp
;	COMDAT ?length@?$tmat4x2@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat4x2@M$0A@@glm@@SAHXZ PROC			; glm::tmat4x2<float,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tmat4x2@M$0A@@glm@@SAHXZ ENDP			; glm::tmat4x2<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$tmat4x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@000@Z
_TEXT	SEGMENT
this$ = 48
v0$ = 56
v1$ = 64
v2$ = 72
v3$ = 80
??0?$tmat4x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@000@Z PROC ; glm::tmat4x2<float,0>::tmat4x2<float,0>, COMDAT

; 85   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@M$0A@@glm@@QEAA@XZ ; glm::tvec2<float,0>::tvec2<float,0>
	mov	r8d, 4
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 86   : 		this->value[0] = v0;

	mov	rax, QWORD PTR v0$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 87   : 		this->value[1] = v1;

	mov	rax, QWORD PTR v1$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 88   : 		this->value[2] = v2;

	mov	rax, QWORD PTR v2$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 89   : 		this->value[3] = v3;

	mov	rax, QWORD PTR v3$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 90   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$tmat4x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@000@Z ENDP ; glm::tmat4x2<float,0>::tmat4x2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x4@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x4@M$0A@@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,float,0>, COMDAT

; 348  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 349  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x4@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x4,float,0>

; 350  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x4@M$0A@@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z PROC ; glm::tmat3x4<float,0>::operator[], COMDAT

; 196  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 197  : 		assert(i < this->length());

	call	?length@?$tmat3x4@M$0A@@glm@@SAHXZ	; glm::tmat3x4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 197				; 000000c5H
	lea	rdx, OFFSET FLAT:??_C@_1IO@DKDACJEA@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 198  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 199  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ENDP ; glm::tmat3x4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x4.hpp
;	COMDAT ?length@?$tmat3x4@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat3x4@M$0A@@glm@@SAHXZ PROC			; glm::tmat3x4<float,0>::length, COMDAT

; 80   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tmat3x4@M$0A@@glm@@SAHXZ ENDP			; glm::tmat3x4<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$tmat3x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@00@Z
_TEXT	SEGMENT
this$ = 64
v0$ = 72
v1$ = 80
v2$ = 88
??0?$tmat3x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@00@Z PROC ; glm::tmat3x4<float,0>::tmat3x4<float,0>, COMDAT

; 71   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@M$0A@@glm@@QEAA@XZ ; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8d, 3
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 72   : 		this->value[0] = v0;

	mov	eax, 16
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v0$[rsp]
	mov	ecx, 16
	rep movsb

; 73   : 		this->value[1] = v1;

	mov	eax, 16
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 16
	rep movsb

; 74   : 		this->value[2] = v2;

	mov	eax, 16
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v2$[rsp]
	mov	ecx, 16
	rep movsb

; 75   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat3x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@00@Z ENDP ; glm::tmat3x4<float,0>::tmat3x4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x3@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x3@M$0A@@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,float,0>, COMDAT

; 342  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 343  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x3@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x3,float,0>

; 344  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x3@M$0A@@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z PROC ; glm::tmat3x3<float,0>::operator[], COMDAT

; 198  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 199  : 		assert(i < this->length());

	call	?length@?$tmat3x3@M$0A@@glm@@SAHXZ	; glm::tmat3x3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 199				; 000000c7H
	lea	rdx, OFFSET FLAT:??_C@_1IO@EOKIMAMP@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 200  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 201  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ENDP ; glm::tmat3x3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x3.hpp
;	COMDAT ?length@?$tmat3x3@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat3x3@M$0A@@glm@@SAHXZ PROC			; glm::tmat3x3<float,0>::length, COMDAT

; 79   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tmat3x3@M$0A@@glm@@SAHXZ ENDP			; glm::tmat3x3<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$tmat3x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@00@Z
_TEXT	SEGMENT
this$ = 64
v0$ = 72
v1$ = 80
v2$ = 88
??0?$tmat3x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@00@Z PROC ; glm::tmat3x3<float,0>::tmat3x3<float,0>, COMDAT

; 73   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@M$0A@@glm@@QEAA@XZ ; glm::tvec3<float,0>::tvec3<float,0>
	mov	r8d, 3
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 74   : 		this->value[0] = v0;

	mov	eax, 12
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v0$[rsp]
	mov	ecx, 12
	rep movsb

; 75   : 		this->value[1] = v1;

	mov	eax, 12
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 12
	rep movsb

; 76   : 		this->value[2] = v2;

	mov	eax, 12
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v2$[rsp]
	mov	ecx, 12
	rep movsb

; 77   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat3x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@00@Z ENDP ; glm::tmat3x3<float,0>::tmat3x3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x2@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x2@M$0A@@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,float,0>, COMDAT

; 336  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@DU?$char_traits@D@std@@Utmat3x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat3x2@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat3x2,float,0>

; 338  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x2@M$0A@@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z PROC ; glm::tmat3x2<float,0>::operator[], COMDAT

; 196  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 197  : 		assert(i < this->length());

	call	?length@?$tmat3x2@M$0A@@glm@@SAHXZ	; glm::tmat3x2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 197				; 000000c5H
	lea	rdx, OFFSET FLAT:??_C@_1IO@NFANIMKA@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 198  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 199  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ENDP ; glm::tmat3x2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x2.hpp
;	COMDAT ?length@?$tmat3x2@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat3x2@M$0A@@glm@@SAHXZ PROC			; glm::tmat3x2<float,0>::length, COMDAT

; 80   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tmat3x2@M$0A@@glm@@SAHXZ ENDP			; glm::tmat3x2<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$tmat3x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@00@Z
_TEXT	SEGMENT
this$ = 48
v0$ = 56
v1$ = 64
v2$ = 72
??0?$tmat3x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@00@Z PROC ; glm::tmat3x2<float,0>::tmat3x2<float,0>, COMDAT

; 71   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@M$0A@@glm@@QEAA@XZ ; glm::tvec2<float,0>::tvec2<float,0>
	mov	r8d, 3
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 72   : 		this->value[0] = v0;

	mov	rax, QWORD PTR v0$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 73   : 		this->value[1] = v1;

	mov	rax, QWORD PTR v1$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 74   : 		this->value[2] = v2;

	mov	rax, QWORD PTR v2$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 75   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$tmat3x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@00@Z ENDP ; glm::tmat3x2<float,0>::tmat3x2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x4@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x4@M$0A@@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,float,0>, COMDAT

; 330  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 331  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x4@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x4,float,0>

; 332  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x4@M$0A@@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z PROC ; glm::tmat2x4<float,0>::operator[], COMDAT

; 167  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 168  : 		assert(i < this->length());

	call	?length@?$tmat2x4@M$0A@@glm@@SAHXZ	; glm::tmat2x4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 168				; 000000a8H
	lea	rdx, OFFSET FLAT:??_C@_1IO@JEFILINB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 169  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 170  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ENDP ; glm::tmat2x4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x4.hpp
;	COMDAT ?length@?$tmat2x4@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat2x4@M$0A@@glm@@SAHXZ PROC			; glm::tmat2x4<float,0>::length, COMDAT

; 75   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tmat2x4@M$0A@@glm@@SAHXZ ENDP			; glm::tmat2x4<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$tmat2x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@0@Z
_TEXT	SEGMENT
this$ = 64
v0$ = 72
v1$ = 80
??0?$tmat2x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@0@Z PROC ; glm::tmat2x4<float,0>::tmat2x4<float,0>, COMDAT

; 61   : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@M$0A@@glm@@QEAA@XZ ; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8d, 2
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 62   : 		this->value[0] = v0;

	mov	eax, 16
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v0$[rsp]
	mov	ecx, 16
	rep movsb

; 63   : 		this->value[1] = v1;

	mov	eax, 16
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 16
	rep movsb

; 64   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat2x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@0@Z ENDP ; glm::tmat2x4<float,0>::tmat2x4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x3@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x3@M$0A@@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,float,0>, COMDAT

; 324  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 325  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x3@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x3,float,0>

; 326  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x3@M$0A@@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z PROC ; glm::tmat2x3<float,0>::operator[], COMDAT

; 166  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 167  : 		assert(i < this->length());

	call	?length@?$tmat2x3@M$0A@@glm@@SAHXZ	; glm::tmat2x3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 167				; 000000a7H
	lea	rdx, OFFSET FLAT:??_C@_1IO@OAMAFBFO@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 168  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 169  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ENDP ; glm::tmat2x3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x3.hpp
;	COMDAT ?length@?$tmat2x3@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat2x3@M$0A@@glm@@SAHXZ PROC			; glm::tmat2x3<float,0>::length, COMDAT

; 73   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tmat2x3@M$0A@@glm@@SAHXZ ENDP			; glm::tmat2x3<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$tmat2x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@0@Z
_TEXT	SEGMENT
this$ = 64
v0$ = 72
v1$ = 80
??0?$tmat2x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@0@Z PROC ; glm::tmat2x3<float,0>::tmat2x3<float,0>, COMDAT

; 60   : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@M$0A@@glm@@QEAA@XZ ; glm::tvec3<float,0>::tvec3<float,0>
	mov	r8d, 2
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 61   : 		this->value[0] = v0;

	mov	eax, 12
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v0$[rsp]
	mov	ecx, 12
	rep movsb

; 62   : 		this->value[1] = v1;

	mov	eax, 12
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 12
	rep movsb

; 63   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat2x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@0@Z ENDP ; glm::tmat2x3<float,0>::tmat2x3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x2@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x2@M$0A@@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,float,0>, COMDAT

; 318  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 319  : 		return detail::print_matrix_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_matrix_on@DU?$char_traits@D@std@@Utmat2x2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tmat2x2@M$0A@@1@@Z ; glm::detail::print_matrix_on<char,std::char_traits<char>,glm::tmat2x2,float,0>

; 320  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x2@M$0A@@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z PROC ; glm::tmat2x2<float,0>::operator[], COMDAT

; 166  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 167  : 		assert(i < this->length());

	call	?length@?$tmat2x2@M$0A@@glm@@SAHXZ	; glm::tmat2x2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 167				; 000000a7H
	lea	rdx, OFFSET FLAT:??_C@_1IO@HLGFBNDB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 168  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 169  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ENDP ; glm::tmat2x2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x2.hpp
;	COMDAT ?length@?$tmat2x2@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat2x2@M$0A@@glm@@SAHXZ PROC			; glm::tmat2x2<float,0>::length, COMDAT

; 72   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tmat2x2@M$0A@@glm@@SAHXZ ENDP			; glm::tmat2x2<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$tmat2x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z
_TEXT	SEGMENT
this$ = 48
v0$ = 56
v1$ = 64
??0?$tmat2x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z PROC ; glm::tmat2x2<float,0>::tmat2x2<float,0>, COMDAT

; 62   : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@M$0A@@glm@@QEAA@XZ ; glm::tvec2<float,0>::tvec2<float,0>
	mov	r8d, 2
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 63   : 		this->value[0] = v0;

	mov	rax, QWORD PTR v0$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 64   : 		this->value[1] = v1;

	mov	rax, QWORD PTR v1$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 65   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$tmat2x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z ENDP ; glm::tmat2x2<float,0>::tmat2x2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z
_TEXT	SEGMENT
cerberus$ = 40
$T4 = 72
tv72 = 80
os$ = 112
a$ = 120
??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z PROC ; `anonymous namespace'::operator<<<char,std::char_traits<char> >, COMDAT

; 11   : 	{

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 12   : 		typename std::basic_ostream<CTy,CTr>::sentry const cerberus(os);

	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 13   : 
; 14   : 		if (cerberus)

	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@operator

; 15   : 		{
; 16   : 			switch (a) {

	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv72[rsp], eax
	cmp	DWORD PTR tv72[rsp], 0
	je	SHORT $LN5@operator
	cmp	DWORD PTR tv72[rsp], 1
	je	SHORT $LN6@operator
	cmp	DWORD PTR tv72[rsp], 2
	je	SHORT $LN7@operator
	jmp	SHORT $LN4@operator
$LN5@operator:

; 17   : 			case glm::highp:			os << "uhi"; break;

	lea	rdx, OFFSET FLAT:$SG93922
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN4@operator
$LN6@operator:

; 18   : 			case glm::mediump:			os << "umd"; break;

	lea	rdx, OFFSET FLAT:$SG93924
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN4@operator
$LN7@operator:

; 19   : 			case glm::lowp:				os << "ulo"; break;

	lea	rdx, OFFSET FLAT:$SG93926
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN4@operator:

; 20   : #			if GLM_HAS_ALIGNED_TYPE
; 21   : 				case glm::aligned_highp:	os << "ahi"; break;
; 22   : 				case glm::aligned_mediump:	os << "amd"; break;
; 23   : 				case glm::aligned_lowp:		os << "alo"; break;
; 24   : #			endif
; 25   : 			}
; 26   : 		}
; 27   : 
; 28   : 		return os;

	mov	rax, QWORD PTR os$[rsp]
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR cerberus$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T4[rsp]

; 29   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ENDP ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
$T4 = 72
tv72 = 80
os$ = 112
a$ = 120
?dtor$0@?0???$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA PROC ; ``anonymous namespace'::operator<<<char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA ENDP ; ``anonymous namespace'::operator<<<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cerberus$ = 40
$T4 = 72
tv72 = 80
os$ = 112
a$ = 120
?dtor$0@?0???$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA PROC ; ``anonymous namespace'::operator<<<char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cerberus$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z@4HA ENDP ; ``anonymous namespace'::operator<<<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUorder@01@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUorder@01@@Z PROC ; glm::io::operator<<<char,std::char_traits<char> >, COMDAT

; 147  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 148  : 		const_cast<format_punct<CTy>&>(get_facet<format_punct<CTy> >(os)).order = a.value;

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+36], ecx

; 149  : 		return os;

	mov	rax, QWORD PTR os$[rsp]

; 150  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUorder@01@@Z ENDP ; glm::io::operator<<<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>, COMDAT

; 224  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 225  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,unsigned int,2>

; 226  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z PROC ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG93863
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG93866
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG93869
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG93872
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG93875
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG93878
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG93881
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG93884
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG93887
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG93890
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG93893
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG93896
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG93899
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG93900
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 2
	lea	rcx, OFFSET FLAT:??_R0I@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z ENDP ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>, COMDAT

; 218  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 219  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,unsigned int,2>

; 220  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z PROC ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG93791
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG93794
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG93797
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG93800
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG93803
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG93806
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG93809
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG93812
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG93815
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG93818
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG93821
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG93824
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG93827
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG93828
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 2
	lea	rcx, OFFSET FLAT:??_R0I@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z ENDP ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>, COMDAT

; 212  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 213  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,unsigned int,2>

; 214  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z PROC ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG93719
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG93722
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG93725
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG93728
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG93731
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG93734
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG93737
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG93740
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG93743
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG93746
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG93749
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG93752
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG93755
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG93756
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 2
	lea	rcx, OFFSET FLAT:??_R0I@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z ENDP ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>, COMDAT

; 224  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 225  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@I$01@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,unsigned int,2>

; 226  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z PROC ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,char,std::char_traits<char> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG93647
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG93650
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG93653
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG93656
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG93659
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG93662
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG93665
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG93668
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG93671
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG93674
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG93677
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG93680
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG93683
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG93684
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 2
	lea	rcx, OFFSET FLAT:??_R0I@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z ENDP ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>, COMDAT

; 218  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 219  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@I$01@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,unsigned int,2>

; 220  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z PROC ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,char,std::char_traits<char> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG93575
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG93578
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG93581
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG93584
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG93587
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG93590
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG93593
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG93596
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG93599
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG93602
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG93605
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG93608
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG93611
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG93612
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 2
	lea	rcx, OFFSET FLAT:??_R0I@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z ENDP ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>, COMDAT

; 212  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 213  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@I$01@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,unsigned int,2>

; 214  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z PROC ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,char,std::char_traits<char> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG93503
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG93506
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG93509
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG93512
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG93515
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG93518
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG93521
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG93524
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG93527
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG93530
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG93533
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG93536
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG93539
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG93540
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 2
	lea	rcx, OFFSET FLAT:??_R0I@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z ENDP ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$tvec4@I$01@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHHH@?$tvec4@I$01@glm@@QEAA@HHHH@Z PROC		; glm::tvec4<unsigned int,2>::tvec4<unsigned int,2><int,int,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	mov	DWORD PTR [rax], ecx

; 201  : 		y(static_cast<T>(b)),

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR b$[rsp]
	mov	DWORD PTR [rax+4], ecx

; 202  : 		z(static_cast<T>(c)),

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR c$[rsp]
	mov	DWORD PTR [rax+8], ecx

; 203  : 		w(static_cast<T>(d))

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR d$[rsp]
	mov	DWORD PTR [rax+12], ecx

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHHH@?$tvec4@I$01@glm@@QEAA@HHHH@Z ENDP		; glm::tvec4<unsigned int,2>::tvec4<unsigned int,2><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@I$01@glm@@QEBAAEBIH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@I$01@glm@@QEBAAEBIH@Z PROC			; glm::tvec4<unsigned int,2>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@I$01@glm@@SAHXZ		; glm::tvec4<unsigned int,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1IK@NGAJILNN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@I$01@glm@@QEBAAEBIH@Z ENDP			; glm::tvec4<unsigned int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@I$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@I$01@glm@@SAHXZ PROC			; glm::tvec4<unsigned int,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@I$01@glm@@SAHXZ ENDP			; glm::tvec4<unsigned int,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$tvec3@I$01@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0HHH@?$tvec3@I$01@glm@@QEAA@HHH@Z PROC		; glm::tvec3<unsigned int,2>::tvec3<unsigned int,2><int,int,int>, COMDAT

; 80   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	mov	DWORD PTR [rax], ecx

; 78   : 		y(static_cast<T>(b)),

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR b$[rsp]
	mov	DWORD PTR [rax+4], ecx

; 79   : 		z(static_cast<T>(c))

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR c$[rsp]
	mov	DWORD PTR [rax+8], ecx

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHH@?$tvec3@I$01@glm@@QEAA@HHH@Z ENDP		; glm::tvec3<unsigned int,2>::tvec3<unsigned int,2><int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@I$01@glm@@QEBAAEBIH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@I$01@glm@@QEBAAEBIH@Z PROC			; glm::tvec3<unsigned int,2>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@I$01@glm@@SAHXZ		; glm::tvec3<unsigned int,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1IK@KCJBGCFC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@I$01@glm@@QEBAAEBIH@Z ENDP			; glm::tvec3<unsigned int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@I$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@I$01@glm@@SAHXZ PROC			; glm::tvec3<unsigned int,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@I$01@glm@@SAHXZ ENDP			; glm::tvec3<unsigned int,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$tvec2@I$01@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HH@?$tvec2@I$01@glm@@QEAA@HH@Z PROC		; glm::tvec2<unsigned int,2>::tvec2<unsigned int,2><int,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	mov	DWORD PTR [rax], ecx

; 65   : 		, y(static_cast<T>(b))

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR b$[rsp]
	mov	DWORD PTR [rax+4], ecx

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HH@?$tvec2@I$01@glm@@QEAA@HH@Z ENDP		; glm::tvec2<unsigned int,2>::tvec2<unsigned int,2><int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@I$01@glm@@QEBAAEBIH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@I$01@glm@@QEBAAEBIH@Z PROC			; glm::tvec2<unsigned int,2>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@I$01@glm@@SAHXZ		; glm::tvec2<unsigned int,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@I$01@glm@@QEBAAEBIH@Z ENDP			; glm::tvec2<unsigned int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@I$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@I$01@glm@@SAHXZ PROC			; glm::tvec2<unsigned int,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@I$01@glm@@SAHXZ ENDP			; glm::tvec2<unsigned int,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>, COMDAT

; 224  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 225  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,int,1>

; 226  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z PROC ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,wchar_t,std::char_traits<wchar_t> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG93416
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG93419
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG93422
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG93425
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG93428
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG93431
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG93434
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG93437
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG93440
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG93443
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG93446
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG93449
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG93452
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG93453
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 1
	lea	rcx, OFFSET FLAT:??_R0H@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z ENDP ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>, COMDAT

; 218  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 219  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,int,1>

; 220  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z PROC ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,wchar_t,std::char_traits<wchar_t> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG93344
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG93347
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG93350
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG93353
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG93356
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG93359
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG93362
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG93365
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG93368
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG93371
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG93374
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG93377
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG93380
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG93381
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 1
	lea	rcx, OFFSET FLAT:??_R0H@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z ENDP ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>, COMDAT

; 212  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 213  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,int,1>

; 214  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z PROC ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,wchar_t,std::char_traits<wchar_t> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG93272
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG93275
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG93278
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG93281
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG93284
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG93287
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG93290
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG93293
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG93296
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG93299
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG93302
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG93305
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG93308
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG93309
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 1
	lea	rcx, OFFSET FLAT:??_R0H@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z ENDP ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,int,1>, COMDAT

; 224  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 225  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@H$00@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,int,1>

; 226  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,int,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z PROC ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,char,std::char_traits<char> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG93200
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG93203
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG93206
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG93209
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG93212
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG93215
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG93218
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG93221
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG93224
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG93227
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG93230
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG93233
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG93236
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG93237
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 1
	lea	rcx, OFFSET FLAT:??_R0H@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z ENDP ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,int,1>, COMDAT

; 218  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 219  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@H$00@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,int,1>

; 220  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,int,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z PROC ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,char,std::char_traits<char> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG93128
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG93131
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG93134
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG93137
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG93140
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG93143
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG93146
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG93149
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG93152
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG93155
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG93158
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG93161
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG93164
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG93165
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 1
	lea	rcx, OFFSET FLAT:??_R0H@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z ENDP ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,int,1>, COMDAT

; 212  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 213  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@H$00@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,int,1>

; 214  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,int,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z PROC ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,char,std::char_traits<char> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG93056
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG93059
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG93062
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG93065
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG93068
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG93071
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG93074
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG93077
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG93080
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG93083
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG93086
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG93089
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG93092
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG93093
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 1
	lea	rcx, OFFSET FLAT:??_R0H@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z ENDP ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@H$00@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??0?$tvec4@H$00@glm@@QEAA@HHHH@Z PROC			; glm::tvec4<int,1>::tvec4<int,1>, COMDAT

; 193  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 192  : 		: x(a), y(b), z(c), w(d)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR b$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR c$[rsp]
	mov	DWORD PTR [rax+8], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR d$[rsp]
	mov	DWORD PTR [rax+12], ecx

; 193  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@H$00@glm@@QEAA@HHHH@Z ENDP			; glm::tvec4<int,1>::tvec4<int,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@H$00@glm@@QEBAAEBHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@H$00@glm@@QEBAAEBHH@Z PROC			; glm::tvec4<int,1>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@H$00@glm@@SAHXZ		; glm::tvec4<int,1>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1IK@NGAJILNN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@H$00@glm@@QEBAAEBHH@Z ENDP			; glm::tvec4<int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@H$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@H$00@glm@@SAHXZ PROC			; glm::tvec4<int,1>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@H$00@glm@@SAHXZ ENDP			; glm::tvec4<int,1>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@H$00@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??0?$tvec3@H$00@glm@@QEAA@HHH@Z PROC			; glm::tvec3<int,1>::tvec3<int,1>, COMDAT

; 70   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 69   : 		: x(a), y(b), z(c)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR b$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR c$[rsp]
	mov	DWORD PTR [rax+8], ecx

; 70   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@H$00@glm@@QEAA@HHH@Z ENDP			; glm::tvec3<int,1>::tvec3<int,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@H$00@glm@@QEBAAEBHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@H$00@glm@@QEBAAEBHH@Z PROC			; glm::tvec3<int,1>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@H$00@glm@@SAHXZ		; glm::tvec3<int,1>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1IK@KCJBGCFC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@H$00@glm@@QEBAAEBHH@Z ENDP			; glm::tvec3<int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@H$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@H$00@glm@@SAHXZ PROC			; glm::tvec3<int,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@H$00@glm@@SAHXZ ENDP			; glm::tvec3<int,1>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@H$00@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
s1$ = 24
s2$ = 32
??0?$tvec2@H$00@glm@@QEAA@HH@Z PROC			; glm::tvec2<int,1>::tvec2<int,1>, COMDAT

; 57   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 56   : 		: x(s1), y(s2)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR s1$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR s2$[rsp]
	mov	DWORD PTR [rax+4], ecx

; 57   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@H$00@glm@@QEAA@HH@Z ENDP			; glm::tvec2<int,1>::tvec2<int,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@H$00@glm@@QEBAAEBHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@H$00@glm@@QEBAAEBHH@Z PROC			; glm::tvec2<int,1>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@H$00@glm@@SAHXZ		; glm::tvec2<int,1>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@H$00@glm@@QEBAAEBHH@Z ENDP			; glm::tvec2<int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@H$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@H$00@glm@@SAHXZ PROC			; glm::tvec2<int,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@H$00@glm@@SAHXZ ENDP			; glm::tvec2<int,1>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>, COMDAT

; 224  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 225  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec4,float,0>

; 226  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z PROC ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,wchar_t,std::char_traits<wchar_t> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG92984
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG92987
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG92990
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG92993
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG92996
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG92999
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG93002
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG93005
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG93008
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG93011
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG93014
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG93017
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG93020
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG93021
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 0
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z ENDP ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>, COMDAT

; 218  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 219  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec3,float,0>

; 220  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z PROC ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,wchar_t,std::char_traits<wchar_t> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG92912
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG92915
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG92918
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG92921
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG92924
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG92927
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG92930
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG92933
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG92936
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG92939
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG92942
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG92945
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG92948
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG92949
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 0
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z ENDP ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>, COMDAT

; 212  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 213  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tvec2,float,0>

; 214  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z PROC ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,wchar_t,std::char_traits<wchar_t> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG92840
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG92843
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG92846
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG92849
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG92852
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG92855
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG92858
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG92861
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG92864
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG92867
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG92870
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG92873
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG92876
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG92877
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 0
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z ENDP ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,float,0>, COMDAT

; 224  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 225  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@DU?$char_traits@D@std@@Utvec4@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec4@M$0A@@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec4,float,0>

; 226  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z PROC ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,char,std::char_traits<char> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG92768
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG92771
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG92774
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG92777
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG92780
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG92783
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG92786
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG92789
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG92792
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG92795
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG92798
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG92801
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG92804
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG92805
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 0
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z ENDP ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,float,0>, COMDAT

; 218  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 219  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@DU?$char_traits@D@std@@Utvec3@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec3@M$0A@@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec3,float,0>

; 220  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z PROC ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,char,std::char_traits<char> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG92696
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG92699
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG92702
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG92705
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG92708
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG92711
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG92714
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG92717
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG92720
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG92723
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG92726
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG92729
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG92732
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG92733
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 0
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z ENDP ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,float,0>, COMDAT

; 212  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 213  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@DU?$char_traits@D@std@@Utvec2@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tvec2@M$0A@@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tvec2,float,0>

; 214  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z PROC ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,char,std::char_traits<char> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG92624
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG92627
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG92630
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG92633
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG92636
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG92639
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG92642
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG92645
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG92648
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG92651
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG92654
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG92657
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG92660
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG92661
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 0
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z ENDP ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z PROC		; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsi2ss xmm0, DWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ENDP		; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z PROC		; glm::tvec3<float,0>::tvec3<float,0><int,int,int>, COMDAT

; 80   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 78   : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 79   : 		z(static_cast<T>(c))

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z ENDP		; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec3@M$0A@@glm@@QEAA@XZ PROC			; glm::tvec3<float,0>::tvec3<float,0>, COMDAT

; 40   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 38   : 				: x(0), y(0), z(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0

; 40   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@M$0A@@glm@@QEAA@XZ ENDP			; glm::tvec3<float,0>::tvec3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tvec3<float,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@M$0A@@glm@@SAHXZ	; glm::tvec3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1IK@KCJBGCFC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tvec3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z PROC			; glm::tvec3<float,0>::operator[], COMDAT

; 144  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 145  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@M$0A@@glm@@SAHXZ	; glm::tvec3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 145				; 00000091H
	lea	rdx, OFFSET FLAT:??_C@_1IK@KCJBGCFC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 146  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 147  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z ENDP			; glm::tvec3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@M$0A@@glm@@SAHXZ PROC			; glm::tvec3<float,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@M$0A@@glm@@SAHXZ ENDP			; glm::tvec3<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z PROC		; glm::tvec2<float,0>::tvec2<float,0><int,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z ENDP		; glm::tvec2<float,0>::tvec2<float,0><int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>, COMDAT

; 200  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 201  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,unsigned int,2>

; 202  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z PROC ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG92537
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG92540
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG92543
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG92546
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG92549
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG92552
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG92555
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG92558
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG92561
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG92564
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG92567
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG92570
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG92573
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG92574
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 2
	lea	rcx, OFFSET FLAT:??_R0I@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z ENDP ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>, COMDAT

; 200  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 201  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@I$01@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@I$01@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,unsigned int,2>

; 202  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z PROC ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,char,std::char_traits<char> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG92465
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG92468
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG92471
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG92474
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG92477
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG92480
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG92483
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG92486
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG92489
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG92492
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG92495
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG92498
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@I$01@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@I$01@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG92501
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG92502
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 2
	lea	rcx, OFFSET FLAT:??_R0I@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z ENDP ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@I$01@glm@@QEAA@AEBI000@Z
_TEXT	SEGMENT
this$ = 16
w$ = 24
x$ = 32
y$ = 40
z$ = 48
??0?$tquat@I$01@glm@@QEAA@AEBI000@Z PROC		; glm::tquat<unsigned int,2>::tquat<unsigned int,2>, COMDAT

; 122  : 	{}

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 121  : 		: x(x), y(y), z(z), w(w)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR z$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+8], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR w$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+12], ecx

; 122  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tquat@I$01@glm@@QEAA@AEBI000@Z ENDP		; glm::tquat<unsigned int,2>::tquat<unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@I$01@glm@@QEBAAEBIH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tquat@I$01@glm@@QEBAAEBIH@Z PROC			; glm::tquat<unsigned int,2>::operator[], COMDAT

; 79   : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 80   : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tquat@I$01@glm@@SAHXZ		; glm::tquat<unsigned int,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 80					; 00000050H
	lea	rdx, OFFSET FLAT:??_C@_1IG@MLIPKIDC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 81   : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 82   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tquat@I$01@glm@@QEBAAEBIH@Z ENDP			; glm::tquat<unsigned int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\quaternion.hpp
;	COMDAT ?length@?$tquat@I$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tquat@I$01@glm@@SAHXZ PROC			; glm::tquat<unsigned int,2>::length, COMDAT

; 74   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tquat@I$01@glm@@SAHXZ ENDP			; glm::tquat<unsigned int,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>, COMDAT

; 200  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 201  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,int,1>

; 202  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z PROC ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,wchar_t,std::char_traits<wchar_t> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG91496
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG91499
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG91502
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG91505
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG91508
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG91511
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG91514
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG91517
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG91520
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG91523
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG91526
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG91529
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG91532
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG91533
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 1
	lea	rcx, OFFSET FLAT:??_R0H@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z ENDP ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tquat<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tquat<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tquat<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tquat<int,1>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,int,1>, COMDAT

; 200  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 201  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@H$00@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@H$00@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,int,1>

; 202  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,int,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z PROC ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,char,std::char_traits<char> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG91424
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG91427
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG91430
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG91433
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG91436
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG91439
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG91442
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG91445
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG91448
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG91451
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG91454
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG91457
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@H$00@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@H$00@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG91460
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG91461
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 1
	lea	rcx, OFFSET FLAT:??_R0H@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z ENDP ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tquat<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tquat<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<int,1,glm::tquat<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<int,1,glm::tquat<int,1>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@H$00@glm@@QEAA@AEBH000@Z
_TEXT	SEGMENT
this$ = 16
w$ = 24
x$ = 32
y$ = 40
z$ = 48
??0?$tquat@H$00@glm@@QEAA@AEBH000@Z PROC		; glm::tquat<int,1>::tquat<int,1>, COMDAT

; 122  : 	{}

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 121  : 		: x(x), y(y), z(z), w(w)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR z$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+8], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR w$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+12], ecx

; 122  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tquat@H$00@glm@@QEAA@AEBH000@Z ENDP		; glm::tquat<int,1>::tquat<int,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@H$00@glm@@QEBAAEBHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tquat@H$00@glm@@QEBAAEBHH@Z PROC			; glm::tquat<int,1>::operator[], COMDAT

; 79   : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 80   : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tquat@H$00@glm@@SAHXZ		; glm::tquat<int,1>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 80					; 00000050H
	lea	rdx, OFFSET FLAT:??_C@_1IG@MLIPKIDC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 81   : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 82   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tquat@H$00@glm@@QEBAAEBHH@Z ENDP			; glm::tquat<int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\quaternion.hpp
;	COMDAT ?length@?$tquat@H$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tquat@H$00@glm@@SAHXZ PROC			; glm::tquat<int,1>::length, COMDAT

; 74   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tquat@H$00@glm@@SAHXZ ENDP			; glm::tquat<int,1>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$unformatted@_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@AEAV23@@Z
_TEXT	SEGMENT
ios$ = 48
??$unformatted@_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@AEAV23@@Z PROC ; glm::io::unformatted<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 114  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 115  : 		const_cast<format_punct<CTy>&>(get_facet<format_punct<CTy> >(ios)).formatted = false;

	mov	rcx, QWORD PTR ios$[rsp]
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	BYTE PTR [rax+16], 0

; 116  : 		return ios;

	mov	rax, QWORD PTR ios$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$unformatted@_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@AEAV23@@Z ENDP ; glm::io::unformatted<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z
_TEXT	SEGMENT
_State$ = 32
_Ok$ = 56
_Pad$4 = 88
$T5 = 96
$T6 = 98
$T7 = 100
$T8 = 102
$T9 = 104
$T10 = 106
$T11 = 112
tv130 = 120
tv65 = 128
tv283 = 132
tv284 = 136
tv285 = 144
tv286 = 152
tv287 = 160
tv288 = 162
tv289 = 168
tv290 = 176
_Ostr$ = 208
_Ch$ = 216
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 859  : basic_ostream<_Elem, _Traits>& operator<<(basic_ostream<_Elem, _Traits>& _Ostr, _Elem _Ch) { // insert a character

$LN23:
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 192				; 000000c0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 40					; 00000028H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]

; 860  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 861  : 
; 862  :     ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR _State$[rsp], 0

; 863  :     const typename _Myos::sentry _Ok(_Ostr);

	mov	rdx, QWORD PTR _Ostr$[rsp]
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 864  : 
; 865  :     if (_Ok) { // state okay, insert

	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@operator

; 866  :         streamsize _Pad = _Ostr.width() <= 1 ? 0 : _Ostr.width() - 1;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, 1
	jg	SHORT $LN15@operator
	mov	QWORD PTR tv130[rsp], 0
	jmp	SHORT $LN16@operator
$LN15@operator:
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	dec	rax
	mov	QWORD PTR tv130[rsp], rax
$LN16@operator:
	mov	rax, QWORD PTR tv130[rsp]
	mov	QWORD PTR _Pad$4[rsp], rax

; 867  : 
; 868  :         _TRY_IO_BEGIN
; 869  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv65[rsp], eax
	mov	eax, DWORD PTR tv65[rsp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN10@operator

; 870  :             for (; _State == ios_base::goodbit && 0 < _Pad; --_Pad) { // pad on left

	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	rax, QWORD PTR _Pad$4[rsp]
	dec	rax
	mov	QWORD PTR _Pad$4[rsp], rax
$LN4@operator:
	cmp	DWORD PTR _State$[rsp], 0
	jne	$LN10@operator
	cmp	QWORD PTR _Pad$4[rsp], 0
	jle	$LN10@operator

; 871  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ
	mov	WORD PTR tv283[rsp], ax
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR tv284[rsp], rax
	movzx	edx, WORD PTR tv283[rsp]
	mov	rcx, QWORD PTR tv284[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z
	mov	WORD PTR tv285[rsp], ax
	movzx	eax, WORD PTR tv285[rsp]
	mov	WORD PTR $T5[rsp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T6[rsp], ax
	lea	rdx, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR $T6[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@operator

; 872  :                     _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN11@operator:

; 873  :                 }
; 874  :             }

	jmp	$LN2@operator
$LN10@operator:

; 875  :         }
; 876  : 
; 877  :         if (_State == ios_base::goodbit && _Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ch))) {

	cmp	DWORD PTR _State$[rsp], 0
	jne	$LN12@operator
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR tv286[rsp], rax
	movzx	edx, WORD PTR _Ch$[rsp]
	mov	rcx, QWORD PTR tv286[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z
	mov	WORD PTR tv287[rsp], ax
	movzx	eax, WORD PTR tv287[rsp]
	mov	WORD PTR $T7[rsp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T8[rsp], ax
	lea	rdx, QWORD PTR $T7[rsp]
	lea	rcx, QWORD PTR $T8[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@operator

; 878  :             _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN12@operator:

; 879  :         }
; 880  : 
; 881  :         for (; _State == ios_base::goodbit && 0 < _Pad; --_Pad) { // pad on right

	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	rax, QWORD PTR _Pad$4[rsp]
	dec	rax
	mov	QWORD PTR _Pad$4[rsp], rax
$LN7@operator:
	cmp	DWORD PTR _State$[rsp], 0
	jne	$LN6@operator
	cmp	QWORD PTR _Pad$4[rsp], 0
	jle	$LN6@operator

; 882  :             if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ
	mov	WORD PTR tv288[rsp], ax
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR tv289[rsp], rax
	movzx	edx, WORD PTR tv288[rsp]
	mov	rcx, QWORD PTR tv289[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z
	mov	WORD PTR tv290[rsp], ax
	movzx	eax, WORD PTR tv290[rsp]
	mov	WORD PTR $T9[rsp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T10[rsp], ax
	lea	rdx, QWORD PTR $T9[rsp]
	lea	rcx, QWORD PTR $T10[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@operator

; 883  :                 _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN13@operator:

; 884  :             }
; 885  :         }

	jmp	$LN5@operator
$LN6@operator:
	jmp	SHORT $LN8@operator
$LN21@operator:
$LN8@operator:

; 886  :         _CATCH_IO_(ios_base, _Ostr)
; 887  :     }
; 888  : 
; 889  :     _Ostr.width(0);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z

; 890  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z

; 891  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	QWORD PTR $T11[rsp], rax
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T11[rsp]

; 892  : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 192				; 000000c0H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Pad$4 = 88
$T5 = 96
$T6 = 98
$T7 = 100
$T8 = 102
$T9 = 104
$T10 = 106
$T11 = 112
tv130 = 120
tv65 = 128
tv283 = 132
tv284 = 136
tv285 = 144
tv286 = 152
tv287 = 160
tv288 = 162
tv289 = 168
tv290 = 176
_Ostr$ = 208
_Ch$ = 216
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Pad$4 = 88
$T5 = 96
$T6 = 98
$T7 = 100
$T8 = 102
$T9 = 104
$T10 = 106
$T11 = 112
tv130 = 120
tv65 = 128
tv283 = 132
tv284 = 136
tv285 = 144
tv286 = 152
tv287 = 160
tv288 = 162
tv289 = 168
tv290 = 176
_Ostr$ = 208
_Ch$ = 216
?catch$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$1

; 886  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN21@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Pad$4 = 88
$T5 = 96
$T6 = 98
$T7 = 100
$T8 = 102
$T9 = 104
$T10 = 106
$T11 = 112
tv130 = 120
tv65 = 128
tv283 = 132
tv284 = 136
tv285 = 144
tv286 = 152
tv287 = 160
tv288 = 162
tv289 = 168
tv290 = 176
_Ostr$ = 208
_Ch$ = 216
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Pad$4 = 88
$T5 = 96
$T6 = 98
$T7 = 100
$T8 = 102
$T9 = 104
$T10 = 106
$T11 = 112
tv130 = 120
tv65 = 128
tv283 = 132
tv284 = 136
tv285 = 144
tv286 = 152
tv287 = 160
tv288 = 162
tv289 = 168
tv290 = 176
_Ostr$ = 208
_Ch$ = 216
?catch$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$1

; 886  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN21@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z PROC ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>, COMDAT

; 200  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 201  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@_WU?$char_traits@_W@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z ; glm::detail::print_vector_on<wchar_t,std::char_traits<wchar_t>,glm::tquat,float,0>

; 202  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z ENDP ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
_TEXT	SEGMENT
tv66 = 32
_Ostr$ = 64
_Str$ = 72
??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 4982 :     basic_ostream<_Elem, _Traits>& _Ostr, const basic_string<_Elem, _Traits, _Alloc>& _Str) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 4983 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	mov	rcx, QWORD PTR _Str$[rsp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	mov	QWORD PTR tv66[rsp], rax
	mov	rcx, QWORD PTR _Str$[rsp]
	call	?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::data
	mov	rcx, QWORD PTR tv66[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ostr$[rsp]
	call	??$_Insert_string@_WU?$char_traits@_W@std@@_K@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@QEB_W_K@Z ; std::_Insert_string<wchar_t,std::char_traits<wchar_t>,unsigned __int64>

; 4984 : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z PROC ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,wchar_t,std::char_traits<wchar_t> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG90426
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG90429
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG90432
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG90435
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG90438
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG90441
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG90444
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG90447
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG90450
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG90453
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG90456
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG90459
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG90462
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG90463
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 0
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z ENDP ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tquat<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tquat<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tquat<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tquat<float,0>,wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z PROC ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 128  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 129  : 		const_cast<format_punct<CTy>&>(get_facet<format_punct<CTy> >(os)).width = a.value;

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+24], ecx

; 130  : 		return os;

	mov	rax, QWORD PTR os$[rsp]

; 131  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z ENDP ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z PROC ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 121  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 122  : 		const_cast<format_punct<CTy>&>(get_facet<format_punct<CTy> >(os)).precision = a.value;

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+20], ecx

; 123  : 		return os;

	mov	rax, QWORD PTR os$[rsp]

; 124  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z ENDP ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ PROC ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 55   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 56   : 		state_.imbue(locale_);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	r8, rax
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?imbue@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAA?AVlocale@2@AEBV32@@Z
	lea	rcx, QWORD PTR $T1[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale

; 57   : 		state_.fill(fill_);

	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, WORD PTR [rax+32]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAA_W_W@Z

; 58   : 		state_.width(width_);

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+24]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z

; 59   : 		state_.precision(precision_);

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?precision@ios_base@std@@QEAA_J_J@Z

; 60   : 		state_.flags(flags_);

	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?flags@ios_base@std@@QEAAHH@Z

; 61   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	npad	1
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ENDP ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z
_TEXT	SEGMENT
this$ = 48
a$ = 56
??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z PROC ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 51   : 	{}

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 45   : 		: state_(a)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	mov	QWORD PTR [rax], rcx

; 46   : 		, flags_(a.flags())

	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+8], eax

; 47   : 		, precision_(a.precision())

	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?precision@ios_base@std@@QEBA_JXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 48   : 		, width_(a.width())

	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+24], rax

; 49   : 		, fill_(a.fill())

	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	WORD PTR [rcx+32], ax

; 50   : 		, locale_(a.getloc())

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	rdx, rax
	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?getloc@ios_base@std@@QEBA?AVlocale@2@XZ

; 51   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ENDP ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ PROC ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 73   : 	{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ENDP ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z PROC ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 66   : 	{

$LN10:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 144				; 00000090H

; 65   : 		: bss_(a)

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, rax
	call	??0?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 67   : 		a.imbue(std::locale(a.getloc(), new format_punct<CTy>(get_facet<format_punct<CTy> >(a))));

	mov	ecx, 48					; 00000030H
	call	QWORD PTR __imp_??2_Crt_new_delete@std@@SAPEAX_K@Z
	mov	QWORD PTR $T3[rsp], rax
	cmp	QWORD PTR $T3[rsp], 0
	je	SHORT $LN3@basic_form
	mov	rcx, QWORD PTR a$[rsp]
	call	??$get_facet@V?$format_punct@_W@io@glm@@_WU?$char_traits@_W@std@@@io@glm@@YAAEBV?$format_punct@_W@01@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<wchar_t>,wchar_t,std::char_traits<wchar_t> >
	mov	rdx, rax
	mov	rcx, QWORD PTR $T3[rsp]
	call	??0?$format_punct@_W@io@glm@@QEAA@AEBV012@@Z ; glm::io::format_punct<wchar_t>::format_punct<wchar_t>
	mov	QWORD PTR tv87[rsp], rax
	jmp	SHORT $LN4@basic_form
$LN3@basic_form:
	mov	QWORD PTR tv87[rsp], 0
$LN4@basic_form:
	mov	rax, QWORD PTR tv87[rsp]
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	mov	QWORD PTR tv66[rsp], rax
	mov	rax, QWORD PTR tv66[rsp]
	mov	QWORD PTR tv139[rsp], rax
	mov	r8, QWORD PTR $T2[rsp]
	mov	rdx, QWORD PTR tv139[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0V?$format_punct@_W@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@_W@io@glm@@@Z ; std::locale::locale<glm::io::format_punct<wchar_t> >
	mov	QWORD PTR tv71[rsp], rax
	mov	rax, QWORD PTR tv71[rsp]
	mov	QWORD PTR tv141[rsp], rax
	mov	r8, QWORD PTR tv141[rsp]
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?imbue@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAA?AVlocale@2@AEBV32@@Z
	lea	rcx, QWORD PTR $T5[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	npad	1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	npad	1
	lea	rcx, QWORD PTR $T4[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	npad	1

; 68   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ENDP ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$0@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$1@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	QWORD PTR __imp_??3_Crt_new_delete@std@@SAXPEAX@Z
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$2@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T4[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$3@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T1[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$0@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$basic_state_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<wchar_t,std::char_traits<wchar_t> >::~basic_state_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$1@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	QWORD PTR __imp_??3_Crt_new_delete@std@@SAXPEAX@Z
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$2@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T4[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$3@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T1[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
_Ctype_fac$4 = 104
$T5 = 112
$T6 = 128
$T7 = 130
$T8 = 132
$T9 = 134
$T10 = 136
$T11 = 138
$T12 = 144
tv137 = 152
tv139 = 160
tv320 = 168
tv323 = 176
tv324 = 184
tv325 = 188
tv326 = 192
tv327 = 200
tv328 = 202
tv329 = 208
tv330 = 216
tv331 = 218
tv332 = 224
tv333 = 232
_Ostr$ = 256
_Val$ = 264
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 653  : basic_ostream<_Elem, _Traits>& operator<<(basic_ostream<_Elem, _Traits>& _Ostr, const char* _Val) { // insert NTBS

$LN29:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 240				; 000000f0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+256]

; 654  :     ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR _State$[rsp], 0

; 655  :     streamsize _Count        = static_cast<streamsize>(_CSTD strlen(_Val));

	mov	rcx, QWORD PTR _Val$[rsp]
	call	strlen
	mov	QWORD PTR _Count$[rsp], rax

; 656  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	test	rax, rax
	jle	SHORT $LN20@operator
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, QWORD PTR _Count$[rsp]
	jle	SHORT $LN20@operator
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	sub	rax, QWORD PTR _Count$[rsp]
	mov	QWORD PTR tv137[rsp], rax
	jmp	SHORT $LN21@operator
$LN20@operator:
	mov	QWORD PTR tv137[rsp], 0
$LN21@operator:
	mov	rax, QWORD PTR tv137[rsp]
	mov	QWORD PTR _Pad$[rsp], rax

; 657  :     const typename basic_ostream<_Elem, _Traits>::sentry _Ok(_Ostr);

	mov	rdx, QWORD PTR _Ostr$[rsp]
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 658  : 
; 659  :     if (!_Ok) {

	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@operator

; 660  :         _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 661  :     } else { // state okay, insert characters

	jmp	$LN12@operator
$LN11@operator:

; 662  :         _TRY_IO_BEGIN
; 663  :         const ctype<_Elem>& _Ctype_fac = _STD use_facet<ctype<_Elem>>(_Ostr.getloc());

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	mov	QWORD PTR tv139[rsp], rax
	mov	rax, QWORD PTR tv139[rsp]
	mov	QWORD PTR tv320[rsp], rax
	mov	rcx, QWORD PTR tv320[rsp]
	call	??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
	mov	QWORD PTR tv323[rsp], rax
	mov	rax, QWORD PTR tv323[rsp]
	mov	QWORD PTR _Ctype_fac$4[rsp], rax
	lea	rcx, QWORD PTR $T5[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale

; 664  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv324[rsp], eax
	mov	eax, DWORD PTR tv324[rsp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN14@operator

; 665  :             for (; 0 < _Pad; --_Pad) { // pad on left

	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	rax, QWORD PTR _Pad$[rsp]
	dec	rax
	mov	QWORD PTR _Pad$[rsp], rax
$LN4@operator:
	cmp	QWORD PTR _Pad$[rsp], 0
	jle	$LN14@operator

; 666  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ
	mov	WORD PTR tv325[rsp], ax
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR tv326[rsp], rax
	movzx	edx, WORD PTR tv325[rsp]
	mov	rcx, QWORD PTR tv326[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z
	mov	WORD PTR tv327[rsp], ax
	movzx	eax, WORD PTR tv327[rsp]
	mov	WORD PTR $T6[rsp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T7[rsp], ax
	lea	rdx, QWORD PTR $T6[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@operator

; 667  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 668  :                     break;

	jmp	SHORT $LN14@operator
$LN15@operator:

; 669  :                 }
; 670  :             }

	jmp	$LN2@operator
$LN14@operator:

; 671  :         }
; 672  : 
; 673  :         for (; _State == ios_base::goodbit && 0 < _Count; --_Count, ++_Val) {

	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
	mov	rax, QWORD PTR _Val$[rsp]
	inc	rax
	mov	QWORD PTR _Val$[rsp], rax
$LN7@operator:
	cmp	DWORD PTR _State$[rsp], 0
	jne	$LN6@operator
	cmp	QWORD PTR _Count$[rsp], 0
	jle	$LN6@operator

; 674  :             if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ctype_fac.widen(*_Val)))) {

	mov	rax, QWORD PTR _Val$[rsp]
	movzx	edx, BYTE PTR [rax]
	mov	rcx, QWORD PTR _Ctype_fac$4[rsp]
	call	QWORD PTR __imp_?widen@?$ctype@_W@std@@QEBA_WD@Z
	mov	WORD PTR tv328[rsp], ax
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR tv329[rsp], rax
	movzx	edx, WORD PTR tv328[rsp]
	mov	rcx, QWORD PTR tv329[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z
	mov	WORD PTR tv330[rsp], ax
	movzx	eax, WORD PTR tv330[rsp]
	mov	WORD PTR $T8[rsp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T9[rsp], ax
	lea	rdx, QWORD PTR $T8[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@operator

; 675  :                 _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN16@operator:

; 676  :             }
; 677  :         }

	jmp	$LN5@operator
$LN6@operator:

; 678  : 
; 679  :         if (_State == ios_base::goodbit) {

	cmp	DWORD PTR _State$[rsp], 0
	jne	$LN17@operator

; 680  :             for (; 0 < _Pad; --_Pad) { // pad on right

	jmp	SHORT $LN10@operator
$LN8@operator:
	mov	rax, QWORD PTR _Pad$[rsp]
	dec	rax
	mov	QWORD PTR _Pad$[rsp], rax
$LN10@operator:
	cmp	QWORD PTR _Pad$[rsp], 0
	jle	$LN17@operator

; 681  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ
	mov	WORD PTR tv331[rsp], ax
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR tv332[rsp], rax
	movzx	edx, WORD PTR tv331[rsp]
	mov	rcx, QWORD PTR tv332[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z
	mov	WORD PTR tv333[rsp], ax
	movzx	eax, WORD PTR tv333[rsp]
	mov	WORD PTR $T10[rsp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T11[rsp], ax
	lea	rdx, QWORD PTR $T10[rsp]
	lea	rcx, QWORD PTR $T11[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@operator

; 682  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 683  :                     break;

	jmp	SHORT $LN17@operator
$LN18@operator:

; 684  :                 }
; 685  :             }

	jmp	$LN8@operator
$LN17@operator:

; 686  :         }
; 687  : 
; 688  :         _Ostr.width(0);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
	npad	1
	jmp	SHORT $LN12@operator
$LN27@operator:
$LN12@operator:

; 689  :         _CATCH_IO_(ios_base, _Ostr)
; 690  :     }
; 691  : 
; 692  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z

; 693  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	QWORD PTR $T12[rsp], rax
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T12[rsp]

; 694  : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
_Ctype_fac$4 = 104
$T5 = 112
$T6 = 128
$T7 = 130
$T8 = 132
$T9 = 134
$T10 = 136
$T11 = 138
$T12 = 144
tv137 = 152
tv139 = 160
tv320 = 168
tv323 = 176
tv324 = 184
tv325 = 188
tv326 = 192
tv327 = 200
tv328 = 202
tv329 = 208
tv330 = 216
tv331 = 218
tv332 = 224
tv333 = 232
_Ostr$ = 256
_Val$ = 264
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
_Ctype_fac$4 = 104
$T5 = 112
$T6 = 128
$T7 = 130
$T8 = 132
$T9 = 134
$T10 = 136
$T11 = 138
$T12 = 144
tv137 = 152
tv139 = 160
tv320 = 168
tv323 = 176
tv324 = 184
tv325 = 188
tv326 = 192
tv327 = 200
tv328 = 202
tv329 = 208
tv330 = 216
tv331 = 218
tv332 = 224
tv333 = 232
_Ostr$ = 256
_Val$ = 264
?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T5[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
_Ctype_fac$4 = 104
$T5 = 112
$T6 = 128
$T7 = 130
$T8 = 132
$T9 = 134
$T10 = 136
$T11 = 138
$T12 = 144
tv137 = 152
tv139 = 160
tv320 = 168
tv323 = 176
tv324 = 184
tv325 = 188
tv326 = 192
tv327 = 200
tv328 = 202
tv329 = 208
tv330 = 216
tv331 = 218
tv332 = 224
tv333 = 232
_Ostr$ = 256
_Val$ = 264
?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$2

; 689  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN27@catch$2
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
_Ctype_fac$4 = 104
$T5 = 112
$T6 = 128
$T7 = 130
$T8 = 132
$T9 = 134
$T10 = 136
$T11 = 138
$T12 = 144
tv137 = 152
tv139 = 160
tv320 = 168
tv323 = 176
tv324 = 184
tv325 = 188
tv326 = 192
tv327 = 200
tv328 = 202
tv329 = 208
tv330 = 216
tv331 = 218
tv332 = 224
tv333 = 232
_Ostr$ = 256
_Val$ = 264
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
_Ctype_fac$4 = 104
$T5 = 112
$T6 = 128
$T7 = 130
$T8 = 132
$T9 = 134
$T10 = 136
$T11 = 138
$T12 = 144
tv137 = 152
tv139 = 160
tv320 = 168
tv323 = 176
tv324 = 184
tv325 = 188
tv326 = 192
tv327 = 200
tv328 = 202
tv329 = 208
tv330 = 216
tv331 = 218
tv332 = 224
tv333 = 232
_Ostr$ = 256
_Val$ = 264
?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T5[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
_Ctype_fac$4 = 104
$T5 = 112
$T6 = 128
$T7 = 130
$T8 = 132
$T9 = 134
$T10 = 136
$T11 = 138
$T12 = 144
tv137 = 152
tv139 = 160
tv320 = 168
tv323 = 176
tv324 = 184
tv325 = 188
tv326 = 192
tv327 = 200
tv328 = 202
tv329 = 208
tv330 = 216
tv331 = 218
tv332 = 224
tv333 = 232
_Ostr$ = 256
_Val$ = 264
?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$2

; 689  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN27@catch$2
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z
_TEXT	SEGMENT
_State$ = 32
_Ok$ = 56
_Ctype_fac$4 = 88
_Pad$5 = 96
$T6 = 104
$T7 = 120
$T8 = 122
$T9 = 124
$T10 = 126
$T11 = 128
$T12 = 130
$T13 = 136
tv65 = 144
tv302 = 152
tv147 = 160
tv305 = 168
tv306 = 172
tv307 = 176
tv308 = 184
tv309 = 186
tv310 = 192
tv311 = 200
tv312 = 202
tv313 = 208
tv314 = 216
_Ostr$ = 240
_Ch$ = 248
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 697  : basic_ostream<_Elem, _Traits>& operator<<(basic_ostream<_Elem, _Traits>& _Ostr, char _Ch) { // insert a character

$LN24:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+240]

; 698  :     ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR _State$[rsp], 0

; 699  :     const typename basic_ostream<_Elem, _Traits>::sentry _Ok(_Ostr);

	mov	rdx, QWORD PTR _Ostr$[rsp]
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	npad	1

; 700  : 
; 701  :     if (_Ok) { // state okay, insert

	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@operator

; 702  :         const ctype<_Elem>& _Ctype_fac = _STD use_facet<ctype<_Elem>>(_Ostr.getloc());

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T6[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	mov	QWORD PTR tv65[rsp], rax
	mov	rax, QWORD PTR tv65[rsp]
	mov	QWORD PTR tv302[rsp], rax
	mov	rcx, QWORD PTR tv302[rsp]
	call	??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
	mov	QWORD PTR _Ctype_fac$4[rsp], rax
	lea	rcx, QWORD PTR $T6[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale

; 703  :         streamsize _Pad                = _Ostr.width() <= 1 ? 0 : _Ostr.width() - 1;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, 1
	jg	SHORT $LN15@operator
	mov	QWORD PTR tv147[rsp], 0
	jmp	SHORT $LN16@operator
$LN15@operator:
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	dec	rax
	mov	QWORD PTR tv147[rsp], rax
$LN16@operator:
	mov	rax, QWORD PTR tv147[rsp]
	mov	QWORD PTR _Pad$5[rsp], rax

; 704  : 
; 705  :         _TRY_IO_BEGIN
; 706  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv305[rsp], eax
	mov	eax, DWORD PTR tv305[rsp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN10@operator

; 707  :             for (; _State == ios_base::goodbit && 0 < _Pad; --_Pad) { // pad on left

	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	rax, QWORD PTR _Pad$5[rsp]
	dec	rax
	mov	QWORD PTR _Pad$5[rsp], rax
$LN4@operator:
	cmp	DWORD PTR _State$[rsp], 0
	jne	$LN10@operator
	cmp	QWORD PTR _Pad$5[rsp], 0
	jle	$LN10@operator

; 708  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ
	mov	WORD PTR tv306[rsp], ax
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR tv307[rsp], rax
	movzx	edx, WORD PTR tv306[rsp]
	mov	rcx, QWORD PTR tv307[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z
	mov	WORD PTR tv308[rsp], ax
	movzx	eax, WORD PTR tv308[rsp]
	mov	WORD PTR $T7[rsp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T8[rsp], ax
	lea	rdx, QWORD PTR $T7[rsp]
	lea	rcx, QWORD PTR $T8[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@operator

; 709  :                     _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN11@operator:

; 710  :                 }
; 711  :             }

	jmp	$LN2@operator
$LN10@operator:

; 712  :         }
; 713  : 
; 714  :         if (_State == ios_base::goodbit
; 715  :             && _Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ctype_fac.widen(_Ch)))) {

	cmp	DWORD PTR _State$[rsp], 0
	jne	$LN12@operator
	movzx	edx, BYTE PTR _Ch$[rsp]
	mov	rcx, QWORD PTR _Ctype_fac$4[rsp]
	call	QWORD PTR __imp_?widen@?$ctype@_W@std@@QEBA_WD@Z
	mov	WORD PTR tv309[rsp], ax
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR tv310[rsp], rax
	movzx	edx, WORD PTR tv309[rsp]
	mov	rcx, QWORD PTR tv310[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z
	mov	WORD PTR tv311[rsp], ax
	movzx	eax, WORD PTR tv311[rsp]
	mov	WORD PTR $T9[rsp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T10[rsp], ax
	lea	rdx, QWORD PTR $T9[rsp]
	lea	rcx, QWORD PTR $T10[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@operator

; 716  :             _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN12@operator:

; 717  :         }
; 718  : 
; 719  :         for (; _State == ios_base::goodbit && 0 < _Pad; --_Pad) { // pad on right

	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	rax, QWORD PTR _Pad$5[rsp]
	dec	rax
	mov	QWORD PTR _Pad$5[rsp], rax
$LN7@operator:
	cmp	DWORD PTR _State$[rsp], 0
	jne	$LN6@operator
	cmp	QWORD PTR _Pad$5[rsp], 0
	jle	$LN6@operator

; 720  :             if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ
	mov	WORD PTR tv312[rsp], ax
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	mov	QWORD PTR tv313[rsp], rax
	movzx	edx, WORD PTR tv312[rsp]
	mov	rcx, QWORD PTR tv313[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z
	mov	WORD PTR tv314[rsp], ax
	movzx	eax, WORD PTR tv314[rsp]
	mov	WORD PTR $T11[rsp], ax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	mov	WORD PTR $T12[rsp], ax
	lea	rdx, QWORD PTR $T11[rsp]
	lea	rcx, QWORD PTR $T12[rsp]
	call	?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ; std::_WChar_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@operator

; 721  :                 _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN13@operator:

; 722  :             }
; 723  :         }

	jmp	$LN5@operator
$LN6@operator:
	jmp	SHORT $LN8@operator
$LN22@operator:
$LN8@operator:

; 724  :         _CATCH_IO_(ios_base, _Ostr)
; 725  :     }
; 726  : 
; 727  :     _Ostr.width(0);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z

; 728  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z

; 729  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	QWORD PTR $T13[rsp], rax
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	rax, QWORD PTR $T13[rsp]

; 730  : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 224				; 000000e0H
	pop	rdi
	ret	0
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Ctype_fac$4 = 88
_Pad$5 = 96
$T6 = 104
$T7 = 120
$T8 = 122
$T9 = 124
$T10 = 126
$T11 = 128
$T12 = 130
$T13 = 136
tv65 = 144
tv302 = 152
tv147 = 160
tv305 = 168
tv306 = 172
tv307 = 176
tv308 = 184
tv309 = 186
tv310 = 192
tv311 = 200
tv312 = 202
tv313 = 208
tv314 = 216
_Ostr$ = 240
_Ch$ = 248
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Ctype_fac$4 = 88
_Pad$5 = 96
$T6 = 104
$T7 = 120
$T8 = 122
$T9 = 124
$T10 = 126
$T11 = 128
$T12 = 130
$T13 = 136
tv65 = 144
tv302 = 152
tv147 = 160
tv305 = 168
tv306 = 172
tv307 = 176
tv308 = 184
tv309 = 186
tv310 = 192
tv311 = 200
tv312 = 202
tv313 = 208
tv314 = 216
_Ostr$ = 240
_Ch$ = 248
?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T6[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Ctype_fac$4 = 88
_Pad$5 = 96
$T6 = 104
$T7 = 120
$T8 = 122
$T9 = 124
$T10 = 126
$T11 = 128
$T12 = 130
$T13 = 136
tv65 = 144
tv302 = 152
tv147 = 160
tv305 = 168
tv306 = 172
tv307 = 176
tv308 = 184
tv309 = 186
tv310 = 192
tv311 = 200
tv312 = 202
tv313 = 208
tv314 = 216
_Ostr$ = 240
_Ch$ = 248
?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$2

; 724  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN22@catch$2
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Ctype_fac$4 = 88
_Pad$5 = 96
$T6 = 104
$T7 = 120
$T8 = 122
$T9 = 124
$T10 = 126
$T11 = 128
$T12 = 130
$T13 = 136
tv65 = 144
tv302 = 152
tv147 = 160
tv305 = 168
tv306 = 172
tv307 = 176
tv308 = 184
tv309 = 186
tv310 = 192
tv311 = 200
tv312 = 202
tv313 = 208
tv314 = 216
_Ostr$ = 240
_Ch$ = 248
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Ctype_fac$4 = 88
_Pad$5 = 96
$T6 = 104
$T7 = 120
$T8 = 122
$T9 = 124
$T10 = 126
$T11 = 128
$T12 = 130
$T13 = 136
tv65 = 144
tv302 = 152
tv147 = 160
tv305 = 168
tv306 = 172
tv307 = 176
tv308 = 184
tv309 = 186
tv310 = 192
tv311 = 200
tv312 = 202
tv313 = 208
tv314 = 216
_Ostr$ = 240
_Ch$ = 248
?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T6[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Ctype_fac$4 = 88
_Pad$5 = 96
$T6 = 104
$T7 = 120
$T8 = 122
$T9 = 124
$T10 = 126
$T11 = 128
$T12 = 130
$T13 = 136
tv65 = 144
tv302 = 152
tv147 = 160
tv305 = 168
tv306 = 172
tv307 = 176
tv308 = 184
tv309 = 186
tv310 = 192
tv311 = 200
tv312 = 202
tv313 = 208
tv314 = 216
_Ostr$ = 240
_Ch$ = 248
?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$2

; 724  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN22@catch$2
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$2@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$unformatted@DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ios@DU?$char_traits@D@std@@@std@@AEAV23@@Z
_TEXT	SEGMENT
ios$ = 48
??$unformatted@DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ios@DU?$char_traits@D@std@@@std@@AEAV23@@Z PROC ; glm::io::unformatted<char,std::char_traits<char> >, COMDAT

; 114  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 115  : 		const_cast<format_punct<CTy>&>(get_facet<format_punct<CTy> >(ios)).formatted = false;

	mov	rcx, QWORD PTR ios$[rsp]
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	BYTE PTR [rax+16], 0

; 116  : 		return ios;

	mov	rax, QWORD PTR ios$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$unformatted@DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ios@DU?$char_traits@D@std@@@std@@AEAV23@@Z ENDP ; glm::io::unformatted<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z PROC ; glm::operator<<<char,std::char_traits<char>,float,0>, COMDAT

; 200  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 201  : 		return detail::print_vector_on(os, a);

	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$print_vector_on@DU?$char_traits@D@std@@Utquat@glm@@M$0A@@detail@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBU?$tquat@M$0A@@1@@Z ; glm::detail::print_vector_on<char,std::char_traits<char>,glm::tquat,float,0>

; 202  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z ENDP ; glm::operator<<<char,std::char_traits<char>,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
tv66 = 32
_Ostr$ = 64
_Str$ = 72
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4982 :     basic_ostream<_Elem, _Traits>& _Ostr, const basic_string<_Elem, _Traits, _Alloc>& _Str) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 4983 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	mov	rcx, QWORD PTR _Str$[rsp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	QWORD PTR tv66[rsp], rax
	mov	rcx, QWORD PTR _Str$[rsp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	rcx, QWORD PTR tv66[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ostr$[rsp]
	call	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>

; 4984 : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z
_TEXT	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z PROC ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,char,std::char_traits<char> >, COMDAT

; 33   : 	{

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+336]
	mov	DWORD PTR $T5[rsp], 0

; 34   : 		std::basic_ostringstream<CTy,CTr> ostr;

	mov	edx, 1
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 35   : 
; 36   : 		if      (typeid(T) == typeid(glm::tquat<U,P>))   { ostr << "quat"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@type_name
	lea	rdx, OFFSET FLAT:$SG90127
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN2@type_name:

; 37   : 		else if (typeid(T) == typeid(glm::tvec2<U,P>))   { ostr << "vec2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@type_name
	lea	rdx, OFFSET FLAT:$SG90130
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN4@type_name:

; 38   : 		else if (typeid(T) == typeid(glm::tvec3<U,P>))   { ostr << "vec3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@type_name
	lea	rdx, OFFSET FLAT:$SG90133
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN6@type_name:

; 39   : 		else if (typeid(T) == typeid(glm::tvec4<U,P>))   { ostr << "vec4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tvec4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@type_name
	lea	rdx, OFFSET FLAT:$SG90136
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN8@type_name:

; 40   : 		else if (typeid(T) == typeid(glm::tmat2x2<U,P>)) { ostr << "mat2x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@type_name
	lea	rdx, OFFSET FLAT:$SG90139
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN10@type_name:

; 41   : 		else if (typeid(T) == typeid(glm::tmat2x3<U,P>)) { ostr << "mat2x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@type_name
	lea	rdx, OFFSET FLAT:$SG90142
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN12@type_name:

; 42   : 		else if (typeid(T) == typeid(glm::tmat2x4<U,P>)) { ostr << "mat2x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat2x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@type_name
	lea	rdx, OFFSET FLAT:$SG90145
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN14@type_name:

; 43   : 		else if (typeid(T) == typeid(glm::tmat3x2<U,P>)) { ostr << "mat3x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@type_name
	lea	rdx, OFFSET FLAT:$SG90148
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN16@type_name:

; 44   : 		else if (typeid(T) == typeid(glm::tmat3x3<U,P>)) { ostr << "mat3x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@type_name
	lea	rdx, OFFSET FLAT:$SG90151
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN18@type_name:

; 45   : 		else if (typeid(T) == typeid(glm::tmat3x4<U,P>)) { ostr << "mat3x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat3x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@type_name
	lea	rdx, OFFSET FLAT:$SG90154
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN3@type_name
$LN20@type_name:

; 46   : 		else if (typeid(T) == typeid(glm::tmat4x2<U,P>)) { ostr << "mat4x2"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x2@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@type_name
	lea	rdx, OFFSET FLAT:$SG90157
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN22@type_name:

; 47   : 		else if (typeid(T) == typeid(glm::tmat4x3<U,P>)) { ostr << "mat4x3"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x3@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@type_name
	lea	rdx, OFFSET FLAT:$SG90160
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN24@type_name:

; 48   : 		else if (typeid(T) == typeid(glm::tmat4x4<U,P>)) { ostr << "mat4x4"; }

	lea	rdx, OFFSET FLAT:??_R0?AU?$tmat4x4@M$0A@@glm@@@8
	lea	rcx, OFFSET FLAT:??_R0?AU?$tquat@M$0A@@glm@@@8
	call	??8type_info@@QEBA_NAEBV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@type_name
	lea	rdx, OFFSET FLAT:$SG90163
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN3@type_name
$LN26@type_name:

; 49   : 		else                                             { ostr << "unknown"; }

	lea	rdx, OFFSET FLAT:$SG90164
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN3@type_name:

; 50   : 
; 51   : 		ostr << '<' << typeid(U).name() << ',' << P << '>';

	mov	DWORD PTR $T4[rsp], 0
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv257[rsp], rax
	mov	dl, 60					; 0000003cH
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv257[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	mov	dl, 62					; 0000003eH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 52   : 
; 53   : 		return ostr.str();

	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	lea	rcx, QWORD PTR ostr$[rsp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	lea	rcx, QWORD PTR ostr$[rsp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 320				; 00000140H
	pop	rdi
	ret	0
??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z ENDP ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tquat<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tquat<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ostr$ = 48
$T4 = 292
$T5 = 296
tv257 = 304
__$ReturnUdt$ = 336
os$ = 344
__formal$ = 352
?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA PROC ; ``anonymous namespace'::type_name<float,0,glm::tquat<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR ostr$[rbp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z@4HA ENDP ; ``anonymous namespace'::type_name<float,0,glm::tquat<float,0>,char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z PROC ; glm::io::operator<<<char,std::char_traits<char> >, COMDAT

; 128  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 129  : 		const_cast<format_punct<CTy>&>(get_facet<format_punct<CTy> >(os)).width = a.value;

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+24], ecx

; 130  : 		return os;

	mov	rax, QWORD PTR os$[rsp]

; 131  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z ENDP ; glm::io::operator<<<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z
_TEXT	SEGMENT
os$ = 48
a$ = 56
??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z PROC ; glm::io::operator<<<char,std::char_traits<char> >, COMDAT

; 121  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 122  : 		const_cast<format_punct<CTy>&>(get_facet<format_punct<CTy> >(os)).precision = a.value;

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+20], ecx

; 123  : 		return os;

	mov	rax, QWORD PTR os$[rsp]

; 124  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z ENDP ; glm::io::operator<<<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ PROC ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >, COMDAT

; 55   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 56   : 		state_.imbue(locale_);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	r8, rax
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?imbue@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAA?AVlocale@2@AEBV32@@Z
	lea	rcx, QWORD PTR $T1[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale

; 57   : 		state_.fill(fill_);

	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR [rax+32]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAADD@Z

; 58   : 		state_.width(width_);

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+24]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z

; 59   : 		state_.precision(precision_);

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?precision@ios_base@std@@QEAA_J_J@Z

; 60   : 		state_.flags(flags_);

	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?flags@ios_base@std@@QEAAHH@Z

; 61   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	npad	1
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ENDP ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
this$ = 48
a$ = 56
??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z PROC ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >, COMDAT

; 51   : 	{}

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 45   : 		: state_(a)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	mov	QWORD PTR [rax], rcx

; 46   : 		, flags_(a.flags())

	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+8], eax

; 47   : 		, precision_(a.precision())

	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?precision@ios_base@std@@QEBA_JXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 48   : 		, width_(a.width())

	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+24], rax

; 49   : 		, fill_(a.fill())

	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	BYTE PTR [rcx+32], al

; 50   : 		, locale_(a.getloc())

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	rdx, rax
	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?getloc@ios_base@std@@QEBA?AVlocale@2@XZ

; 51   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ENDP ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ PROC ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >, COMDAT

; 73   : 	{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ENDP ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z PROC ; glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >, COMDAT

; 66   : 	{

$LN10:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 144				; 00000090H

; 65   : 		: bss_(a)

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR a$[rsp]
	mov	rcx, rax
	call	??0?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_state_saver<char,std::char_traits<char> >::basic_state_saver<char,std::char_traits<char> >
	npad	1

; 67   : 		a.imbue(std::locale(a.getloc(), new format_punct<CTy>(get_facet<format_punct<CTy> >(a))));

	mov	ecx, 40					; 00000028H
	call	QWORD PTR __imp_??2_Crt_new_delete@std@@SAPEAX_K@Z
	mov	QWORD PTR $T3[rsp], rax
	cmp	QWORD PTR $T3[rsp], 0
	je	SHORT $LN3@basic_form
	mov	rcx, QWORD PTR a$[rsp]
	call	??$get_facet@V?$format_punct@D@io@glm@@DU?$char_traits@D@std@@@io@glm@@YAAEBV?$format_punct@D@01@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::get_facet<glm::io::format_punct<char>,char,std::char_traits<char> >
	mov	rdx, rax
	mov	rcx, QWORD PTR $T3[rsp]
	call	??0?$format_punct@D@io@glm@@QEAA@AEBV012@@Z ; glm::io::format_punct<char>::format_punct<char>
	mov	QWORD PTR tv87[rsp], rax
	jmp	SHORT $LN4@basic_form
$LN3@basic_form:
	mov	QWORD PTR tv87[rsp], 0
$LN4@basic_form:
	mov	rax, QWORD PTR tv87[rsp]
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	mov	QWORD PTR tv66[rsp], rax
	mov	rax, QWORD PTR tv66[rsp]
	mov	QWORD PTR tv139[rsp], rax
	mov	r8, QWORD PTR $T2[rsp]
	mov	rdx, QWORD PTR tv139[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0V?$format_punct@D@io@glm@@@locale@std@@QEAA@AEBV01@PEBV?$format_punct@D@io@glm@@@Z ; std::locale::locale<glm::io::format_punct<char> >
	mov	QWORD PTR tv71[rsp], rax
	mov	rax, QWORD PTR tv71[rsp]
	mov	QWORD PTR tv141[rsp], rax
	mov	r8, QWORD PTR tv141[rsp]
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	call	QWORD PTR __imp_?imbue@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAA?AVlocale@2@AEBV32@@Z
	lea	rcx, QWORD PTR $T5[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	npad	1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	npad	1
	lea	rcx, QWORD PTR $T4[rsp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	npad	1

; 68   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ENDP ; glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$0@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$1@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	QWORD PTR __imp_??3_Crt_new_delete@std@@SAXPEAX@Z
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$2@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T4[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$3@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T1[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$0@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$basic_state_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_state_saver<char,std::char_traits<char> >::~basic_state_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$1@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	QWORD PTR __imp_??3_Crt_new_delete@std@@SAXPEAX@Z
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$2@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T4[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 56
$T4 = 64
$T5 = 80
tv87 = 96
tv66 = 104
tv139 = 112
tv71 = 120
tv141 = 128
this$ = 160
a$ = 168
?dtor$3@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T1[rbp]
	call	??1locale@std@@QEAA@XZ			; std::locale::~locale
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$0A@@glm@@QEAA@AEBM000@Z
_TEXT	SEGMENT
this$ = 16
w$ = 24
x$ = 32
y$ = 40
z$ = 48
??0?$tquat@M$0A@@glm@@QEAA@AEBM000@Z PROC		; glm::tquat<float,0>::tquat<float,0>, COMDAT

; 122  : 	{}

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 121  : 		: x(x), y(y), z(z), w(w)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR z$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR w$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax+12], xmm0

; 122  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tquat@M$0A@@glm@@QEAA@AEBM000@Z ENDP		; glm::tquat<float,0>::tquat<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tquat@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tquat<float,0>::operator[], COMDAT

; 79   : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 80   : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tquat@M$0A@@glm@@SAHXZ	; glm::tquat<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 80					; 00000050H
	lea	rdx, OFFSET FLAT:??_C@_1IG@MLIPKIDC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 81   : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 82   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tquat@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tquat<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtc\quaternion.hpp
;	COMDAT ?length@?$tquat@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tquat@M$0A@@glm@@SAHXZ PROC			; glm::tquat<float,0>::length, COMDAT

; 74   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tquat@M$0A@@glm@@SAHXZ ENDP			; glm::tquat<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
$T4 = 100
$T5 = 104
$T6 = 108
$T7 = 112
$T8 = 120
tv137 = 128
tv139 = 136
tv294 = 140
tv295 = 144
tv296 = 152
tv297 = 160
tv298 = 168
tv299 = 176
tv300 = 184
tv301 = 192
_Ostr$ = 224
_Val$ = 232
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 734  :     const char* _Val) { // insert NTBS into char stream

$LN25:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 208				; 000000d0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 44					; 0000002cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+224]

; 735  :     using _Elem = char;
; 736  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 737  : 
; 738  :     ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR _State$[rsp], 0

; 739  :     streamsize _Count        = static_cast<streamsize>(_Traits::length(_Val));

	mov	rcx, QWORD PTR _Val$[rsp]
	call	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
	mov	QWORD PTR _Count$[rsp], rax

; 740  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	test	rax, rax
	jle	SHORT $LN17@operator
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, QWORD PTR _Count$[rsp]
	jle	SHORT $LN17@operator
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	sub	rax, QWORD PTR _Count$[rsp]
	mov	QWORD PTR tv137[rsp], rax
	jmp	SHORT $LN18@operator
$LN17@operator:
	mov	QWORD PTR tv137[rsp], 0
$LN18@operator:
	mov	rax, QWORD PTR tv137[rsp]
	mov	QWORD PTR _Pad$[rsp], rax

; 741  :     const typename _Myos::sentry _Ok(_Ostr);

	mov	rdx, QWORD PTR _Ostr$[rsp]
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 742  : 
; 743  :     if (!_Ok) {

	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@operator

; 744  :         _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 745  :     } else { // state okay, insert

	jmp	$LN9@operator
$LN8@operator:

; 746  :         _TRY_IO_BEGIN
; 747  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv139[rsp], eax
	mov	eax, DWORD PTR tv139[rsp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator

; 748  :             for (; 0 < _Pad; --_Pad) { // pad on left

	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	rax, QWORD PTR _Pad$[rsp]
	dec	rax
	mov	QWORD PTR _Pad$[rsp], rax
$LN4@operator:
	cmp	QWORD PTR _Pad$[rsp], 0
	jle	$LN11@operator

; 749  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv294[rsp], al
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv295[rsp], rax
	movzx	edx, BYTE PTR tv294[rsp]
	mov	rcx, QWORD PTR tv295[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv296[rsp], eax
	mov	eax, DWORD PTR tv296[rsp]
	mov	DWORD PTR $T4[rsp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[rsp], eax
	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR $T5[rsp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@operator

; 750  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 751  :                     break;

	jmp	SHORT $LN11@operator
$LN12@operator:

; 752  :                 }
; 753  :             }

	jmp	$LN2@operator
$LN11@operator:

; 754  :         }
; 755  : 
; 756  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

	cmp	DWORD PTR _State$[rsp], 0
	jne	SHORT $LN13@operator
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv297[rsp], rax
	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Val$[rsp]
	mov	rcx, QWORD PTR tv297[rsp]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	mov	QWORD PTR tv298[rsp], rax
	mov	rax, QWORD PTR _Count$[rsp]
	cmp	QWORD PTR tv298[rsp], rax
	je	SHORT $LN13@operator

; 757  :             _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN13@operator:

; 758  :         }
; 759  : 
; 760  :         if (_State == ios_base::goodbit) {

	cmp	DWORD PTR _State$[rsp], 0
	jne	$LN14@operator

; 761  :             for (; 0 < _Pad; --_Pad) { // pad on right

	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	rax, QWORD PTR _Pad$[rsp]
	dec	rax
	mov	QWORD PTR _Pad$[rsp], rax
$LN7@operator:
	cmp	QWORD PTR _Pad$[rsp], 0
	jle	$LN14@operator

; 762  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv299[rsp], al
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv300[rsp], rax
	movzx	edx, BYTE PTR tv299[rsp]
	mov	rcx, QWORD PTR tv300[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv301[rsp], eax
	mov	eax, DWORD PTR tv301[rsp]
	mov	DWORD PTR $T6[rsp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T7[rsp], eax
	lea	rdx, QWORD PTR $T6[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@operator

; 763  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 764  :                     break;

	jmp	SHORT $LN14@operator
$LN15@operator:

; 765  :                 }
; 766  :             }

	jmp	$LN5@operator
$LN14@operator:

; 767  :         }
; 768  : 
; 769  :         _Ostr.width(0);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
	npad	1
	jmp	SHORT $LN9@operator
$LN23@operator:
$LN9@operator:

; 770  :         _CATCH_IO_(ios_base, _Ostr)
; 771  :     }
; 772  : 
; 773  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 774  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	QWORD PTR $T8[rsp], rax
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T8[rsp]

; 775  : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 208				; 000000d0H
	pop	rdi
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
$T4 = 100
$T5 = 104
$T6 = 108
$T7 = 112
$T8 = 120
tv137 = 128
tv139 = 136
tv294 = 140
tv295 = 144
tv296 = 152
tv297 = 160
tv298 = 168
tv299 = 176
tv300 = 184
tv301 = 192
_Ostr$ = 224
_Val$ = 232
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
$T4 = 100
$T5 = 104
$T6 = 108
$T7 = 112
$T8 = 120
tv137 = 128
tv139 = 136
tv294 = 140
tv295 = 144
tv296 = 152
tv297 = 160
tv298 = 168
tv299 = 176
tv300 = 184
tv301 = 192
_Ostr$ = 224
_Val$ = 232
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 770  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
$T4 = 100
$T5 = 104
$T6 = 108
$T7 = 112
$T8 = 120
tv137 = 128
tv139 = 136
tv294 = 140
tv295 = 144
tv296 = 152
tv297 = 160
tv298 = 168
tv299 = 176
tv300 = 184
tv301 = 192
_Ostr$ = 224
_Val$ = 232
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
$T4 = 100
$T5 = 104
$T6 = 108
$T7 = 112
$T8 = 120
tv137 = 128
tv139 = 136
tv294 = 140
tv295 = 144
tv296 = 152
tv297 = 160
tv298 = 168
tv299 = 176
tv300 = 184
tv301 = 192
_Ostr$ = 224
_Val$ = 232
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 770  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
_TEXT	SEGMENT
_State$ = 32
_Ok$ = 56
_Pad$4 = 88
$T5 = 96
$T6 = 100
$T7 = 104
$T8 = 108
$T9 = 112
$T10 = 116
$T11 = 120
tv130 = 128
tv65 = 136
tv283 = 140
tv284 = 144
tv285 = 152
tv286 = 160
tv287 = 168
tv288 = 172
tv289 = 176
tv290 = 184
_Ostr$ = 208
_Ch$ = 216
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 779  :     basic_ostream<char, _Traits>& _Ostr, char _Ch) { // insert a char into char stream

$LN23:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 192				; 000000c0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 40					; 00000028H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]

; 780  :     using _Elem = char;
; 781  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 782  : 
; 783  :     ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR _State$[rsp], 0

; 784  :     const typename _Myos::sentry _Ok(_Ostr);

	mov	rdx, QWORD PTR _Ostr$[rsp]
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 785  : 
; 786  :     if (_Ok) { // state okay, insert

	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@operator

; 787  :         streamsize _Pad = _Ostr.width() <= 1 ? 0 : _Ostr.width() - 1;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, 1
	jg	SHORT $LN15@operator
	mov	QWORD PTR tv130[rsp], 0
	jmp	SHORT $LN16@operator
$LN15@operator:
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	dec	rax
	mov	QWORD PTR tv130[rsp], rax
$LN16@operator:
	mov	rax, QWORD PTR tv130[rsp]
	mov	QWORD PTR _Pad$4[rsp], rax

; 788  : 
; 789  :         _TRY_IO_BEGIN
; 790  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv65[rsp], eax
	mov	eax, DWORD PTR tv65[rsp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN10@operator

; 791  :             for (; _State == ios_base::goodbit && 0 < _Pad; --_Pad) { // pad on left

	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	rax, QWORD PTR _Pad$4[rsp]
	dec	rax
	mov	QWORD PTR _Pad$4[rsp], rax
$LN4@operator:
	cmp	DWORD PTR _State$[rsp], 0
	jne	$LN10@operator
	cmp	QWORD PTR _Pad$4[rsp], 0
	jle	$LN10@operator

; 792  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv283[rsp], al
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv284[rsp], rax
	movzx	edx, BYTE PTR tv283[rsp]
	mov	rcx, QWORD PTR tv284[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv285[rsp], eax
	mov	eax, DWORD PTR tv285[rsp]
	mov	DWORD PTR $T5[rsp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T6[rsp], eax
	lea	rdx, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR $T6[rsp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@operator

; 793  :                     _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN11@operator:

; 794  :                 }
; 795  :             }

	jmp	$LN2@operator
$LN10@operator:

; 796  :         }
; 797  : 
; 798  :         if (_State == ios_base::goodbit && _Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ch))) {

	cmp	DWORD PTR _State$[rsp], 0
	jne	$LN12@operator
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv286[rsp], rax
	movzx	edx, BYTE PTR _Ch$[rsp]
	mov	rcx, QWORD PTR tv286[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv287[rsp], eax
	mov	eax, DWORD PTR tv287[rsp]
	mov	DWORD PTR $T7[rsp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T8[rsp], eax
	lea	rdx, QWORD PTR $T7[rsp]
	lea	rcx, QWORD PTR $T8[rsp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@operator

; 799  :             _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN12@operator:

; 800  :         }
; 801  : 
; 802  :         for (; _State == ios_base::goodbit && 0 < _Pad; --_Pad) { // pad on right

	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	rax, QWORD PTR _Pad$4[rsp]
	dec	rax
	mov	QWORD PTR _Pad$4[rsp], rax
$LN7@operator:
	cmp	DWORD PTR _State$[rsp], 0
	jne	$LN6@operator
	cmp	QWORD PTR _Pad$4[rsp], 0
	jle	$LN6@operator

; 803  :             if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv288[rsp], al
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv289[rsp], rax
	movzx	edx, BYTE PTR tv288[rsp]
	mov	rcx, QWORD PTR tv289[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv290[rsp], eax
	mov	eax, DWORD PTR tv290[rsp]
	mov	DWORD PTR $T9[rsp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T10[rsp], eax
	lea	rdx, QWORD PTR $T9[rsp]
	lea	rcx, QWORD PTR $T10[rsp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@operator

; 804  :                 _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN13@operator:

; 805  :             }
; 806  :         }

	jmp	$LN5@operator
$LN6@operator:
	jmp	SHORT $LN8@operator
$LN21@operator:
$LN8@operator:

; 807  :         _CATCH_IO_(ios_base, _Ostr)
; 808  :     }
; 809  : 
; 810  :     _Ostr.width(0);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z

; 811  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 812  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	QWORD PTR $T11[rsp], rax
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T11[rsp]

; 813  : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 192				; 000000c0H
	pop	rdi
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Pad$4 = 88
$T5 = 96
$T6 = 100
$T7 = 104
$T8 = 108
$T9 = 112
$T10 = 116
$T11 = 120
tv130 = 128
tv65 = 136
tv283 = 140
tv284 = 144
tv285 = 152
tv286 = 160
tv287 = 168
tv288 = 172
tv289 = 176
tv290 = 184
_Ostr$ = 208
_Ch$ = 216
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Pad$4 = 88
$T5 = 96
$T6 = 100
$T7 = 104
$T8 = 108
$T9 = 112
$T10 = 116
$T11 = 120
tv130 = 128
tv65 = 136
tv283 = 140
tv284 = 144
tv285 = 152
tv286 = 160
tv287 = 168
tv288 = 172
tv289 = 176
tv290 = 184
_Ostr$ = 208
_Ch$ = 216
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 807  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN21@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Pad$4 = 88
$T5 = 96
$T6 = 100
$T7 = 104
$T8 = 108
$T9 = 112
$T10 = 116
$T11 = 120
tv130 = 128
tv65 = 136
tv283 = 140
tv284 = 144
tv285 = 152
tv286 = 160
tv287 = 168
tv288 = 172
tv289 = 176
tv290 = 184
_Ostr$ = 208
_Ch$ = 216
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ok$ = 56
_Pad$4 = 88
$T5 = 96
$T6 = 100
$T7 = 104
$T8 = 108
$T9 = 112
$T10 = 116
$T11 = 120
tv130 = 128
tv65 = 136
tv283 = 140
tv284 = 144
tv285 = 152
tv286 = 160
tv287 = 168
tv288 = 172
tv289 = 176
tv290 = 184
_Ostr$ = 208
_Ch$ = 216
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 807  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN21@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Count$ = 48
_Ptrdest$ = 56
_Ptrnext$1 = 64
_Ptr$ = 96
__formal$ = 104
__formal$ = 112
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 522  : _Elem* __CRTDECL _Maklocstr(const char* _Ptr, _Elem*, const _Locinfo::_Cvtvec&) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 523  :     // convert C string to _Elem sequence using _Cvtvec
; 524  :     size_t _Count = _CSTD strlen(_Ptr) + 1;

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	strlen
	inc	rax
	mov	QWORD PTR _Count$[rsp], rax

; 525  : 
; 526  :     _Elem* _Ptrdest = static_cast<_Elem*>(_calloc_dbg(_Count, sizeof(_Elem), _CRT_BLOCK, __FILE__, __LINE__));

	mov	DWORD PTR [rsp+32], 526			; 0000020eH
	lea	r9, OFFSET FLAT:$SG89751
	mov	r8d, 2
	mov	edx, 1
	mov	rcx, QWORD PTR _Count$[rsp]
	call	QWORD PTR __imp__calloc_dbg
	mov	QWORD PTR _Ptrdest$[rsp], rax

; 527  : 
; 528  :     if (!_Ptrdest) {

	cmp	QWORD PTR _Ptrdest$[rsp], 0
	jne	SHORT $LN5@Maklocstr

; 529  :         _Xbad_alloc();

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN5@Maklocstr:

; 530  :     }
; 531  : 
; 532  :     for (_Elem* _Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr) {

	mov	rax, QWORD PTR _Ptrdest$[rsp]
	mov	QWORD PTR _Ptrnext$1[rsp], rax
	jmp	SHORT $LN4@Maklocstr
$LN2@Maklocstr:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
	mov	rax, QWORD PTR _Ptrnext$1[rsp]
	inc	rax
	mov	QWORD PTR _Ptrnext$1[rsp], rax
	mov	rax, QWORD PTR _Ptr$[rsp]
	inc	rax
	mov	QWORD PTR _Ptr$[rsp], rax
$LN4@Maklocstr:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Maklocstr

; 533  :         *_Ptrnext = static_cast<_Elem>(static_cast<unsigned char>(*_Ptr));

	mov	rax, QWORD PTR _Ptrnext$1[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	movzx	ecx, BYTE PTR [rcx]
	mov	BYTE PTR [rax], cl

; 534  :     }

	jmp	SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 535  : 
; 536  :     return _Ptrdest;

	mov	rax, QWORD PTR _Ptrdest$[rsp]
$LN6@Maklocstr:

; 537  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\memory
;	COMDAT ??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>, COMDAT

; 3173 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t{}, _Ptr) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	lea	r8, QWORD PTR _Ptr$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\memory
;	COMDAT ?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release, COMDAT

; 3258 :     pointer release() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 3259 :         return _STD exchange(_Mypair._Myval2, nullptr);

	mov	QWORD PTR $T1[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rax
	call	??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z ; std::exchange<std::_Facet_base *,std::nullptr_t>

; 3260 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\memory
;	COMDAT ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >, COMDAT

; 3228 :     ~unique_ptr() noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 3229 :         if (_Mypair._Myval2) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@unique_ptr

; 3230 :             _Mypair._Get_first()(_Mypair._Myval2);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ; std::default_delete<std::_Facet_base>::operator()
$LN2@unique_ptr:

; 3231 :         }
; 3232 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\memory
;	COMDAT ??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z
_TEXT	SEGMENT
$T1 = 32
tv70 = 40
this$ = 64
_Ptr$ = 72
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z PROC ; std::default_delete<std::_Facet_base>::operator(), COMDAT

; 3118 :     void operator()(_Ty* _Ptr) const noexcept /* strengthened */ { // delete a pointer

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 3119 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 3120 :         delete _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@operator
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv70[rsp], rax
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	QWORD PTR tv70[rsp], 0
$LN4@operator:

; 3121 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ENDP ; std::default_delete<std::_Facet_base>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Get_size_of_n@$01@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$01@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<2>, COMDAT

; 59   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 60   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 61   : 
; 62   :     if constexpr (_Overflow_is_possible) {
; 63   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 64   :         if (_Count > _Max_possible) {

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

	mov	rax, QWORD PTR _Count$[rsp]
	shl	rax, 1
$LN3@Get_size_o:

; 70   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$01@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Count$ = 32
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 59   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 60   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 0

; 61   : 
; 62   :     if constexpr (_Overflow_is_possible) {
; 63   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 64   :         if (_Count > _Max_possible) {
; 65   :             _Throw_bad_array_new_length(); // multiply overflow
; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

	mov	rax, QWORD PTR _Count$[rsp]

; 70   : }

	add	rsp, 16
	pop	rdi
	ret	0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 276  : }

	pop	rdi
	ret	0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 276  : }

	pop	rdi
	ret	0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 48
?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z PROC ; std::pointer_traits<char *>::pointer_to, COMDAT

; 196  :     _NODISCARD static _CONSTEXPR20 pointer pointer_to(_Reftype _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 197  :         return _STD addressof(_Val);

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$addressof@D@std@@YAPEADAEAD@Z	; std::addressof<char>

; 198  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ENDP ; std::pointer_traits<char *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > const >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 276  : }

	pop	rdi
	ret	0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z PROC ; std::_Construct_in_place<wchar_t *,wchar_t * const &>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {
; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 155  :     } else
; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Obj$[rsp]
	call	??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ; std::addressof<wchar_t *>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAPEA_W@std@@YAPEAXPEAPEA_W@Z ; std::_Voidify_iter<wchar_t * *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z ; std::forward<wchar_t * const &>
	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax

; 159  :     }
; 160  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ENDP ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 276  : }

	pop	rdi
	ret	0
??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ?pointer_to@?$pointer_traits@PEA_W@std@@SAPEA_WAEA_W@Z
_TEXT	SEGMENT
_Val$ = 48
?pointer_to@?$pointer_traits@PEA_W@std@@SAPEA_WAEA_W@Z PROC ; std::pointer_traits<wchar_t *>::pointer_to, COMDAT

; 196  :     _NODISCARD static _CONSTEXPR20 pointer pointer_to(_Reftype _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 197  :         return _STD addressof(_Val);

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$addressof@_W@std@@YAPEA_WAEA_W@Z	; std::addressof<wchar_t>

; 198  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?pointer_to@?$pointer_traits@PEA_W@std@@SAPEA_WAEA_W@Z ENDP ; std::pointer_traits<wchar_t *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 251  : _CONSTEXPR20_DYNALLOC void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 252  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 253  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 254  :     if (_STD is_constant_evaluated()) {
; 255  :         ::operator delete(_Ptr);
; 256  :     } else
; 257  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 258  :     {
; 259  : #if defined(_M_IX86) || defined(_M_X64)
; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rsp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 261  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	rdx, QWORD PTR _Bytes$[rsp]
	lea	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
$LN2@Deallocate:

; 262  :         }
; 263  : #endif // defined(_M_IX86) || defined(_M_X64)
; 264  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, QWORD PTR _Bytes$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1

; 265  :     }
; 266  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 230  : __declspec(allocator) _CONSTEXPR20_DYNALLOC void* _Allocate(const size_t _Bytes) {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 231  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 232  : #if defined(_M_IX86) || defined(_M_X64)
; 233  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 234  :     if (!_STD is_constant_evaluated())
; 235  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 236  :     {
; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rsp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

	cmp	QWORD PTR _Bytes$[rsp], 0
	je	SHORT $LN3@Allocate

; 244  :         return _Traits::_Allocate(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 248  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 59   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 60   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 61   : 
; 62   :     if constexpr (_Overflow_is_possible) {
; 63   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 64   :         if (_Count > _Max_possible) {

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 70   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
;	COMDAT ??$max@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$max@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::max<unsigned __int64>, COMDAT

; 42   :     const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Left < _Right)) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 43   :     // return larger of _Left and _Right
; 44   :     return _Left < _Right ? _Right : _Left;

	mov	rax, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@max
	mov	rax, QWORD PTR _Right$[rsp]
	mov	QWORD PTR tv65[rsp], rax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	rax, QWORD PTR _Left$[rsp]
	mov	QWORD PTR tv65[rsp], rax
$LN4@max:
	mov	rax, QWORD PTR tv65[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]

; 45   : }

	add	rsp, 16
	pop	rdi
	ret	0
??$max@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::max<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z PROC ; std::_Construct_in_place<char *,char * &>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {
; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 155  :     } else
; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Obj$[rsp]
	call	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z ; std::_Voidify_iter<char * *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ; std::forward<char * &>
	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax

; 159  :     }
; 160  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z ENDP ; std::_Construct_in_place<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 289  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 290  : }

	pop	rdi
	ret	0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {
; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 155  :     } else
; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Obj$[rsp]
	call	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z ; std::_Voidify_iter<char * *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ; std::forward<char * const &>
	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax

; 159  :     }
; 160  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 32
_New_capacity$ = 40
_Al$ = 48
_New_ptr$ = 72
this$ = 112
_New_size$ = 120
_Fn$ = 128
<_Args_0>$ = 136
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>, COMDAT

; 4505 :     _CONSTEXPR20_CONTAINER basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 4506 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4507 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4508 :         if (_New_size > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	QWORD PTR _New_size$[rsp], rax
	jbe	SHORT $LN2@Reallocate

; 4509 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:

; 4510 :         }
; 4511 : 
; 4512 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR _Old_capacity$[rsp], rax

; 4513 :         const size_type _New_capacity = _Calculate_growth(_New_size);

	mov	rdx, QWORD PTR _New_size$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	QWORD PTR _New_capacity$[rsp], rax

; 4514 :         auto& _Al                     = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 4515 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rax, QWORD PTR _New_capacity$[rsp]
	inc	rax
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	QWORD PTR _New_ptr$[rsp], rax

; 4516 : 
; 4517 : #ifdef __cpp_lib_constexpr_string
; 4518 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 4519 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());
; 4520 :         }
; 4521 : #endif // __cpp_lib_constexpr_string
; 4522 :         _Mypair._Myval2._Orphan_all();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_size$[rsp]
	mov	QWORD PTR [rax+24], rcx

; 4524 :         _Mypair._Myval2._Myres  = _New_capacity;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_capacity$[rsp]
	mov	QWORD PTR [rax+32], rcx

; 4525 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

	mov	rcx, QWORD PTR _New_ptr$[rsp]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	r9, QWORD PTR <_Args_0>$[rsp]
	mov	r8, QWORD PTR _New_size$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR _Fn$[rsp]
	call	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

	cmp	QWORD PTR _Old_capacity$[rsp], 16
	jb	SHORT $LN3@Reallocate

; 4527 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

	mov	rax, QWORD PTR _Old_capacity$[rsp]
	inc	rax
	mov	r8, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4528 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_ptr$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 4529 :         } else {

	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4530 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	lea	rdx, QWORD PTR _New_ptr$[rsp]
	mov	rcx, rax
	call	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4531 :         }
; 4532 : 
; 4533 :         return *this;

	mov	rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4534 :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Count$ = 80
_Ptr$ = 88
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z PROC ; <lambda_66f57f934f28d61049862f64df852ff0>::operator(), COMDAT

; 3256 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 3257 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _New_ptr$[rsp]
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

	mov	BYTE PTR $T1[rsp], 0
	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _New_ptr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3259 :             },

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z ENDP ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 16
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 307  : _CONSTEXPR20_DYNALLOC void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 308  :     if constexpr (is_array_v<_Ty>) {
; 309  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 310  :     } else {
; 311  :         _Obj.~_Ty();
; 312  :     }
; 313  : }

	pop	rdi
	ret	0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 289  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 290  : }

	pop	rdi
	ret	0
??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Construct_in_place@PEA_WAEAPEA_W@std@@YAXAEAPEA_W0@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEA_WAEAPEA_W@std@@YAXAEAPEA_W0@Z PROC ; std::_Construct_in_place<wchar_t *,wchar_t * &>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {
; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 155  :     } else
; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Obj$[rsp]
	call	??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ; std::addressof<wchar_t *>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAPEA_W@std@@YAPEAXPEAPEA_W@Z ; std::_Voidify_iter<wchar_t * *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z ; std::forward<wchar_t * &>
	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax

; 159  :     }
; 160  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Construct_in_place@PEA_WAEAPEA_W@std@@YAXAEAPEA_W0@Z ENDP ; std::_Construct_in_place<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z
_TEXT	SEGMENT
_Old_capacity$ = 32
_New_capacity$ = 40
_Al$ = 48
_New_ptr$ = 72
this$ = 112
_New_size$ = 120
_Fn$ = 128
<_Args_0>$ = 136
??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>, COMDAT

; 4505 :     _CONSTEXPR20_CONTAINER basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 4506 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4507 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4508 :         if (_New_size > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	cmp	QWORD PTR _New_size$[rsp], rax
	jbe	SHORT $LN2@Reallocate

; 4509 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:

; 4510 :         }
; 4511 : 
; 4512 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR _Old_capacity$[rsp], rax

; 4513 :         const size_type _New_capacity = _Calculate_growth(_New_size);

	mov	rdx, QWORD PTR _New_size$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
	mov	QWORD PTR _New_capacity$[rsp], rax

; 4514 :         auto& _Al                     = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 4515 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rax, QWORD PTR _New_capacity$[rsp]
	inc	rax
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
	mov	QWORD PTR _New_ptr$[rsp], rax

; 4516 : 
; 4517 : #ifdef __cpp_lib_constexpr_string
; 4518 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 4519 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());
; 4520 :         }
; 4521 : #endif // __cpp_lib_constexpr_string
; 4522 :         _Mypair._Myval2._Orphan_all();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_size$[rsp]
	mov	QWORD PTR [rax+24], rcx

; 4524 :         _Mypair._Myval2._Myres  = _New_capacity;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_capacity$[rsp]
	mov	QWORD PTR [rax+32], rcx

; 4525 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

	mov	rcx, QWORD PTR _New_ptr$[rsp]
	call	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z	; std::_Unfancy<wchar_t>
	mov	r9, QWORD PTR <_Args_0>$[rsp]
	mov	r8, QWORD PTR _New_size$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR _Fn$[rsp]
	call	??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBA@QEA_W_KQEB_W@Z ; <lambda_3fa8b2c8193a0f3144fc4b1b8f243931>::operator()

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

	cmp	QWORD PTR _Old_capacity$[rsp], 8
	jb	SHORT $LN3@Reallocate

; 4527 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

	mov	rax, QWORD PTR _Old_capacity$[rsp]
	inc	rax
	mov	r8, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ; std::allocator<wchar_t>::deallocate

; 4528 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_ptr$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 4529 :         } else {

	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4530 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	lea	rdx, QWORD PTR _New_ptr$[rsp]
	mov	rcx, rax
	call	??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
$LN4@Reallocate:

; 4531 :         }
; 4532 : 
; 4533 :         return *this;

	mov	rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4534 :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBA@QEA_W_KQEB_W@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Count$ = 80
_Ptr$ = 88
??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBA@QEA_W_KQEB_W@Z PROC ; <lambda_3fa8b2c8193a0f3144fc4b1b8f243931>::operator(), COMDAT

; 3256 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 3257 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _New_ptr$[rsp]
	call	?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_Char_traits<wchar_t,unsigned short>::copy

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

	xor	eax, eax
	mov	WORD PTR $T1[rsp], ax
	mov	rax, QWORD PTR _New_ptr$[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rax
	call	?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 3259 :             },

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBA@QEA_W_KQEB_W@Z ENDP ; <lambda_3fa8b2c8193a0f3144fc4b1b8f243931>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z
_TEXT	SEGMENT
_Obj$ = 16
??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z PROC	; std::_Destroy_in_place<wchar_t *>, COMDAT

; 307  : _CONSTEXPR20_DYNALLOC void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 308  :     if constexpr (is_array_v<_Ty>) {
; 309  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 310  :     } else {
; 311  :         _Obj.~_Ty();
; 312  :     }
; 313  : }

	pop	rdi
	ret	0
??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z ENDP	; std::_Destroy_in_place<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {
; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 155  :     } else
; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Obj$[rsp]
	call	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 159  :     }
; 160  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 289  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 290  : }

	pop	rdi
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT

; 1375 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT

; 1455 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1456 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1457 : }

	pop	rdi
	ret	0
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 829  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1073 :     _CONSTEXPR20_CONTAINER void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1074 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

	mov	edx, 1
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR _New_proxy$[rsp], rax

; 1075 :         _Construct_in_place(*_New_proxy, this);

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR _New_proxy$[rsp]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1076 :         _Myproxy            = _New_proxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_proxy$[rsp]
	mov	QWORD PTR [rax], rcx

; 1077 :         _New_proxy->_Mycont = this;

	mov	rax, QWORD PTR _New_proxy$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], rcx

; 1078 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >, COMDAT

; 1375 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ; std::forward<std::allocator<wchar_t> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z PROC ; std::move<std::allocator<wchar_t> &>, COMDAT

; 1455 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1456 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1457 : }

	pop	rdi
	ret	0
??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ENDP ; std::move<std::allocator<wchar_t> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>, COMDAT

; 829  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 998  : _CONSTEXPR20_DYNALLOC void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 999  :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1000 :     using _Ty = typename _Alloc::value_type;
; 1001 :     _Ptr->~_Ty();
; 1002 :     _Deallocate_plain(_Al, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1003 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 840  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\utility
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT

; 66   :     const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 67   :     // return smaller of _Left and _Right
; 68   :     return _Right < _Left ? _Right : _Left;

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@min
	mov	rax, QWORD PTR _Right$[rsp]
	mov	QWORD PTR tv65[rsp], rax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	rax, QWORD PTR _Left$[rsp]
	mov	QWORD PTR tv65[rsp], rax
$LN4@min:
	mov	rax, QWORD PTR tv65[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]

; 69   : }

	add	rsp, 16
	pop	rdi
	ret	0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\iosfwd
;	COMDAT ??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 16
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ PROC		; std::fpos<_Mbstatet>::operator __int64, COMDAT

; 67   :     operator streamoff() const {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 68   :         // TRANSITION, ABI: We currently always set _Fpos to 0 but older .objs containing old
; 69   :         // basic_filebuf would set _Fpos.
; 70   :         return _Myoff + _Fpos;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	add	rax, QWORD PTR [rcx+8]

; 71   :     }

	pop	rdi
	ret	0
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ ENDP		; std::fpos<_Mbstatet>::operator __int64
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z
_TEXT	SEGMENT
this$ = 16
_Off$ = 24
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z PROC		; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT

; 55   :     /* implicit */ fpos(streamoff _Off = 0) : _Myoff(_Off), _Fpos(0), _Mystate() {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Off$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 16
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 8
	rep stosb
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ENDP		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xlocale
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::ctype<wchar_t> >, COMDAT

; 428  : const _Facet& __CRTDECL use_facet(const locale& _Loc) { // get facet reference from locale

$LN11:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 144				; 00000090H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+160]

; 429  :     _BEGIN_LOCK(_LOCK_LOCALE) // the thread lock, make get atomic

	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$6[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 430  :     const locale::facet* _Psave = _Facetptr<_Facet>::_Psave; // static pointer to lazy facet

	mov	rax, QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
	mov	QWORD PTR _Psave$7[rsp], rax

; 431  : 
; 432  :     const size_t _Id         = _Facet::id;

	mov	rcx, QWORD PTR __imp_?id@?$ctype@_W@std@@2V0locale@2@A
	call	QWORD PTR __imp_??Bid@locale@std@@QEAA_KXZ
	mov	QWORD PTR _Id$8[rsp], rax

; 433  :     const locale::facet* _Pf = _Loc._Getfacet(_Id);

	mov	rdx, QWORD PTR _Id$8[rsp]
	mov	rcx, QWORD PTR _Loc$[rsp]
	call	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ; std::locale::_Getfacet
	mov	QWORD PTR _Pf$9[rsp], rax

; 434  : 
; 435  :     if (!_Pf) {

	cmp	QWORD PTR _Pf$9[rsp], 0
	jne	$LN2@use_facet

; 436  :         if (_Psave) {

	cmp	QWORD PTR _Psave$7[rsp], 0
	je	SHORT $LN3@use_facet

; 437  :             _Pf = _Psave; // lazy facet already allocated

	mov	rax, QWORD PTR _Psave$7[rsp]
	mov	QWORD PTR _Pf$9[rsp], rax
	jmp	$LN2@use_facet
$LN3@use_facet:

; 438  :         } else if (_Facet::_Getcat(&_Psave, &_Loc) == static_cast<size_t>(-1)) {

	mov	rdx, QWORD PTR _Loc$[rsp]
	lea	rcx, QWORD PTR _Psave$7[rsp]
	call	QWORD PTR __imp_?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	cmp	rax, -1
	jne	SHORT $LN5@use_facet

; 439  : #if _HAS_EXCEPTIONS
; 440  :             _Throw_bad_cast(); // lazy disallowed

	call	?_Throw_bad_cast@std@@YAXXZ		; std::_Throw_bad_cast
	npad	1

; 441  : #else // _HAS_EXCEPTIONS
; 442  :             _CSTD abort(); // lazy disallowed
; 443  : #endif // _HAS_EXCEPTIONS
; 444  :         } else { // queue up lazy facet for destruction

	jmp	SHORT $LN2@use_facet
$LN5@use_facet:

; 445  :             auto _Pfmod = const_cast<locale::facet*>(_Psave);

	mov	rax, QWORD PTR _Psave$7[rsp]
	mov	QWORD PTR _Pfmod$10[rsp], rax

; 446  :             unique_ptr<_Facet_base> _Psave_guard(static_cast<_Facet_base*>(_Pfmod));

	mov	rdx, QWORD PTR _Pfmod$10[rsp]
	lea	rcx, QWORD PTR _Psave_guard$11[rsp]
	call	??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
	npad	1

; 447  : 
; 448  : #if defined(_M_CEE)
; 449  :             _Facet_Register_m(_Pfmod);
; 450  : #else // defined(_M_CEE)
; 451  :             _Facet_Register(_Pfmod);

	mov	rcx, QWORD PTR _Pfmod$10[rsp]
	call	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register

; 452  : #endif // defined(_M_CEE)
; 453  : 
; 454  :             _Pfmod->_Incref();

	mov	rax, QWORD PTR _Pfmod$10[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pfmod$10[rsp]
	call	QWORD PTR [rax+8]

; 455  :             _Facetptr<_Facet>::_Psave = _Psave;

	mov	rax, QWORD PTR _Psave$7[rsp]
	mov	QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PEBVfacet@locale@2@EB, rax ; std::_Facetptr<std::ctype<wchar_t> >::_Psave

; 456  :             _Pf                       = _Psave;

	mov	rax, QWORD PTR _Psave$7[rsp]
	mov	QWORD PTR _Pf$9[rsp], rax

; 457  : 
; 458  :             (void) _Psave_guard.release();

	lea	rcx, QWORD PTR _Psave_guard$11[rsp]
	call	?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
	npad	1

; 459  :         }

	lea	rcx, QWORD PTR _Psave_guard$11[rsp]
	call	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
$LN2@use_facet:

; 460  :     }
; 461  : 
; 462  :     return static_cast<const _Facet&>(*_Pf); // should be dynamic_cast

	mov	rax, QWORD PTR _Pf$9[rsp]
	mov	QWORD PTR $T12[rsp], rax
	lea	rcx, QWORD PTR _Lock$6[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rax, QWORD PTR $T12[rsp]

; 463  :     _END_LOCK()
; 464  : } // end of use_facet body

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
$LN10@use_facet:
??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::ctype<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$6[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<wchar_t> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$1@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Psave_guard$11[rbp]
	call	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<wchar_t> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$6[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$1@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<wchar_t> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Psave_guard$11[rbp]
	call	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z
_TEXT	SEGMENT
v2_1$ = 56
v2_2$ = 88
v2_3$ = 120
v2_4$ = 152
v3_1$ = 184
v3_2$ = 232
v3_3$ = 280
v3_4$ = 328
v4_1$ = 376
v4_2$ = 424
v4_3$ = 472
v4_4$ = 520
iofs$ = 568
$T16 = 632
$T17 = 648
$T18 = 672
$T19 = 704
$T20 = 728
$T21 = 768
$T22 = 816
$T23 = 848
$T24 = 896
$T25 = 960
$T26 = 976
$T27 = 1000
$T28 = 1032
$T29 = 1056
$T30 = 1096
$T31 = 1144
$T32 = 1176
$T33 = 1232
$T34 = 1304
$T35 = 1308
$T36 = 1312
$T37 = 1316
$T38 = 1320
$T39 = 1324
$T40 = 1328
$T41 = 1332
$T42 = 1336
$T43 = 1340
$T44 = 1344
$T45 = 1348
$T46 = 1352
$T47 = 1356
$T48 = 1360
$T49 = 1364
$T50 = 1368
$T51 = 1372
$T52 = 1376
$T53 = 1380
$T54 = 1384
$T55 = 1388
$T56 = 1392
tv68 = 1400
tv172 = 1408
tv186 = 1416
tv194 = 1424
tv208 = 1432
tv216 = 1440
tv230 = 1448
tv238 = 1456
tv251 = 1464
tv259 = 1472
tv272 = 1480
tv280 = 1488
tv293 = 1496
tv301 = 1504
tv313 = 1512
tv321 = 1520
tv333 = 1528
tv341 = 1536
tv385 = 1544
tv391 = 1552
tv396 = 1560
tv473 = 1568
tv487 = 1576
tv495 = 1584
tv509 = 1592
tv517 = 1600
tv531 = 1608
tv539 = 1616
tv552 = 1624
tv560 = 1632
tv573 = 1640
tv581 = 1648
tv594 = 1656
tv602 = 1664
tv646 = 1672
tv654 = 1680
tv666 = 1688
tv674 = 1696
tv686 = 1704
tv692 = 1712
__$ArrayPad$ = 1720
os$ = 1744
otype$ = 1752
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z PROC ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >, COMDAT

; 106  : {

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 1728				; 000006c0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 420				; 000001a4H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1744]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 107  : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 108  : 
; 109  : 	glm::tvec2<T,P> const v2_1( 0,  1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR v2_1$[rsp]
	call	??$?0HH@?$tvec2@M$01@glm@@QEAA@HH@Z	; glm::tvec2<float,2>::tvec2<float,2><int,int>

; 110  : 	glm::tvec2<T,P> const v2_2( 2,  3);

	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR v2_2$[rsp]
	call	??$?0HH@?$tvec2@M$01@glm@@QEAA@HH@Z	; glm::tvec2<float,2>::tvec2<float,2><int,int>

; 111  : 	glm::tvec2<T,P> const v2_3( 4,  5);

	mov	r8d, 5
	mov	edx, 4
	lea	rcx, QWORD PTR v2_3$[rsp]
	call	??$?0HH@?$tvec2@M$01@glm@@QEAA@HH@Z	; glm::tvec2<float,2>::tvec2<float,2><int,int>

; 112  : 	glm::tvec2<T,P> const v2_4( 6,  7);

	mov	r8d, 7
	mov	edx, 6
	lea	rcx, QWORD PTR v2_4$[rsp]
	call	??$?0HH@?$tvec2@M$01@glm@@QEAA@HH@Z	; glm::tvec2<float,2>::tvec2<float,2><int,int>

; 113  : 	glm::tvec3<T,P> const v3_1( 8,  9, 10);

	mov	r9d, 10
	mov	r8d, 9
	mov	edx, 8
	lea	rcx, QWORD PTR v3_1$[rsp]
	call	??$?0HHH@?$tvec3@M$01@glm@@QEAA@HHH@Z	; glm::tvec3<float,2>::tvec3<float,2><int,int,int>

; 114  : 	glm::tvec3<T,P> const v3_2(11, 12, 13);

	mov	r9d, 13
	mov	r8d, 12
	mov	edx, 11
	lea	rcx, QWORD PTR v3_2$[rsp]
	call	??$?0HHH@?$tvec3@M$01@glm@@QEAA@HHH@Z	; glm::tvec3<float,2>::tvec3<float,2><int,int,int>

; 115  : 	glm::tvec3<T,P> const v3_3(14, 15, 16);

	mov	r9d, 16
	mov	r8d, 15
	mov	edx, 14
	lea	rcx, QWORD PTR v3_3$[rsp]
	call	??$?0HHH@?$tvec3@M$01@glm@@QEAA@HHH@Z	; glm::tvec3<float,2>::tvec3<float,2><int,int,int>

; 116  : 	glm::tvec3<T,P> const v3_4(17, 18, 19);

	mov	r9d, 19
	mov	r8d, 18
	mov	edx, 17
	lea	rcx, QWORD PTR v3_4$[rsp]
	call	??$?0HHH@?$tvec3@M$01@glm@@QEAA@HHH@Z	; glm::tvec3<float,2>::tvec3<float,2><int,int,int>

; 117  : 	glm::tvec4<T,P> const v4_1(20, 21, 22, 23);

	mov	DWORD PTR [rsp+32], 23
	mov	r9d, 22
	mov	r8d, 21
	mov	edx, 20
	lea	rcx, QWORD PTR v4_1$[rsp]
	call	??$?0HHHH@?$tvec4@M$01@glm@@QEAA@HHHH@Z	; glm::tvec4<float,2>::tvec4<float,2><int,int,int,int>

; 118  : 	glm::tvec4<T,P> const v4_2(24, 25, 26, 27);

	mov	DWORD PTR [rsp+32], 27
	mov	r9d, 26
	mov	r8d, 25
	mov	edx, 24
	lea	rcx, QWORD PTR v4_2$[rsp]
	call	??$?0HHHH@?$tvec4@M$01@glm@@QEAA@HHHH@Z	; glm::tvec4<float,2>::tvec4<float,2><int,int,int,int>

; 119  : 	glm::tvec4<T,P> const v4_3(28, 29, 30, 31);

	mov	DWORD PTR [rsp+32], 31
	mov	r9d, 30
	mov	r8d, 29
	mov	edx, 28
	lea	rcx, QWORD PTR v4_3$[rsp]
	call	??$?0HHHH@?$tvec4@M$01@glm@@QEAA@HHHH@Z	; glm::tvec4<float,2>::tvec4<float,2><int,int,int,int>

; 120  : 	glm::tvec4<T,P> const v4_4(32, 33, 34, 35);

	mov	DWORD PTR [rsp+32], 35			; 00000023H
	mov	r9d, 34					; 00000022H
	mov	r8d, 33					; 00000021H
	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR v4_4$[rsp]
	call	??$?0HHHH@?$tvec4@M$01@glm@@QEAA@HHHH@Z	; glm::tvec4<float,2>::tvec4<float,2><int,int,int,int>

; 121  : 
; 122  : 	glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 123  : 
; 124  : 	os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	mov	DWORD PTR $T34[rsp], 2
	mov	DWORD PTR $T35[rsp], 2
	mov	DWORD PTR $T36[rsp], 2
	mov	DWORD PTR $T37[rsp], 2
	mov	DWORD PTR $T38[rsp], 2
	mov	DWORD PTR $T39[rsp], 2
	mov	DWORD PTR $T40[rsp], 2
	mov	DWORD PTR $T41[rsp], 2
	mov	DWORD PTR $T42[rsp], 2
	lea	rax, QWORD PTR v4_4$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR v4_3$[rsp]
	lea	r8, QWORD PTR v4_2$[rsp]
	lea	rdx, QWORD PTR v4_1$[rsp]
	lea	rcx, QWORD PTR $T24[rsp]
	call	??0?$tmat4x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@000@Z ; glm::tmat4x4<float,2>::tmat4x4<float,2>
	mov	QWORD PTR tv172[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv186[rsp], rax
	lea	rcx, QWORD PTR v3_4$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR v3_3$[rsp]
	lea	r8, QWORD PTR v3_2$[rsp]
	lea	rdx, QWORD PTR v3_1$[rsp]
	lea	rcx, QWORD PTR $T23[rsp]
	call	??0?$tmat4x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@000@Z ; glm::tmat4x3<float,2>::tmat4x3<float,2>
	mov	QWORD PTR tv194[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv208[rsp], rax
	lea	rcx, QWORD PTR v2_4$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR v2_3$[rsp]
	lea	r8, QWORD PTR v2_2$[rsp]
	lea	rdx, QWORD PTR v2_1$[rsp]
	lea	rcx, QWORD PTR $T22[rsp]
	call	??0?$tmat4x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@000@Z ; glm::tmat4x2<float,2>::tmat4x2<float,2>
	mov	QWORD PTR tv216[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv230[rsp], rax
	lea	r9, QWORD PTR v4_3$[rsp]
	lea	r8, QWORD PTR v4_2$[rsp]
	lea	rdx, QWORD PTR v4_1$[rsp]
	lea	rcx, QWORD PTR $T21[rsp]
	call	??0?$tmat3x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@00@Z ; glm::tmat3x4<float,2>::tmat3x4<float,2>
	mov	QWORD PTR tv238[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv251[rsp], rax
	lea	r9, QWORD PTR v3_3$[rsp]
	lea	r8, QWORD PTR v3_2$[rsp]
	lea	rdx, QWORD PTR v3_1$[rsp]
	lea	rcx, QWORD PTR $T20[rsp]
	call	??0?$tmat3x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@00@Z ; glm::tmat3x3<float,2>::tmat3x3<float,2>
	mov	QWORD PTR tv259[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv272[rsp], rax
	lea	r9, QWORD PTR v2_3$[rsp]
	lea	r8, QWORD PTR v2_2$[rsp]
	lea	rdx, QWORD PTR v2_1$[rsp]
	lea	rcx, QWORD PTR $T19[rsp]
	call	??0?$tmat3x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@00@Z ; glm::tmat3x2<float,2>::tmat3x2<float,2>
	mov	QWORD PTR tv280[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv293[rsp], rax
	lea	r8, QWORD PTR v4_2$[rsp]
	lea	rdx, QWORD PTR v4_1$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??0?$tmat2x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@0@Z ; glm::tmat2x4<float,2>::tmat2x4<float,2>
	mov	QWORD PTR tv301[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv313[rsp], rax
	lea	r8, QWORD PTR v3_2$[rsp]
	lea	rdx, QWORD PTR v3_1$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??0?$tmat2x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@0@Z ; glm::tmat2x3<float,2>::tmat2x3<float,2>
	mov	QWORD PTR tv321[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv333[rsp], rax
	lea	r8, QWORD PTR v2_2$[rsp]
	lea	rdx, QWORD PTR v2_1$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??0?$tmat2x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@0@Z ; glm::tmat2x2<float,2>::tmat2x2<float,2>
	mov	QWORD PTR tv341[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv385[rsp], rax
	mov	edx, DWORD PTR otype$[rsp]
	lea	rcx, QWORD PTR $T43[rsp]
	call	??0order@io@glm@@QEAA@W4order_type@12@@Z ; glm::io::order::order
	mov	QWORD PTR tv391[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T44[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv396[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T45[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv396[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv391[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUorder@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87578
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv385[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T42[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87577
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv341[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87576
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv333[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T41[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87575
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv321[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87574
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv313[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T40[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87573
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv301[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87572
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv293[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T39[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87571
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv280[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87570
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv272[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T38[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87569
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv259[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87568
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv251[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T37[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87567
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv238[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87566
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv230[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T36[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87565
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv216[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87564
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv208[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T35[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87563
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv194[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87562
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv186[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T34[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87561
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv172[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 125  : 		<< glm::io::order(otype)
; 126  : 		<< "mat2x2<" << typeid(T).name() << ',' << P << ">: " << glm::tmat2x2<T,P>(v2_1, v2_2) << '\n'
; 127  : 		<< "mat2x3<" << typeid(T).name() << ',' << P << ">: " << glm::tmat2x3<T,P>(v3_1, v3_2) << '\n'
; 128  : 		<< "mat2x4<" << typeid(T).name() << ',' << P << ">: " << glm::tmat2x4<T,P>(v4_1, v4_2) << '\n'
; 129  : 		<< "mat3x2<" << typeid(T).name() << ',' << P << ">: " << glm::tmat3x2<T,P>(v2_1, v2_2, v2_3) << '\n'
; 130  : 		<< "mat3x3<" << typeid(T).name() << ',' << P << ">: " << glm::tmat3x3<T,P>(v3_1, v3_2, v3_3) << '\n'
; 131  : 		<< "mat3x4<" << typeid(T).name() << ',' << P << ">: " << glm::tmat3x4<T,P>(v4_1, v4_2, v4_3) << '\n'
; 132  : 		<< "mat4x2<" << typeid(T).name() << ',' << P << ">: " << glm::tmat4x2<T,P>(v2_1, v2_2, v2_3, v2_4) << '\n'
; 133  : 		<< "mat4x3<" << typeid(T).name() << ',' << P << ">: " << glm::tmat4x3<T,P>(v3_1, v3_2, v3_3, v3_4) << '\n'
; 134  : 		<< "mat4x4<" << typeid(T).name() << ',' << P << ">: " << glm::tmat4x4<T,P>(v4_1, v4_2, v4_3, v4_4) << '\n';
; 135  : 
; 136  : 	os << glm::io::unformatted

	mov	DWORD PTR $T46[rsp], 2
	mov	DWORD PTR $T47[rsp], 2
	mov	DWORD PTR $T48[rsp], 2
	mov	DWORD PTR $T49[rsp], 2
	mov	DWORD PTR $T50[rsp], 2
	mov	DWORD PTR $T51[rsp], 2
	mov	DWORD PTR $T52[rsp], 2
	mov	DWORD PTR $T53[rsp], 2
	mov	DWORD PTR $T54[rsp], 2
	lea	rax, QWORD PTR v4_4$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR v4_3$[rsp]
	lea	r8, QWORD PTR v4_2$[rsp]
	lea	rdx, QWORD PTR v4_1$[rsp]
	lea	rcx, QWORD PTR $T33[rsp]
	call	??0?$tmat4x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@000@Z ; glm::tmat4x4<float,2>::tmat4x4<float,2>
	mov	QWORD PTR tv473[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv487[rsp], rax
	lea	rcx, QWORD PTR v3_4$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR v3_3$[rsp]
	lea	r8, QWORD PTR v3_2$[rsp]
	lea	rdx, QWORD PTR v3_1$[rsp]
	lea	rcx, QWORD PTR $T32[rsp]
	call	??0?$tmat4x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@000@Z ; glm::tmat4x3<float,2>::tmat4x3<float,2>
	mov	QWORD PTR tv495[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv509[rsp], rax
	lea	rcx, QWORD PTR v2_4$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR v2_3$[rsp]
	lea	r8, QWORD PTR v2_2$[rsp]
	lea	rdx, QWORD PTR v2_1$[rsp]
	lea	rcx, QWORD PTR $T31[rsp]
	call	??0?$tmat4x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@000@Z ; glm::tmat4x2<float,2>::tmat4x2<float,2>
	mov	QWORD PTR tv517[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv531[rsp], rax
	lea	r9, QWORD PTR v4_3$[rsp]
	lea	r8, QWORD PTR v4_2$[rsp]
	lea	rdx, QWORD PTR v4_1$[rsp]
	lea	rcx, QWORD PTR $T30[rsp]
	call	??0?$tmat3x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@00@Z ; glm::tmat3x4<float,2>::tmat3x4<float,2>
	mov	QWORD PTR tv539[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv552[rsp], rax
	lea	r9, QWORD PTR v3_3$[rsp]
	lea	r8, QWORD PTR v3_2$[rsp]
	lea	rdx, QWORD PTR v3_1$[rsp]
	lea	rcx, QWORD PTR $T29[rsp]
	call	??0?$tmat3x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@00@Z ; glm::tmat3x3<float,2>::tmat3x3<float,2>
	mov	QWORD PTR tv560[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv573[rsp], rax
	lea	r9, QWORD PTR v2_3$[rsp]
	lea	r8, QWORD PTR v2_2$[rsp]
	lea	rdx, QWORD PTR v2_1$[rsp]
	lea	rcx, QWORD PTR $T28[rsp]
	call	??0?$tmat3x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@00@Z ; glm::tmat3x2<float,2>::tmat3x2<float,2>
	mov	QWORD PTR tv581[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv594[rsp], rax
	lea	r8, QWORD PTR v4_2$[rsp]
	lea	rdx, QWORD PTR v4_1$[rsp]
	lea	rcx, QWORD PTR $T27[rsp]
	call	??0?$tmat2x4@M$01@glm@@QEAA@AEBU?$tvec4@M$01@1@0@Z ; glm::tmat2x4<float,2>::tmat2x4<float,2>
	mov	QWORD PTR tv602[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv646[rsp], rax
	lea	r8, QWORD PTR v3_2$[rsp]
	lea	rdx, QWORD PTR v3_1$[rsp]
	lea	rcx, QWORD PTR $T26[rsp]
	call	??0?$tmat2x3@M$01@glm@@QEAA@AEBU?$tvec3@M$01@1@0@Z ; glm::tmat2x3<float,2>::tmat2x3<float,2>
	mov	QWORD PTR tv654[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv666[rsp], rax
	lea	r8, QWORD PTR v2_2$[rsp]
	lea	rdx, QWORD PTR v2_1$[rsp]
	lea	rcx, QWORD PTR $T25[rsp]
	call	??0?$tmat2x2@M$01@glm@@QEAA@AEBU?$tvec2@M$01@1@0@Z ; glm::tmat2x2<float,2>::tmat2x2<float,2>
	mov	QWORD PTR tv674[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv686[rsp], rax
	mov	edx, DWORD PTR otype$[rsp]
	lea	rcx, QWORD PTR $T55[rsp]
	call	??0order@io@glm@@QEAA@W4order_type@12@@Z ; glm::io::order::order
	mov	QWORD PTR tv692[rsp], rax
	lea	rdx, OFFSET FLAT:??$unformatted@_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@AEAV23@@Z ; glm::io::unformatted<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAV?$basic_ios@_WU?$char_traits@_W@std@@@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv692[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUorder@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87596
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv686[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T54[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87595
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv674[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87594
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv666[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T53[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87593
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv654[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87592
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv646[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T52[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87591
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv602[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat2x4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87590
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv594[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T51[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87589
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv581[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87588
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv573[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T50[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87587
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv560[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87586
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv552[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T49[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87585
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv539[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat3x4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87584
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv531[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T48[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87583
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv517[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x2@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87582
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv509[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T47[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87581
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv495[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x3@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87580
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv487[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR $T46[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG87579
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv473[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tmat4x4@M$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 137  : 		<< glm::io::order(otype)
; 138  : 		<< "mat2x2<" << typeid(T).name() << ',' << P << ">: " << glm::tmat2x2<T,P>(v2_1, v2_2) << '\n'
; 139  : 		<< "mat2x3<" << typeid(T).name() << ',' << P << ">: " << glm::tmat2x3<T,P>(v3_1, v3_2) << '\n'
; 140  : 		<< "mat2x4<" << typeid(T).name() << ',' << P << ">: " << glm::tmat2x4<T,P>(v4_1, v4_2) << '\n'
; 141  : 		<< "mat3x2<" << typeid(T).name() << ',' << P << ">: " << glm::tmat3x2<T,P>(v2_1, v2_2, v2_3) << '\n'
; 142  : 		<< "mat3x3<" << typeid(T).name() << ',' << P << ">: " << glm::tmat3x3<T,P>(v3_1, v3_2, v3_3) << '\n'
; 143  : 		<< "mat3x4<" << typeid(T).name() << ',' << P << ">: " << glm::tmat3x4<T,P>(v4_1, v4_2, v4_3) << '\n'
; 144  : 		<< "mat4x2<" << typeid(T).name() << ',' << P << ">: " << glm::tmat4x2<T,P>(v2_1, v2_2, v2_3, v2_4) << '\n'
; 145  : 		<< "mat4x3<" << typeid(T).name() << ',' << P << ">: " << glm::tmat4x3<T,P>(v3_1, v3_2, v3_3, v3_4) << '\n'
; 146  : 		<< "mat4x4<" << typeid(T).name() << ',' << P << ">: " << glm::tmat4x4<T,P>(v4_1, v4_2, v4_3, v4_4) << '\n';
; 147  :   
; 148  : 	return 0;

	mov	DWORD PTR $T56[rsp], 0
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	mov	eax, DWORD PTR $T56[rsp]

; 149  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1728				; 000006c0H
	pop	rdi
	ret	0
??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z ENDP ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2_1$ = 56
v2_2$ = 88
v2_3$ = 120
v2_4$ = 152
v3_1$ = 184
v3_2$ = 232
v3_3$ = 280
v3_4$ = 328
v4_1$ = 376
v4_2$ = 424
v4_3$ = 472
v4_4$ = 520
iofs$ = 568
$T16 = 632
$T17 = 648
$T18 = 672
$T19 = 704
$T20 = 728
$T21 = 768
$T22 = 816
$T23 = 848
$T24 = 896
$T25 = 960
$T26 = 976
$T27 = 1000
$T28 = 1032
$T29 = 1056
$T30 = 1096
$T31 = 1144
$T32 = 1176
$T33 = 1232
$T34 = 1304
$T35 = 1308
$T36 = 1312
$T37 = 1316
$T38 = 1320
$T39 = 1324
$T40 = 1328
$T41 = 1332
$T42 = 1336
$T43 = 1340
$T44 = 1344
$T45 = 1348
$T46 = 1352
$T47 = 1356
$T48 = 1360
$T49 = 1364
$T50 = 1368
$T51 = 1372
$T52 = 1376
$T53 = 1380
$T54 = 1384
$T55 = 1388
$T56 = 1392
tv68 = 1400
tv172 = 1408
tv186 = 1416
tv194 = 1424
tv208 = 1432
tv216 = 1440
tv230 = 1448
tv238 = 1456
tv251 = 1464
tv259 = 1472
tv272 = 1480
tv280 = 1488
tv293 = 1496
tv301 = 1504
tv313 = 1512
tv321 = 1520
tv333 = 1528
tv341 = 1536
tv385 = 1544
tv391 = 1552
tv396 = 1560
tv473 = 1568
tv487 = 1576
tv495 = 1584
tv509 = 1592
tv517 = 1600
tv531 = 1608
tv539 = 1616
tv552 = 1624
tv560 = 1632
tv573 = 1640
tv581 = 1648
tv594 = 1656
tv602 = 1664
tv646 = 1672
tv654 = 1680
tv666 = 1688
tv674 = 1696
tv686 = 1704
tv692 = 1712
__$ArrayPad$ = 1720
os$ = 1744
otype$ = 1752
?dtor$0@?0???$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z@4HA PROC ; `test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z@4HA ENDP ; `test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2_1$ = 56
v2_2$ = 88
v2_3$ = 120
v2_4$ = 152
v3_1$ = 184
v3_2$ = 232
v3_3$ = 280
v3_4$ = 328
v4_1$ = 376
v4_2$ = 424
v4_3$ = 472
v4_4$ = 520
iofs$ = 568
$T16 = 632
$T17 = 648
$T18 = 672
$T19 = 704
$T20 = 728
$T21 = 768
$T22 = 816
$T23 = 848
$T24 = 896
$T25 = 960
$T26 = 976
$T27 = 1000
$T28 = 1032
$T29 = 1056
$T30 = 1096
$T31 = 1144
$T32 = 1176
$T33 = 1232
$T34 = 1304
$T35 = 1308
$T36 = 1312
$T37 = 1316
$T38 = 1320
$T39 = 1324
$T40 = 1328
$T41 = 1332
$T42 = 1336
$T43 = 1340
$T44 = 1344
$T45 = 1348
$T46 = 1352
$T47 = 1356
$T48 = 1360
$T49 = 1364
$T50 = 1368
$T51 = 1372
$T52 = 1376
$T53 = 1380
$T54 = 1384
$T55 = 1388
$T56 = 1392
tv68 = 1400
tv172 = 1408
tv186 = 1416
tv194 = 1424
tv208 = 1432
tv216 = 1440
tv230 = 1448
tv238 = 1456
tv251 = 1464
tv259 = 1472
tv272 = 1480
tv280 = 1488
tv293 = 1496
tv301 = 1504
tv313 = 1512
tv321 = 1520
tv333 = 1528
tv341 = 1536
tv385 = 1544
tv391 = 1552
tv396 = 1560
tv473 = 1568
tv487 = 1576
tv495 = 1584
tv509 = 1592
tv517 = 1600
tv531 = 1608
tv539 = 1616
tv552 = 1624
tv560 = 1632
tv573 = 1640
tv581 = 1648
tv594 = 1656
tv602 = 1664
tv646 = 1672
tv654 = 1680
tv666 = 1688
tv674 = 1696
tv686 = 1704
tv692 = 1712
__$ArrayPad$ = 1720
os$ = 1744
otype$ = 1752
?dtor$0@?0???$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z@4HA PROC ; `test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z@4HA ENDP ; `test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z
_TEXT	SEGMENT
v2_1$ = 56
v2_2$ = 88
v2_3$ = 120
v2_4$ = 152
v3_1$ = 184
v3_2$ = 232
v3_3$ = 280
v3_4$ = 328
v4_1$ = 376
v4_2$ = 424
v4_3$ = 472
v4_4$ = 520
iofs$ = 568
$T16 = 632
$T17 = 648
$T18 = 672
$T19 = 704
$T20 = 728
$T21 = 768
$T22 = 816
$T23 = 848
$T24 = 896
$T25 = 960
$T26 = 976
$T27 = 1000
$T28 = 1032
$T29 = 1056
$T30 = 1096
$T31 = 1144
$T32 = 1176
$T33 = 1232
$T34 = 1304
$T35 = 1308
$T36 = 1312
$T37 = 1316
$T38 = 1320
$T39 = 1324
$T40 = 1328
$T41 = 1332
$T42 = 1336
$T43 = 1340
$T44 = 1344
$T45 = 1348
$T46 = 1352
$T47 = 1356
$T48 = 1360
$T49 = 1364
$T50 = 1368
$T51 = 1372
$T52 = 1376
$T53 = 1380
$T54 = 1384
$T55 = 1388
$T56 = 1392
tv68 = 1400
tv172 = 1408
tv186 = 1416
tv194 = 1424
tv208 = 1432
tv216 = 1440
tv230 = 1448
tv238 = 1456
tv251 = 1464
tv259 = 1472
tv272 = 1480
tv280 = 1488
tv293 = 1496
tv301 = 1504
tv313 = 1512
tv321 = 1520
tv333 = 1528
tv341 = 1536
tv385 = 1544
tv391 = 1552
tv396 = 1560
tv473 = 1568
tv487 = 1576
tv495 = 1584
tv509 = 1592
tv517 = 1600
tv531 = 1608
tv539 = 1616
tv552 = 1624
tv560 = 1632
tv573 = 1640
tv581 = 1648
tv594 = 1656
tv602 = 1664
tv646 = 1672
tv654 = 1680
tv666 = 1688
tv674 = 1696
tv686 = 1704
tv692 = 1712
__$ArrayPad$ = 1720
os$ = 1744
otype$ = 1752
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z PROC ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >, COMDAT

; 106  : {

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 1728				; 000006c0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 420				; 000001a4H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1744]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 107  : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 108  : 
; 109  : 	glm::tvec2<T,P> const v2_1( 0,  1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR v2_1$[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>

; 110  : 	glm::tvec2<T,P> const v2_2( 2,  3);

	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR v2_2$[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>

; 111  : 	glm::tvec2<T,P> const v2_3( 4,  5);

	mov	r8d, 5
	mov	edx, 4
	lea	rcx, QWORD PTR v2_3$[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>

; 112  : 	glm::tvec2<T,P> const v2_4( 6,  7);

	mov	r8d, 7
	mov	edx, 6
	lea	rcx, QWORD PTR v2_4$[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>

; 113  : 	glm::tvec3<T,P> const v3_1( 8,  9, 10);

	mov	r9d, 10
	mov	r8d, 9
	mov	edx, 8
	lea	rcx, QWORD PTR v3_1$[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>

; 114  : 	glm::tvec3<T,P> const v3_2(11, 12, 13);

	mov	r9d, 13
	mov	r8d, 12
	mov	edx, 11
	lea	rcx, QWORD PTR v3_2$[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>

; 115  : 	glm::tvec3<T,P> const v3_3(14, 15, 16);

	mov	r9d, 16
	mov	r8d, 15
	mov	edx, 14
	lea	rcx, QWORD PTR v3_3$[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>

; 116  : 	glm::tvec3<T,P> const v3_4(17, 18, 19);

	mov	r9d, 19
	mov	r8d, 18
	mov	edx, 17
	lea	rcx, QWORD PTR v3_4$[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>

; 117  : 	glm::tvec4<T,P> const v4_1(20, 21, 22, 23);

	mov	DWORD PTR [rsp+32], 23
	mov	r9d, 22
	mov	r8d, 21
	mov	edx, 20
	lea	rcx, QWORD PTR v4_1$[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>

; 118  : 	glm::tvec4<T,P> const v4_2(24, 25, 26, 27);

	mov	DWORD PTR [rsp+32], 27
	mov	r9d, 26
	mov	r8d, 25
	mov	edx, 24
	lea	rcx, QWORD PTR v4_2$[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>

; 119  : 	glm::tvec4<T,P> const v4_3(28, 29, 30, 31);

	mov	DWORD PTR [rsp+32], 31
	mov	r9d, 30
	mov	r8d, 29
	mov	edx, 28
	lea	rcx, QWORD PTR v4_3$[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>

; 120  : 	glm::tvec4<T,P> const v4_4(32, 33, 34, 35);

	mov	DWORD PTR [rsp+32], 35			; 00000023H
	mov	r9d, 34					; 00000022H
	mov	r8d, 33					; 00000021H
	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR v4_4$[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>

; 121  : 
; 122  : 	glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >
	npad	1

; 123  : 
; 124  : 	os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	mov	DWORD PTR $T34[rsp], 0
	mov	DWORD PTR $T35[rsp], 0
	mov	DWORD PTR $T36[rsp], 0
	mov	DWORD PTR $T37[rsp], 0
	mov	DWORD PTR $T38[rsp], 0
	mov	DWORD PTR $T39[rsp], 0
	mov	DWORD PTR $T40[rsp], 0
	mov	DWORD PTR $T41[rsp], 0
	mov	DWORD PTR $T42[rsp], 0
	lea	rax, QWORD PTR v4_4$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR v4_3$[rsp]
	lea	r8, QWORD PTR v4_2$[rsp]
	lea	rdx, QWORD PTR v4_1$[rsp]
	lea	rcx, QWORD PTR $T24[rsp]
	call	??0?$tmat4x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@000@Z ; glm::tmat4x4<float,0>::tmat4x4<float,0>
	mov	QWORD PTR tv172[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv186[rsp], rax
	lea	rcx, QWORD PTR v3_4$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR v3_3$[rsp]
	lea	r8, QWORD PTR v3_2$[rsp]
	lea	rdx, QWORD PTR v3_1$[rsp]
	lea	rcx, QWORD PTR $T23[rsp]
	call	??0?$tmat4x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@000@Z ; glm::tmat4x3<float,0>::tmat4x3<float,0>
	mov	QWORD PTR tv194[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv208[rsp], rax
	lea	rcx, QWORD PTR v2_4$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR v2_3$[rsp]
	lea	r8, QWORD PTR v2_2$[rsp]
	lea	rdx, QWORD PTR v2_1$[rsp]
	lea	rcx, QWORD PTR $T22[rsp]
	call	??0?$tmat4x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@000@Z ; glm::tmat4x2<float,0>::tmat4x2<float,0>
	mov	QWORD PTR tv216[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv230[rsp], rax
	lea	r9, QWORD PTR v4_3$[rsp]
	lea	r8, QWORD PTR v4_2$[rsp]
	lea	rdx, QWORD PTR v4_1$[rsp]
	lea	rcx, QWORD PTR $T21[rsp]
	call	??0?$tmat3x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@00@Z ; glm::tmat3x4<float,0>::tmat3x4<float,0>
	mov	QWORD PTR tv238[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv251[rsp], rax
	lea	r9, QWORD PTR v3_3$[rsp]
	lea	r8, QWORD PTR v3_2$[rsp]
	lea	rdx, QWORD PTR v3_1$[rsp]
	lea	rcx, QWORD PTR $T20[rsp]
	call	??0?$tmat3x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@00@Z ; glm::tmat3x3<float,0>::tmat3x3<float,0>
	mov	QWORD PTR tv259[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv272[rsp], rax
	lea	r9, QWORD PTR v2_3$[rsp]
	lea	r8, QWORD PTR v2_2$[rsp]
	lea	rdx, QWORD PTR v2_1$[rsp]
	lea	rcx, QWORD PTR $T19[rsp]
	call	??0?$tmat3x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@00@Z ; glm::tmat3x2<float,0>::tmat3x2<float,0>
	mov	QWORD PTR tv280[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv293[rsp], rax
	lea	r8, QWORD PTR v4_2$[rsp]
	lea	rdx, QWORD PTR v4_1$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??0?$tmat2x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@0@Z ; glm::tmat2x4<float,0>::tmat2x4<float,0>
	mov	QWORD PTR tv301[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv313[rsp], rax
	lea	r8, QWORD PTR v3_2$[rsp]
	lea	rdx, QWORD PTR v3_1$[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	??0?$tmat2x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@0@Z ; glm::tmat2x3<float,0>::tmat2x3<float,0>
	mov	QWORD PTR tv321[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv333[rsp], rax
	lea	r8, QWORD PTR v2_2$[rsp]
	lea	rdx, QWORD PTR v2_1$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??0?$tmat2x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z ; glm::tmat2x2<float,0>::tmat2x2<float,0>
	mov	QWORD PTR tv341[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv385[rsp], rax
	mov	edx, DWORD PTR otype$[rsp]
	lea	rcx, QWORD PTR $T43[rsp]
	call	??0order@io@glm@@QEAA@W4order_type@12@@Z ; glm::io::order::order
	mov	QWORD PTR tv391[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T44[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv396[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T45[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rcx, QWORD PTR tv396[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rcx, QWORD PTR tv391[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUorder@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85835
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv385[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T42[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85834
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv341[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85833
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv333[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T41[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85832
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv321[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85831
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv313[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T40[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85830
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv301[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85829
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv293[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T39[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85828
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv280[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85827
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv272[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T38[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85826
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv259[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85825
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv251[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T37[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85824
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv238[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85823
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv230[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T36[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85822
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv216[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85821
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv208[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T35[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85820
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv194[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85819
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv186[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T34[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85818
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv172[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 125  : 		<< glm::io::order(otype)
; 126  : 		<< "mat2x2<" << typeid(T).name() << ',' << P << ">: " << glm::tmat2x2<T,P>(v2_1, v2_2) << '\n'
; 127  : 		<< "mat2x3<" << typeid(T).name() << ',' << P << ">: " << glm::tmat2x3<T,P>(v3_1, v3_2) << '\n'
; 128  : 		<< "mat2x4<" << typeid(T).name() << ',' << P << ">: " << glm::tmat2x4<T,P>(v4_1, v4_2) << '\n'
; 129  : 		<< "mat3x2<" << typeid(T).name() << ',' << P << ">: " << glm::tmat3x2<T,P>(v2_1, v2_2, v2_3) << '\n'
; 130  : 		<< "mat3x3<" << typeid(T).name() << ',' << P << ">: " << glm::tmat3x3<T,P>(v3_1, v3_2, v3_3) << '\n'
; 131  : 		<< "mat3x4<" << typeid(T).name() << ',' << P << ">: " << glm::tmat3x4<T,P>(v4_1, v4_2, v4_3) << '\n'
; 132  : 		<< "mat4x2<" << typeid(T).name() << ',' << P << ">: " << glm::tmat4x2<T,P>(v2_1, v2_2, v2_3, v2_4) << '\n'
; 133  : 		<< "mat4x3<" << typeid(T).name() << ',' << P << ">: " << glm::tmat4x3<T,P>(v3_1, v3_2, v3_3, v3_4) << '\n'
; 134  : 		<< "mat4x4<" << typeid(T).name() << ',' << P << ">: " << glm::tmat4x4<T,P>(v4_1, v4_2, v4_3, v4_4) << '\n';
; 135  : 
; 136  : 	os << glm::io::unformatted

	mov	DWORD PTR $T46[rsp], 0
	mov	DWORD PTR $T47[rsp], 0
	mov	DWORD PTR $T48[rsp], 0
	mov	DWORD PTR $T49[rsp], 0
	mov	DWORD PTR $T50[rsp], 0
	mov	DWORD PTR $T51[rsp], 0
	mov	DWORD PTR $T52[rsp], 0
	mov	DWORD PTR $T53[rsp], 0
	mov	DWORD PTR $T54[rsp], 0
	lea	rax, QWORD PTR v4_4$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR v4_3$[rsp]
	lea	r8, QWORD PTR v4_2$[rsp]
	lea	rdx, QWORD PTR v4_1$[rsp]
	lea	rcx, QWORD PTR $T33[rsp]
	call	??0?$tmat4x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@000@Z ; glm::tmat4x4<float,0>::tmat4x4<float,0>
	mov	QWORD PTR tv473[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv487[rsp], rax
	lea	rcx, QWORD PTR v3_4$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR v3_3$[rsp]
	lea	r8, QWORD PTR v3_2$[rsp]
	lea	rdx, QWORD PTR v3_1$[rsp]
	lea	rcx, QWORD PTR $T32[rsp]
	call	??0?$tmat4x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@000@Z ; glm::tmat4x3<float,0>::tmat4x3<float,0>
	mov	QWORD PTR tv495[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv509[rsp], rax
	lea	rcx, QWORD PTR v2_4$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR v2_3$[rsp]
	lea	r8, QWORD PTR v2_2$[rsp]
	lea	rdx, QWORD PTR v2_1$[rsp]
	lea	rcx, QWORD PTR $T31[rsp]
	call	??0?$tmat4x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@000@Z ; glm::tmat4x2<float,0>::tmat4x2<float,0>
	mov	QWORD PTR tv517[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv531[rsp], rax
	lea	r9, QWORD PTR v4_3$[rsp]
	lea	r8, QWORD PTR v4_2$[rsp]
	lea	rdx, QWORD PTR v4_1$[rsp]
	lea	rcx, QWORD PTR $T30[rsp]
	call	??0?$tmat3x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@00@Z ; glm::tmat3x4<float,0>::tmat3x4<float,0>
	mov	QWORD PTR tv539[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv552[rsp], rax
	lea	r9, QWORD PTR v3_3$[rsp]
	lea	r8, QWORD PTR v3_2$[rsp]
	lea	rdx, QWORD PTR v3_1$[rsp]
	lea	rcx, QWORD PTR $T29[rsp]
	call	??0?$tmat3x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@00@Z ; glm::tmat3x3<float,0>::tmat3x3<float,0>
	mov	QWORD PTR tv560[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv573[rsp], rax
	lea	r9, QWORD PTR v2_3$[rsp]
	lea	r8, QWORD PTR v2_2$[rsp]
	lea	rdx, QWORD PTR v2_1$[rsp]
	lea	rcx, QWORD PTR $T28[rsp]
	call	??0?$tmat3x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@00@Z ; glm::tmat3x2<float,0>::tmat3x2<float,0>
	mov	QWORD PTR tv581[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv594[rsp], rax
	lea	r8, QWORD PTR v4_2$[rsp]
	lea	rdx, QWORD PTR v4_1$[rsp]
	lea	rcx, QWORD PTR $T27[rsp]
	call	??0?$tmat2x4@M$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@0@Z ; glm::tmat2x4<float,0>::tmat2x4<float,0>
	mov	QWORD PTR tv602[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv646[rsp], rax
	lea	r8, QWORD PTR v3_2$[rsp]
	lea	rdx, QWORD PTR v3_1$[rsp]
	lea	rcx, QWORD PTR $T26[rsp]
	call	??0?$tmat2x3@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@0@Z ; glm::tmat2x3<float,0>::tmat2x3<float,0>
	mov	QWORD PTR tv654[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv666[rsp], rax
	lea	r8, QWORD PTR v2_2$[rsp]
	lea	rdx, QWORD PTR v2_1$[rsp]
	lea	rcx, QWORD PTR $T25[rsp]
	call	??0?$tmat2x2@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z ; glm::tmat2x2<float,0>::tmat2x2<float,0>
	mov	QWORD PTR tv674[rsp], rax
	lea	rcx, OFFSET FLAT:??_R0M@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv686[rsp], rax
	mov	edx, DWORD PTR otype$[rsp]
	lea	rcx, QWORD PTR $T55[rsp]
	call	??0order@io@glm@@QEAA@W4order_type@12@@Z ; glm::io::order::order
	mov	QWORD PTR tv692[rsp], rax
	lea	rdx, OFFSET FLAT:??$unformatted@DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ios@DU?$char_traits@D@std@@@std@@AEAV23@@Z ; glm::io::unformatted<char,std::char_traits<char> >
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV?$basic_ios@DU?$char_traits@D@std@@@1@AEAV21@@Z@Z
	mov	rcx, QWORD PTR tv692[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUorder@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85853
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv686[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T54[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85852
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv674[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85851
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv666[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T53[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85850
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv654[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85849
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv646[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T52[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85848
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv602[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat2x4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85847
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv594[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T51[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85846
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv581[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85845
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv573[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T50[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85844
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv560[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85843
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv552[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T49[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85842
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv539[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat3x4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85841
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv531[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T48[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85840
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv517[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85839
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv509[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T47[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85838
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv495[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85837
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv487[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 44					; 0000002cH
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR $T46[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@?A0x8a664765@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBW4precision@glm@@@Z ; `anonymous namespace'::operator<<<char,std::char_traits<char> >
	lea	rdx, OFFSET FLAT:$SG85836
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv473[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tmat4x4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 137  : 		<< glm::io::order(otype)
; 138  : 		<< "mat2x2<" << typeid(T).name() << ',' << P << ">: " << glm::tmat2x2<T,P>(v2_1, v2_2) << '\n'
; 139  : 		<< "mat2x3<" << typeid(T).name() << ',' << P << ">: " << glm::tmat2x3<T,P>(v3_1, v3_2) << '\n'
; 140  : 		<< "mat2x4<" << typeid(T).name() << ',' << P << ">: " << glm::tmat2x4<T,P>(v4_1, v4_2) << '\n'
; 141  : 		<< "mat3x2<" << typeid(T).name() << ',' << P << ">: " << glm::tmat3x2<T,P>(v2_1, v2_2, v2_3) << '\n'
; 142  : 		<< "mat3x3<" << typeid(T).name() << ',' << P << ">: " << glm::tmat3x3<T,P>(v3_1, v3_2, v3_3) << '\n'
; 143  : 		<< "mat3x4<" << typeid(T).name() << ',' << P << ">: " << glm::tmat3x4<T,P>(v4_1, v4_2, v4_3) << '\n'
; 144  : 		<< "mat4x2<" << typeid(T).name() << ',' << P << ">: " << glm::tmat4x2<T,P>(v2_1, v2_2, v2_3, v2_4) << '\n'
; 145  : 		<< "mat4x3<" << typeid(T).name() << ',' << P << ">: " << glm::tmat4x3<T,P>(v3_1, v3_2, v3_3, v3_4) << '\n'
; 146  : 		<< "mat4x4<" << typeid(T).name() << ',' << P << ">: " << glm::tmat4x4<T,P>(v4_1, v4_2, v4_3, v4_4) << '\n';
; 147  :   
; 148  : 	return 0;

	mov	DWORD PTR $T56[rsp], 0
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	mov	eax, DWORD PTR $T56[rsp]

; 149  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1728				; 000006c0H
	pop	rdi
	ret	0
??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z ENDP ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2_1$ = 56
v2_2$ = 88
v2_3$ = 120
v2_4$ = 152
v3_1$ = 184
v3_2$ = 232
v3_3$ = 280
v3_4$ = 328
v4_1$ = 376
v4_2$ = 424
v4_3$ = 472
v4_4$ = 520
iofs$ = 568
$T16 = 632
$T17 = 648
$T18 = 672
$T19 = 704
$T20 = 728
$T21 = 768
$T22 = 816
$T23 = 848
$T24 = 896
$T25 = 960
$T26 = 976
$T27 = 1000
$T28 = 1032
$T29 = 1056
$T30 = 1096
$T31 = 1144
$T32 = 1176
$T33 = 1232
$T34 = 1304
$T35 = 1308
$T36 = 1312
$T37 = 1316
$T38 = 1320
$T39 = 1324
$T40 = 1328
$T41 = 1332
$T42 = 1336
$T43 = 1340
$T44 = 1344
$T45 = 1348
$T46 = 1352
$T47 = 1356
$T48 = 1360
$T49 = 1364
$T50 = 1368
$T51 = 1372
$T52 = 1376
$T53 = 1380
$T54 = 1384
$T55 = 1388
$T56 = 1392
tv68 = 1400
tv172 = 1408
tv186 = 1416
tv194 = 1424
tv208 = 1432
tv216 = 1440
tv230 = 1448
tv238 = 1456
tv251 = 1464
tv259 = 1472
tv272 = 1480
tv280 = 1488
tv293 = 1496
tv301 = 1504
tv313 = 1512
tv321 = 1520
tv333 = 1528
tv341 = 1536
tv385 = 1544
tv391 = 1552
tv396 = 1560
tv473 = 1568
tv487 = 1576
tv495 = 1584
tv509 = 1592
tv517 = 1600
tv531 = 1608
tv539 = 1616
tv552 = 1624
tv560 = 1632
tv573 = 1640
tv581 = 1648
tv594 = 1656
tv602 = 1664
tv646 = 1672
tv654 = 1680
tv666 = 1688
tv674 = 1696
tv686 = 1704
tv692 = 1712
__$ArrayPad$ = 1720
os$ = 1744
otype$ = 1752
?dtor$0@?0???$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z@4HA PROC ; `test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z@4HA ENDP ; `test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2_1$ = 56
v2_2$ = 88
v2_3$ = 120
v2_4$ = 152
v3_1$ = 184
v3_2$ = 232
v3_3$ = 280
v3_4$ = 328
v4_1$ = 376
v4_2$ = 424
v4_3$ = 472
v4_4$ = 520
iofs$ = 568
$T16 = 632
$T17 = 648
$T18 = 672
$T19 = 704
$T20 = 728
$T21 = 768
$T22 = 816
$T23 = 848
$T24 = 896
$T25 = 960
$T26 = 976
$T27 = 1000
$T28 = 1032
$T29 = 1056
$T30 = 1096
$T31 = 1144
$T32 = 1176
$T33 = 1232
$T34 = 1304
$T35 = 1308
$T36 = 1312
$T37 = 1316
$T38 = 1320
$T39 = 1324
$T40 = 1328
$T41 = 1332
$T42 = 1336
$T43 = 1340
$T44 = 1344
$T45 = 1348
$T46 = 1352
$T47 = 1356
$T48 = 1360
$T49 = 1364
$T50 = 1368
$T51 = 1372
$T52 = 1376
$T53 = 1380
$T54 = 1384
$T55 = 1388
$T56 = 1392
tv68 = 1400
tv172 = 1408
tv186 = 1416
tv194 = 1424
tv208 = 1432
tv216 = 1440
tv230 = 1448
tv238 = 1456
tv251 = 1464
tv259 = 1472
tv272 = 1480
tv280 = 1488
tv293 = 1496
tv301 = 1504
tv313 = 1512
tv321 = 1520
tv333 = 1528
tv341 = 1536
tv385 = 1544
tv391 = 1552
tv396 = 1560
tv473 = 1568
tv487 = 1576
tv495 = 1584
tv509 = 1592
tv517 = 1600
tv531 = 1608
tv539 = 1616
tv552 = 1624
tv560 = 1632
tv573 = 1640
tv581 = 1648
tv594 = 1656
tv602 = 1664
tv646 = 1672
tv654 = 1680
tv666 = 1688
tv674 = 1696
tv686 = 1704
tv692 = 1712
__$ArrayPad$ = 1720
os$ = 1744
otype$ = 1752
?dtor$0@?0???$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z@4HA PROC ; `test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z@4HA ENDP ; `test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
_TEXT	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z PROC ; test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >, COMDAT

; 83   : {

$LN10:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 624				; 00000270H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 144				; 00000090H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+640]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 84   : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 85   : 
; 86   : 	glm::tvec2<T,P> const v2(0, 1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR v2$[rsp]
	call	??$?0HH@?$tvec2@I$01@glm@@QEAA@HH@Z	; glm::tvec2<unsigned int,2>::tvec2<unsigned int,2><int,int>

; 87   : 	glm::tvec3<T,P> const v3(2, 3, 4);

	mov	r9d, 4
	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR v3$[rsp]
	call	??$?0HHH@?$tvec3@I$01@glm@@QEAA@HHH@Z	; glm::tvec3<unsigned int,2>::tvec3<unsigned int,2><int,int,int>

; 88   : 	glm::tvec4<T,P> const v4(5, 6, 7, 8);

	mov	DWORD PTR [rsp+32], 8
	mov	r9d, 7
	mov	r8d, 6
	mov	edx, 5
	lea	rcx, QWORD PTR v4$[rsp]
	call	??$?0HHHH@?$tvec4@I$01@glm@@QEAA@HHHH@Z	; glm::tvec4<unsigned int,2>::tvec4<unsigned int,2><int,int,int,int>

; 89   : 
; 90   : 	os << type_name<T,P>(os, v2) << ": " << v2 << '\n'

	lea	r8, QWORD PTR v4$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv264[rsp], rax
	mov	rax, QWORD PTR tv264[rsp]
	mov	QWORD PTR tv251[rsp], rax
	lea	r8, QWORD PTR v3$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T8[rsp]
	call	??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv265[rsp], rax
	mov	rax, QWORD PTR tv265[rsp]
	mov	QWORD PTR tv253[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv266[rsp], rax
	mov	rax, QWORD PTR tv266[rsp]
	mov	QWORD PTR tv255[rsp], rax
	mov	rdx, QWORD PTR tv255[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG84630
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v2$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv253[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG84629
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v3$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv251[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG84628
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v4$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T8[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 91   : 		<< type_name<T,P>(os, v3) << ": " << v3 << '\n'
; 92   : 		<< type_name<T,P>(os, v4) << ": " << v4 << '\n';
; 93   : 
; 94   : 	glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 95   : 
; 96   : 	os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	lea	r8, QWORD PTR v4$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$type_name@I$01U?$tvec4@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv172[rsp], rax
	mov	rax, QWORD PTR tv172[rsp]
	mov	QWORD PTR tv258[rsp], rax
	lea	r8, QWORD PTR v3$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T11[rsp]
	call	??$type_name@I$01U?$tvec3@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv267[rsp], rax
	mov	rax, QWORD PTR tv267[rsp]
	mov	QWORD PTR tv260[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T10[rsp]
	call	??$type_name@I$01U?$tvec2@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv268[rsp], rax
	mov	rax, QWORD PTR tv268[rsp]
	mov	QWORD PTR tv262[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T13[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv229[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv229[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv262[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG84633
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v2$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv260[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG84632
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v3$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv258[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG84631
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v4$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T10[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T11[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T12[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 97   : 		<< type_name<T,P>(os, v2) << ": " << v2 << '\n'
; 98   : 		<< type_name<T,P>(os, v3) << ": " << v3 << '\n'
; 99   : 		<< type_name<T,P>(os, v4) << ": " << v4 << '\n';
; 100  : 
; 101  : 	return 0;

	mov	DWORD PTR $T15[rsp], 0
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	mov	eax, DWORD PTR $T15[rsp]

; 102  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 624				; 00000270H
	pop	rdi
	ret	0
??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ENDP ; test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z PROC ; test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >, COMDAT

; 83   : {

$LN10:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 624				; 00000270H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 144				; 00000090H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+640]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 84   : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 85   : 
; 86   : 	glm::tvec2<T,P> const v2(0, 1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR v2$[rsp]
	call	??$?0HH@?$tvec2@I$01@glm@@QEAA@HH@Z	; glm::tvec2<unsigned int,2>::tvec2<unsigned int,2><int,int>

; 87   : 	glm::tvec3<T,P> const v3(2, 3, 4);

	mov	r9d, 4
	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR v3$[rsp]
	call	??$?0HHH@?$tvec3@I$01@glm@@QEAA@HHH@Z	; glm::tvec3<unsigned int,2>::tvec3<unsigned int,2><int,int,int>

; 88   : 	glm::tvec4<T,P> const v4(5, 6, 7, 8);

	mov	DWORD PTR [rsp+32], 8
	mov	r9d, 7
	mov	r8d, 6
	mov	edx, 5
	lea	rcx, QWORD PTR v4$[rsp]
	call	??$?0HHHH@?$tvec4@I$01@glm@@QEAA@HHHH@Z	; glm::tvec4<unsigned int,2>::tvec4<unsigned int,2><int,int,int,int>

; 89   : 
; 90   : 	os << type_name<T,P>(os, v2) << ": " << v2 << '\n'

	lea	r8, QWORD PTR v4$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,char,std::char_traits<char> >
	mov	QWORD PTR tv264[rsp], rax
	mov	rax, QWORD PTR tv264[rsp]
	mov	QWORD PTR tv251[rsp], rax
	lea	r8, QWORD PTR v3$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T8[rsp]
	call	??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,char,std::char_traits<char> >
	mov	QWORD PTR tv265[rsp], rax
	mov	rax, QWORD PTR tv265[rsp]
	mov	QWORD PTR tv253[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,char,std::char_traits<char> >
	mov	QWORD PTR tv266[rsp], rax
	mov	rax, QWORD PTR tv266[rsp]
	mov	QWORD PTR tv255[rsp], rax
	mov	rdx, QWORD PTR tv255[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG84542
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v2$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rdx, QWORD PTR tv253[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG84541
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v3$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rdx, QWORD PTR tv251[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG84540
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v4$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T8[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 91   : 		<< type_name<T,P>(os, v3) << ": " << v3 << '\n'
; 92   : 		<< type_name<T,P>(os, v4) << ": " << v4 << '\n';
; 93   : 
; 94   : 	glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >
	npad	1

; 95   : 
; 96   : 	os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	lea	r8, QWORD PTR v4$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$type_name@I$01U?$tvec4@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec4<unsigned int,2>,char,std::char_traits<char> >
	mov	QWORD PTR tv172[rsp], rax
	mov	rax, QWORD PTR tv172[rsp]
	mov	QWORD PTR tv258[rsp], rax
	lea	r8, QWORD PTR v3$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T11[rsp]
	call	??$type_name@I$01U?$tvec3@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec3<unsigned int,2>,char,std::char_traits<char> >
	mov	QWORD PTR tv267[rsp], rax
	mov	rax, QWORD PTR tv267[rsp]
	mov	QWORD PTR tv260[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T10[rsp]
	call	??$type_name@I$01U?$tvec2@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tvec2<unsigned int,2>,char,std::char_traits<char> >
	mov	QWORD PTR tv268[rsp], rax
	mov	rax, QWORD PTR tv268[rsp]
	mov	QWORD PTR tv262[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T13[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv229[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rcx, QWORD PTR tv229[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rdx, QWORD PTR tv262[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG84545
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v2$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@I$01@0@@Z ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rdx, QWORD PTR tv260[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG84544
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v3$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@I$01@0@@Z ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rdx, QWORD PTR tv258[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG84543
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v4$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@I$01@0@@Z ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1
	lea	rcx, QWORD PTR $T10[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T11[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T12[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 97   : 		<< type_name<T,P>(os, v2) << ": " << v2 << '\n'
; 98   : 		<< type_name<T,P>(os, v3) << ": " << v3 << '\n'
; 99   : 		<< type_name<T,P>(os, v4) << ": " << v4 << '\n';
; 100  : 
; 101  : 	return 0;

	mov	DWORD PTR $T15[rsp], 0
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	mov	eax, DWORD PTR $T15[rsp]

; 102  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 624				; 00000270H
	pop	rdi
	ret	0
??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ENDP ; test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0???$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
_TEXT	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z PROC ; test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >, COMDAT

; 83   : {

$LN10:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 624				; 00000270H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 144				; 00000090H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+640]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 84   : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 85   : 
; 86   : 	glm::tvec2<T,P> const v2(0, 1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR v2$[rsp]
	call	??0?$tvec2@H$00@glm@@QEAA@HH@Z		; glm::tvec2<int,1>::tvec2<int,1>

; 87   : 	glm::tvec3<T,P> const v3(2, 3, 4);

	mov	r9d, 4
	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR v3$[rsp]
	call	??0?$tvec3@H$00@glm@@QEAA@HHH@Z		; glm::tvec3<int,1>::tvec3<int,1>

; 88   : 	glm::tvec4<T,P> const v4(5, 6, 7, 8);

	mov	DWORD PTR [rsp+32], 8
	mov	r9d, 7
	mov	r8d, 6
	mov	edx, 5
	lea	rcx, QWORD PTR v4$[rsp]
	call	??0?$tvec4@H$00@glm@@QEAA@HHHH@Z	; glm::tvec4<int,1>::tvec4<int,1>

; 89   : 
; 90   : 	os << type_name<T,P>(os, v2) << ": " << v2 << '\n'

	lea	r8, QWORD PTR v4$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv264[rsp], rax
	mov	rax, QWORD PTR tv264[rsp]
	mov	QWORD PTR tv251[rsp], rax
	lea	r8, QWORD PTR v3$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T8[rsp]
	call	??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv265[rsp], rax
	mov	rax, QWORD PTR tv265[rsp]
	mov	QWORD PTR tv253[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv266[rsp], rax
	mov	rax, QWORD PTR tv266[rsp]
	mov	QWORD PTR tv255[rsp], rax
	mov	rdx, QWORD PTR tv255[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG83887
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v2$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv253[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG83886
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v3$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv251[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG83885
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v4$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T8[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 91   : 		<< type_name<T,P>(os, v3) << ": " << v3 << '\n'
; 92   : 		<< type_name<T,P>(os, v4) << ": " << v4 << '\n';
; 93   : 
; 94   : 	glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 95   : 
; 96   : 	os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	lea	r8, QWORD PTR v4$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$type_name@H$00U?$tvec4@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv172[rsp], rax
	mov	rax, QWORD PTR tv172[rsp]
	mov	QWORD PTR tv258[rsp], rax
	lea	r8, QWORD PTR v3$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T11[rsp]
	call	??$type_name@H$00U?$tvec3@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv267[rsp], rax
	mov	rax, QWORD PTR tv267[rsp]
	mov	QWORD PTR tv260[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T10[rsp]
	call	??$type_name@H$00U?$tvec2@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv268[rsp], rax
	mov	rax, QWORD PTR tv268[rsp]
	mov	QWORD PTR tv262[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T13[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv229[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv229[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv262[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG83890
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v2$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv260[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG83889
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v3$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv258[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG83888
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v4$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T10[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T11[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T12[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 97   : 		<< type_name<T,P>(os, v2) << ": " << v2 << '\n'
; 98   : 		<< type_name<T,P>(os, v3) << ": " << v3 << '\n'
; 99   : 		<< type_name<T,P>(os, v4) << ": " << v4 << '\n';
; 100  : 
; 101  : 	return 0;

	mov	DWORD PTR $T15[rsp], 0
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	mov	eax, DWORD PTR $T15[rsp]

; 102  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 624				; 00000270H
	pop	rdi
	ret	0
??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ENDP ; test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z PROC ; test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >, COMDAT

; 83   : {

$LN10:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 624				; 00000270H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 144				; 00000090H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+640]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 84   : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 85   : 
; 86   : 	glm::tvec2<T,P> const v2(0, 1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR v2$[rsp]
	call	??0?$tvec2@H$00@glm@@QEAA@HH@Z		; glm::tvec2<int,1>::tvec2<int,1>

; 87   : 	glm::tvec3<T,P> const v3(2, 3, 4);

	mov	r9d, 4
	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR v3$[rsp]
	call	??0?$tvec3@H$00@glm@@QEAA@HHH@Z		; glm::tvec3<int,1>::tvec3<int,1>

; 88   : 	glm::tvec4<T,P> const v4(5, 6, 7, 8);

	mov	DWORD PTR [rsp+32], 8
	mov	r9d, 7
	mov	r8d, 6
	mov	edx, 5
	lea	rcx, QWORD PTR v4$[rsp]
	call	??0?$tvec4@H$00@glm@@QEAA@HHHH@Z	; glm::tvec4<int,1>::tvec4<int,1>

; 89   : 
; 90   : 	os << type_name<T,P>(os, v2) << ": " << v2 << '\n'

	lea	r8, QWORD PTR v4$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,char,std::char_traits<char> >
	mov	QWORD PTR tv264[rsp], rax
	mov	rax, QWORD PTR tv264[rsp]
	mov	QWORD PTR tv251[rsp], rax
	lea	r8, QWORD PTR v3$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T8[rsp]
	call	??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,char,std::char_traits<char> >
	mov	QWORD PTR tv265[rsp], rax
	mov	rax, QWORD PTR tv265[rsp]
	mov	QWORD PTR tv253[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,char,std::char_traits<char> >
	mov	QWORD PTR tv266[rsp], rax
	mov	rax, QWORD PTR tv266[rsp]
	mov	QWORD PTR tv255[rsp], rax
	mov	rdx, QWORD PTR tv255[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG83799
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v2$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z ; glm::operator<<<char,std::char_traits<char>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rdx, QWORD PTR tv253[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG83798
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v3$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z ; glm::operator<<<char,std::char_traits<char>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rdx, QWORD PTR tv251[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG83797
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v4$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z ; glm::operator<<<char,std::char_traits<char>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T8[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 91   : 		<< type_name<T,P>(os, v3) << ": " << v3 << '\n'
; 92   : 		<< type_name<T,P>(os, v4) << ": " << v4 << '\n';
; 93   : 
; 94   : 	glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >
	npad	1

; 95   : 
; 96   : 	os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	lea	r8, QWORD PTR v4$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$type_name@H$00U?$tvec4@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tvec4<int,1>,char,std::char_traits<char> >
	mov	QWORD PTR tv172[rsp], rax
	mov	rax, QWORD PTR tv172[rsp]
	mov	QWORD PTR tv258[rsp], rax
	lea	r8, QWORD PTR v3$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T11[rsp]
	call	??$type_name@H$00U?$tvec3@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tvec3<int,1>,char,std::char_traits<char> >
	mov	QWORD PTR tv267[rsp], rax
	mov	rax, QWORD PTR tv267[rsp]
	mov	QWORD PTR tv260[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T10[rsp]
	call	??$type_name@H$00U?$tvec2@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tvec2<int,1>,char,std::char_traits<char> >
	mov	QWORD PTR tv268[rsp], rax
	mov	rax, QWORD PTR tv268[rsp]
	mov	QWORD PTR tv262[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T13[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv229[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rcx, QWORD PTR tv229[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rdx, QWORD PTR tv262[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG83802
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v2$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@H$00@0@@Z ; glm::operator<<<char,std::char_traits<char>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rdx, QWORD PTR tv260[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG83801
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v3$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@H$00@0@@Z ; glm::operator<<<char,std::char_traits<char>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rdx, QWORD PTR tv258[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG83800
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v4$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@H$00@0@@Z ; glm::operator<<<char,std::char_traits<char>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1
	lea	rcx, QWORD PTR $T10[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T11[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T12[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 97   : 		<< type_name<T,P>(os, v2) << ": " << v2 << '\n'
; 98   : 		<< type_name<T,P>(os, v3) << ": " << v3 << '\n'
; 99   : 		<< type_name<T,P>(os, v4) << ": " << v4 << '\n';
; 100  : 
; 101  : 	return 0;

	mov	DWORD PTR $T15[rsp], 0
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	mov	eax, DWORD PTR $T15[rsp]

; 102  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 624				; 00000270H
	pop	rdi
	ret	0
??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ENDP ; test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0???$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
_TEXT	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z PROC ; test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >, COMDAT

; 83   : {

$LN10:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 624				; 00000270H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 144				; 00000090H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+640]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 84   : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 85   : 
; 86   : 	glm::tvec2<T,P> const v2(0, 1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR v2$[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>

; 87   : 	glm::tvec3<T,P> const v3(2, 3, 4);

	mov	r9d, 4
	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR v3$[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>

; 88   : 	glm::tvec4<T,P> const v4(5, 6, 7, 8);

	mov	DWORD PTR [rsp+32], 8
	mov	r9d, 7
	mov	r8d, 6
	mov	edx, 5
	lea	rcx, QWORD PTR v4$[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>

; 89   : 
; 90   : 	os << type_name<T,P>(os, v2) << ": " << v2 << '\n'

	lea	r8, QWORD PTR v4$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv264[rsp], rax
	mov	rax, QWORD PTR tv264[rsp]
	mov	QWORD PTR tv251[rsp], rax
	lea	r8, QWORD PTR v3$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T8[rsp]
	call	??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv265[rsp], rax
	mov	rax, QWORD PTR tv265[rsp]
	mov	QWORD PTR tv253[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv266[rsp], rax
	mov	rax, QWORD PTR tv266[rsp]
	mov	QWORD PTR tv255[rsp], rax
	mov	rdx, QWORD PTR tv255[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG83143
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v2$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv253[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG83142
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v3$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv251[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG83141
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v4$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T8[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 91   : 		<< type_name<T,P>(os, v3) << ": " << v3 << '\n'
; 92   : 		<< type_name<T,P>(os, v4) << ": " << v4 << '\n';
; 93   : 
; 94   : 	glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 95   : 
; 96   : 	os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	lea	r8, QWORD PTR v4$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$type_name@M$0A@U?$tvec4@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv172[rsp], rax
	mov	rax, QWORD PTR tv172[rsp]
	mov	QWORD PTR tv258[rsp], rax
	lea	r8, QWORD PTR v3$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T11[rsp]
	call	??$type_name@M$0A@U?$tvec3@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv267[rsp], rax
	mov	rax, QWORD PTR tv267[rsp]
	mov	QWORD PTR tv260[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T10[rsp]
	call	??$type_name@M$0A@U?$tvec2@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv268[rsp], rax
	mov	rax, QWORD PTR tv268[rsp]
	mov	QWORD PTR tv262[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T13[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv229[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv229[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv262[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG83146
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v2$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv260[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG83145
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v3$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv258[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG83144
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR v4$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T10[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T11[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T12[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 97   : 		<< type_name<T,P>(os, v2) << ": " << v2 << '\n'
; 98   : 		<< type_name<T,P>(os, v3) << ": " << v3 << '\n'
; 99   : 		<< type_name<T,P>(os, v4) << ": " << v4 << '\n';
; 100  : 
; 101  : 	return 0;

	mov	DWORD PTR $T15[rsp], 0
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	mov	eax, DWORD PTR $T15[rsp]

; 102  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 624				; 00000270H
	pop	rdi
	ret	0
??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ENDP ; test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z PROC ; test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >, COMDAT

; 83   : {

$LN10:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 624				; 00000270H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 144				; 00000090H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+640]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 84   : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 85   : 
; 86   : 	glm::tvec2<T,P> const v2(0, 1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR v2$[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>

; 87   : 	glm::tvec3<T,P> const v3(2, 3, 4);

	mov	r9d, 4
	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR v3$[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>

; 88   : 	glm::tvec4<T,P> const v4(5, 6, 7, 8);

	mov	DWORD PTR [rsp+32], 8
	mov	r9d, 7
	mov	r8d, 6
	mov	edx, 5
	lea	rcx, QWORD PTR v4$[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>

; 89   : 
; 90   : 	os << type_name<T,P>(os, v2) << ": " << v2 << '\n'

	lea	r8, QWORD PTR v4$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,char,std::char_traits<char> >
	mov	QWORD PTR tv264[rsp], rax
	mov	rax, QWORD PTR tv264[rsp]
	mov	QWORD PTR tv251[rsp], rax
	lea	r8, QWORD PTR v3$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T8[rsp]
	call	??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,char,std::char_traits<char> >
	mov	QWORD PTR tv265[rsp], rax
	mov	rax, QWORD PTR tv265[rsp]
	mov	QWORD PTR tv253[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,char,std::char_traits<char> >
	mov	QWORD PTR tv266[rsp], rax
	mov	rax, QWORD PTR tv266[rsp]
	mov	QWORD PTR tv255[rsp], rax
	mov	rdx, QWORD PTR tv255[rsp]
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG83055
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v2$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rdx, QWORD PTR tv253[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG83054
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v3$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rdx, QWORD PTR tv251[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG83053
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v4$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T8[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 91   : 		<< type_name<T,P>(os, v3) << ": " << v3 << '\n'
; 92   : 		<< type_name<T,P>(os, v4) << ": " << v4 << '\n';
; 93   : 
; 94   : 	glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >
	npad	1

; 95   : 
; 96   : 	os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	lea	r8, QWORD PTR v4$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$type_name@M$0A@U?$tvec4@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec4@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tvec4<float,0>,char,std::char_traits<char> >
	mov	QWORD PTR tv172[rsp], rax
	mov	rax, QWORD PTR tv172[rsp]
	mov	QWORD PTR tv258[rsp], rax
	lea	r8, QWORD PTR v3$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T11[rsp]
	call	??$type_name@M$0A@U?$tvec3@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec3@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tvec3<float,0>,char,std::char_traits<char> >
	mov	QWORD PTR tv267[rsp], rax
	mov	rax, QWORD PTR tv267[rsp]
	mov	QWORD PTR tv260[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T10[rsp]
	call	??$type_name@M$0A@U?$tvec2@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tvec2@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tvec2<float,0>,char,std::char_traits<char> >
	mov	QWORD PTR tv268[rsp], rax
	mov	rax, QWORD PTR tv268[rsp]
	mov	QWORD PTR tv262[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T13[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv229[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rcx, QWORD PTR tv229[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rdx, QWORD PTR tv262[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG83058
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v2$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec2@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rdx, QWORD PTR tv260[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG83057
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v3$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec3@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rdx, QWORD PTR tv258[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG83056
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR v4$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tvec4@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1
	lea	rcx, QWORD PTR $T10[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T11[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T12[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 97   : 		<< type_name<T,P>(os, v2) << ": " << v2 << '\n'
; 98   : 		<< type_name<T,P>(os, v3) << ": " << v3 << '\n'
; 99   : 		<< type_name<T,P>(os, v4) << ": " << v4 << '\n';
; 100  : 
; 101  : 	return 0;

	mov	DWORD PTR $T15[rsp], 0
	lea	rcx, QWORD PTR iofs$[rsp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	mov	eax, DWORD PTR $T15[rsp]

; 102  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 624				; 00000270H
	pop	rdi
	ret	0
??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ENDP ; test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
v2$ = 56
v3$ = 88
v4$ = 136
$T7 = 168
$T8 = 208
$T9 = 248
iofs$ = 296
$T10 = 360
$T11 = 400
$T12 = 440
$T13 = 488
$T14 = 492
$T15 = 496
tv68 = 504
tv264 = 512
tv251 = 520
tv265 = 528
tv253 = 536
tv266 = 544
tv255 = 552
tv172 = 560
tv258 = 568
tv267 = 576
tv260 = 584
tv268 = 592
tv262 = 600
tv229 = 608
__$ArrayPad$ = 616
os$ = 640
?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0???$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
_TEXT	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z PROC ; test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >, COMDAT

; 59   : {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 416				; 000001a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+432]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 60   : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 61   : 
; 62   : 	glm::tquat<T,P> const q(1, 0, 0, 0);

	mov	DWORD PTR $T10[rsp], 0
	mov	DWORD PTR $T11[rsp], 0
	mov	DWORD PTR $T12[rsp], 0
	mov	DWORD PTR $T13[rsp], 1
	lea	rax, QWORD PTR $T10[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR $T11[rsp]
	lea	r8, QWORD PTR $T12[rsp]
	lea	rdx, QWORD PTR $T13[rsp]
	lea	rcx, QWORD PTR q$[rsp]
	call	??0?$tquat@I$01@glm@@QEAA@AEBI000@Z	; glm::tquat<unsigned int,2>::tquat<unsigned int,2>

; 63   : 
; 64   : 	{
; 65   : 		glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$6[rsp]
	call	??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 66   : 
; 67   : 		os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	lea	r8, QWORD PTR q$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv80[rsp], rax
	mov	rax, QWORD PTR tv80[rsp]
	mov	QWORD PTR tv190[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv141[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T15[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv141[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv190[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG82764
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR q$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 68   : 			<< type_name<T,P>(os, q) << ": " << q << '\n';
; 69   : 	}

	lea	rcx, QWORD PTR iofs$6[rsp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >

; 70   : 
; 71   : 	{
; 72   : 		glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$8[rsp]
	call	??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 73   : 
; 74   : 		os << glm::io::unformatted

	lea	r8, QWORD PTR q$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$type_name@I$01U?$tquat@I$01@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv155[rsp], rax
	mov	rax, QWORD PTR tv155[rsp]
	mov	QWORD PTR tv193[rsp], rax
	lea	rdx, OFFSET FLAT:??$unformatted@_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@AEAV23@@Z ; glm::io::unformatted<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAV?$basic_ios@_WU?$char_traits@_W@std@@@1@AEAV21@@Z@Z
	mov	rdx, QWORD PTR tv193[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG82765
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR q$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@I$01@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 75   : 			<< type_name<T,P>(os, q) << ": " << q << '\n';
; 76   : 	}

	lea	rcx, QWORD PTR iofs$8[rsp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >

; 77   : 
; 78   : 	return 0;

	xor	eax, eax

; 79   : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 416				; 000001a0H
	pop	rdi
	ret	0
??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ENDP ; test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$6[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$8[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$6[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$8[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z PROC ; test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >, COMDAT

; 59   : {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 416				; 000001a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+432]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 60   : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 61   : 
; 62   : 	glm::tquat<T,P> const q(1, 0, 0, 0);

	mov	DWORD PTR $T10[rsp], 0
	mov	DWORD PTR $T11[rsp], 0
	mov	DWORD PTR $T12[rsp], 0
	mov	DWORD PTR $T13[rsp], 1
	lea	rax, QWORD PTR $T10[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR $T11[rsp]
	lea	r8, QWORD PTR $T12[rsp]
	lea	rdx, QWORD PTR $T13[rsp]
	lea	rcx, QWORD PTR q$[rsp]
	call	??0?$tquat@I$01@glm@@QEAA@AEBI000@Z	; glm::tquat<unsigned int,2>::tquat<unsigned int,2>

; 63   : 
; 64   : 	{
; 65   : 		glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$6[rsp]
	call	??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >
	npad	1

; 66   : 
; 67   : 		os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	lea	r8, QWORD PTR q$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,char,std::char_traits<char> >
	mov	QWORD PTR tv80[rsp], rax
	mov	rax, QWORD PTR tv80[rsp]
	mov	QWORD PTR tv190[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv141[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T15[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rcx, QWORD PTR tv141[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rdx, QWORD PTR tv190[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG82719
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR q$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 68   : 			<< type_name<T,P>(os, q) << ": " << q << '\n';
; 69   : 	}

	lea	rcx, QWORD PTR iofs$6[rsp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >

; 70   : 
; 71   : 	{
; 72   : 		glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$8[rsp]
	call	??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >
	npad	1

; 73   : 
; 74   : 		os << glm::io::unformatted

	lea	r8, QWORD PTR q$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$type_name@I$01U?$tquat@I$01@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@I$01@glm@@@Z ; `anonymous namespace'::type_name<unsigned int,2,glm::tquat<unsigned int,2>,char,std::char_traits<char> >
	mov	QWORD PTR tv155[rsp], rax
	mov	rax, QWORD PTR tv155[rsp]
	mov	QWORD PTR tv193[rsp], rax
	lea	rdx, OFFSET FLAT:??$unformatted@DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ios@DU?$char_traits@D@std@@@std@@AEAV23@@Z ; glm::io::unformatted<char,std::char_traits<char> >
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV?$basic_ios@DU?$char_traits@D@std@@@1@AEAV21@@Z@Z
	mov	rdx, QWORD PTR tv193[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG82720
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR q$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@I$01@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@I$01@0@@Z ; glm::operator<<<char,std::char_traits<char>,unsigned int,2>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 75   : 			<< type_name<T,P>(os, q) << ": " << q << '\n';
; 76   : 	}

	lea	rcx, QWORD PTR iofs$8[rsp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >

; 77   : 
; 78   : 	return 0;

	xor	eax, eax

; 79   : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 416				; 000001a0H
	pop	rdi
	ret	0
??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ENDP ; test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$6[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$8[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$6[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$8[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
_TEXT	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z PROC ; test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >, COMDAT

; 59   : {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 416				; 000001a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+432]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 60   : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 61   : 
; 62   : 	glm::tquat<T,P> const q(1, 0, 0, 0);

	mov	DWORD PTR $T10[rsp], 0
	mov	DWORD PTR $T11[rsp], 0
	mov	DWORD PTR $T12[rsp], 0
	mov	DWORD PTR $T13[rsp], 1
	lea	rax, QWORD PTR $T10[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR $T11[rsp]
	lea	r8, QWORD PTR $T12[rsp]
	lea	rdx, QWORD PTR $T13[rsp]
	lea	rcx, QWORD PTR q$[rsp]
	call	??0?$tquat@H$00@glm@@QEAA@AEBH000@Z	; glm::tquat<int,1>::tquat<int,1>

; 63   : 
; 64   : 	{
; 65   : 		glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$6[rsp]
	call	??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 66   : 
; 67   : 		os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	lea	r8, QWORD PTR q$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv80[rsp], rax
	mov	rax, QWORD PTR tv80[rsp]
	mov	QWORD PTR tv190[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv141[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T15[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv141[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv190[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG82607
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR q$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 68   : 			<< type_name<T,P>(os, q) << ": " << q << '\n';
; 69   : 	}

	lea	rcx, QWORD PTR iofs$6[rsp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >

; 70   : 
; 71   : 	{
; 72   : 		glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$8[rsp]
	call	??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 73   : 
; 74   : 		os << glm::io::unformatted

	lea	r8, QWORD PTR q$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$type_name@H$00U?$tquat@H$00@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv155[rsp], rax
	mov	rax, QWORD PTR tv155[rsp]
	mov	QWORD PTR tv193[rsp], rax
	lea	rdx, OFFSET FLAT:??$unformatted@_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@AEAV23@@Z ; glm::io::unformatted<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAV?$basic_ios@_WU?$char_traits@_W@std@@@1@AEAV21@@Z@Z
	mov	rdx, QWORD PTR tv193[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG82608
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR q$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@H$00@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 75   : 			<< type_name<T,P>(os, q) << ": " << q << '\n';
; 76   : 	}

	lea	rcx, QWORD PTR iofs$8[rsp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >

; 77   : 
; 78   : 	return 0;

	xor	eax, eax

; 79   : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 416				; 000001a0H
	pop	rdi
	ret	0
??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ENDP ; test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$6[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$8[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$6[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$8[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z PROC ; test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >, COMDAT

; 59   : {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 416				; 000001a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+432]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 60   : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 61   : 
; 62   : 	glm::tquat<T,P> const q(1, 0, 0, 0);

	mov	DWORD PTR $T10[rsp], 0
	mov	DWORD PTR $T11[rsp], 0
	mov	DWORD PTR $T12[rsp], 0
	mov	DWORD PTR $T13[rsp], 1
	lea	rax, QWORD PTR $T10[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR $T11[rsp]
	lea	r8, QWORD PTR $T12[rsp]
	lea	rdx, QWORD PTR $T13[rsp]
	lea	rcx, QWORD PTR q$[rsp]
	call	??0?$tquat@H$00@glm@@QEAA@AEBH000@Z	; glm::tquat<int,1>::tquat<int,1>

; 63   : 
; 64   : 	{
; 65   : 		glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$6[rsp]
	call	??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >
	npad	1

; 66   : 
; 67   : 		os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	lea	r8, QWORD PTR q$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,char,std::char_traits<char> >
	mov	QWORD PTR tv80[rsp], rax
	mov	rax, QWORD PTR tv80[rsp]
	mov	QWORD PTR tv190[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv141[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T15[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rcx, QWORD PTR tv141[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rdx, QWORD PTR tv190[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG82562
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR q$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z ; glm::operator<<<char,std::char_traits<char>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 68   : 			<< type_name<T,P>(os, q) << ": " << q << '\n';
; 69   : 	}

	lea	rcx, QWORD PTR iofs$6[rsp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >

; 70   : 
; 71   : 	{
; 72   : 		glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$8[rsp]
	call	??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >
	npad	1

; 73   : 
; 74   : 		os << glm::io::unformatted

	lea	r8, QWORD PTR q$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$type_name@H$00U?$tquat@H$00@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@H$00@glm@@@Z ; `anonymous namespace'::type_name<int,1,glm::tquat<int,1>,char,std::char_traits<char> >
	mov	QWORD PTR tv155[rsp], rax
	mov	rax, QWORD PTR tv155[rsp]
	mov	QWORD PTR tv193[rsp], rax
	lea	rdx, OFFSET FLAT:??$unformatted@DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ios@DU?$char_traits@D@std@@@std@@AEAV23@@Z ; glm::io::unformatted<char,std::char_traits<char> >
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV?$basic_ios@DU?$char_traits@D@std@@@1@AEAV21@@Z@Z
	mov	rdx, QWORD PTR tv193[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG82563
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR q$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@H$00@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@H$00@0@@Z ; glm::operator<<<char,std::char_traits<char>,int,1>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 75   : 			<< type_name<T,P>(os, q) << ": " << q << '\n';
; 76   : 	}

	lea	rcx, QWORD PTR iofs$8[rsp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >

; 77   : 
; 78   : 	return 0;

	xor	eax, eax

; 79   : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 416				; 000001a0H
	pop	rdi
	ret	0
??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ENDP ; test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$6[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$8[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$6[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$8[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z
_TEXT	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z PROC ; test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >, COMDAT

; 59   : {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 416				; 000001a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+432]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 60   : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >

; 61   : 
; 62   : 	glm::tquat<T,P> const q(1, 0, 0, 0);

	xorps	xmm0, xmm0
	movss	DWORD PTR $T10[rsp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T11[rsp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T12[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T13[rsp], xmm0
	lea	rax, QWORD PTR $T10[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR $T11[rsp]
	lea	r8, QWORD PTR $T12[rsp]
	lea	rdx, QWORD PTR $T13[rsp]
	lea	rcx, QWORD PTR q$[rsp]
	call	??0?$tquat@M$0A@@glm@@QEAA@AEBM000@Z	; glm::tquat<float,0>::tquat<float,0>

; 63   : 
; 64   : 	{
; 65   : 		glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$6[rsp]
	call	??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 66   : 
; 67   : 		os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	lea	r8, QWORD PTR q$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv80[rsp], rax
	mov	rax, QWORD PTR tv80[rsp]
	mov	QWORD PTR tv190[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv141[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T15[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR tv141[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<wchar_t,std::char_traits<wchar_t> >
	mov	rdx, QWORD PTR tv190[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG82450
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR q$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 68   : 			<< type_name<T,P>(os, q) << ": " << q << '\n';
; 69   : 	}

	lea	rcx, QWORD PTR iofs$6[rsp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >

; 70   : 
; 71   : 	{
; 72   : 		glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$8[rsp]
	call	??0?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@AEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@Z ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	npad	1

; 73   : 
; 74   : 		os << glm::io::unformatted

	lea	r8, QWORD PTR q$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$type_name@M$0A@U?$tquat@M$0A@@glm@@_WU?$char_traits@_W@std@@@?A0x8a664765@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,wchar_t,std::char_traits<wchar_t> >
	mov	QWORD PTR tv155[rsp], rax
	mov	rax, QWORD PTR tv155[rsp]
	mov	QWORD PTR tv193[rsp], rax
	lea	rdx, OFFSET FLAT:??$unformatted@_WU?$char_traits@_W@std@@@io@glm@@YAAEAV?$basic_ios@_WU?$char_traits@_W@std@@@std@@AEAV23@@Z ; glm::io::unformatted<wchar_t,std::char_traits<wchar_t> >
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAV?$basic_ios@_WU?$char_traits@_W@std@@@1@AEAV21@@Z@Z
	mov	rdx, QWORD PTR tv193[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	rdx, OFFSET FLAT:$SG82451
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	lea	rdx, QWORD PTR q$[rsp]
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@M$0A@@glm@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z ; glm::operator<<<wchar_t,std::char_traits<wchar_t>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@D@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 75   : 			<< type_name<T,P>(os, q) << ": " << q << '\n';
; 76   : 	}

	lea	rcx, QWORD PTR iofs$8[rsp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >

; 77   : 
; 78   : 	return 0;

	xor	eax, eax

; 79   : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 416				; 000001a0H
	pop	rdi
	ret	0
??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ENDP ; test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$6[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$8[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$6[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$8[rbp]
	call	??1?$basic_format_saver@_WU?$char_traits@_W@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<wchar_t,std::char_traits<wchar_t> >::~basic_format_saver<wchar_t,std::char_traits<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z PROC ; test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >, COMDAT

; 59   : {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 416				; 000001a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+432]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 60   : 	os << '\n' << typeid(OS).name() << '\n';

	lea	rcx, OFFSET FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
	call	?name@type_info@@QEBAPEBDXZ		; type_info::name
	mov	QWORD PTR tv68[rsp], rax
	mov	dl, 10
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 61   : 
; 62   : 	glm::tquat<T,P> const q(1, 0, 0, 0);

	xorps	xmm0, xmm0
	movss	DWORD PTR $T10[rsp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T11[rsp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR $T12[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T13[rsp], xmm0
	lea	rax, QWORD PTR $T10[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR $T11[rsp]
	lea	r8, QWORD PTR $T12[rsp]
	lea	rdx, QWORD PTR $T13[rsp]
	lea	rcx, QWORD PTR q$[rsp]
	call	??0?$tquat@M$0A@@glm@@QEAA@AEBM000@Z	; glm::tquat<float,0>::tquat<float,0>

; 63   : 
; 64   : 	{
; 65   : 		glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$6[rsp]
	call	??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >
	npad	1

; 66   : 
; 67   : 		os << glm::io::precision(2) << glm::io::width(1 + 2 + 1 + 2)

	lea	r8, QWORD PTR q$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,char,std::char_traits<char> >
	mov	QWORD PTR tv80[rsp], rax
	mov	rax, QWORD PTR tv80[rsp]
	mov	QWORD PTR tv190[rsp], rax
	mov	edx, 6
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0width@io@glm@@QEAA@I@Z		; glm::io::width::width
	mov	QWORD PTR tv141[rsp], rax
	mov	edx, 2
	lea	rcx, QWORD PTR $T15[rsp]
	call	??0precision@io@glm@@QEAA@I@Z		; glm::io::precision::precision
	mov	rdx, rax
	mov	rcx, QWORD PTR os$[rsp]
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUprecision@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rcx, QWORD PTR tv141[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV23@AEBUwidth@01@@Z ; glm::io::operator<<<char,std::char_traits<char> >
	mov	rdx, QWORD PTR tv190[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG82314
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR q$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 68   : 			<< type_name<T,P>(os, q) << ": " << q << '\n';
; 69   : 	}

	lea	rcx, QWORD PTR iofs$6[rsp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >

; 70   : 
; 71   : 	{
; 72   : 		glm::io::basic_format_saver<typename OS::char_type> const iofs(os);

	mov	rax, QWORD PTR os$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR os$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR iofs$8[rsp]
	call	??0?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@AEAV?$basic_ios@DU?$char_traits@D@std@@@std@@@Z ; glm::io::basic_format_saver<char,std::char_traits<char> >::basic_format_saver<char,std::char_traits<char> >
	npad	1

; 73   : 
; 74   : 		os << glm::io::unformatted

	lea	r8, QWORD PTR q$[rsp]
	mov	rdx, QWORD PTR os$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$type_name@M$0A@U?$tquat@M$0A@@glm@@DU?$char_traits@D@std@@@?A0x8a664765@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$basic_ostream@DU?$char_traits@D@std@@@2@AEBU?$tquat@M$0A@@glm@@@Z ; `anonymous namespace'::type_name<float,0,glm::tquat<float,0>,char,std::char_traits<char> >
	mov	QWORD PTR tv155[rsp], rax
	mov	rax, QWORD PTR tv155[rsp]
	mov	QWORD PTR tv193[rsp], rax
	lea	rdx, OFFSET FLAT:??$unformatted@DU?$char_traits@D@std@@@io@glm@@YAAEAV?$basic_ios@DU?$char_traits@D@std@@@std@@AEAV23@@Z ; glm::io::unformatted<char,std::char_traits<char> >
	mov	rcx, QWORD PTR os$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV?$basic_ios@DU?$char_traits@D@std@@@1@AEAV21@@Z@Z
	mov	rdx, QWORD PTR tv193[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:$SG82315
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, QWORD PTR q$[rsp]
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@M$0A@@glm@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBU?$tquat@M$0A@@0@@Z ; glm::operator<<<char,std::char_traits<char>,float,0>
	mov	dl, 10
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 75   : 			<< type_name<T,P>(os, q) << ": " << q << '\n';
; 76   : 	}

	lea	rcx, QWORD PTR iofs$8[rsp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >

; 77   : 
; 78   : 	return 0;

	xor	eax, eax

; 79   : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 416				; 000001a0H
	pop	rdi
	ret	0
??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ENDP ; test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$6[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$8[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$6[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR iofs$8[rbp]
	call	??1?$basic_format_saver@DU?$char_traits@D@std@@@io@glm@@QEAA@XZ ; glm::io::basic_format_saver<char,std::char_traits<char> >::~basic_format_saver<char,std::char_traits<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
q$ = 56
iofs$6 = 104
$T7 = 168
iofs$8 = 216
$T9 = 280
$T10 = 328
$T11 = 332
$T12 = 336
$T13 = 340
$T14 = 344
$T15 = 348
tv68 = 352
tv80 = 360
tv190 = 368
tv141 = 376
tv155 = 384
tv193 = 392
__$ArrayPad$ = 400
os$ = 432
?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA PROC ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z@4HA ENDP ; `test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
_TEXT	SEGMENT
Error$ = 32
main	PROC

; 152  : {

$LN3:
	push	rdi
	sub	rsp, 48					; 00000030H

; 153  : 	int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 154  : 
; 155  : 	Error += test_io_quat<float, glm::highp>(std::cout);

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$test_io_quat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; test_io_quat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 156  : 	Error += test_io_quat<float, glm::highp>(std::wcout);

	mov	rcx, QWORD PTR __imp_?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A
	call	??$test_io_quat@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ; test_io_quat<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 157  : 	Error += test_io_quat<int, glm::mediump>(std::cout);

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$test_io_quat@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; test_io_quat<int,1,std::basic_ostream<char,std::char_traits<char> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 158  : 	Error += test_io_quat<int, glm::mediump>(std::wcout);

	mov	rcx, QWORD PTR __imp_?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A
	call	??$test_io_quat@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ; test_io_quat<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 159  : 	Error += test_io_quat<glm::uint, glm::lowp>(std::cout);

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$test_io_quat@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; test_io_quat<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 160  : 	Error += test_io_quat<glm::uint, glm::lowp>(std::wcout);

	mov	rcx, QWORD PTR __imp_?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A
	call	??$test_io_quat@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ; test_io_quat<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 161  : 
; 162  : 	Error += test_io_vec<float, glm::highp>(std::cout);

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$test_io_vec@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; test_io_vec<float,0,std::basic_ostream<char,std::char_traits<char> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 163  : 	Error += test_io_vec<float, glm::highp>(std::wcout);

	mov	rcx, QWORD PTR __imp_?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A
	call	??$test_io_vec@M$0A@V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ; test_io_vec<float,0,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 164  : 	Error += test_io_vec<int, glm::mediump>(std::cout);

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$test_io_vec@H$00V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; test_io_vec<int,1,std::basic_ostream<char,std::char_traits<char> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 165  : 	Error += test_io_vec<int, glm::mediump>(std::wcout);

	mov	rcx, QWORD PTR __imp_?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A
	call	??$test_io_vec@H$00V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ; test_io_vec<int,1,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 166  : 	Error += test_io_vec<glm::uint, glm::lowp>(std::cout);

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$test_io_vec@I$01V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; test_io_vec<unsigned int,2,std::basic_ostream<char,std::char_traits<char> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 167  : 	Error += test_io_vec<glm::uint, glm::lowp>(std::wcout);

	mov	rcx, QWORD PTR __imp_?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A
	call	??$test_io_vec@I$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@Z ; test_io_vec<unsigned int,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 168  : 
; 169  : 	Error += test_io_mat<float, glm::highp>(std::cout, glm::io::column_major);

	xor	edx, edx
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 170  : 	Error += test_io_mat<float, glm::lowp>(std::wcout, glm::io::column_major);

	xor	edx, edx
	mov	rcx, QWORD PTR __imp_?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A
	call	??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 171  : 	Error += test_io_mat<float, glm::highp>(std::cout, glm::io::row_major);

	mov	edx, 1
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$test_io_mat@M$0A@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@@YAHAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@W4order_type@io@glm@@@Z ; test_io_mat<float,0,std::basic_ostream<char,std::char_traits<char> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 172  :         Error += test_io_mat<float, glm::lowp>(std::wcout, glm::io::row_major);

	mov	edx, 1
	mov	rcx, QWORD PTR __imp_?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A
	call	??$test_io_mat@M$01V?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@@YAHAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@W4order_type@io@glm@@@Z ; test_io_mat<float,2,std::basic_ostream<wchar_t,std::char_traits<wchar_t> > >
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 173  : 
; 174  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 175  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ios
;	COMDAT ?right@std@@YAAEAVios_base@1@AEAV21@@Z
_TEXT	SEGMENT
_Iosbase$ = 48
?right@std@@YAAEAVios_base@1@AEAV21@@Z PROC		; std::right, COMDAT

; 266  : inline ios_base& __CLRCALL_OR_CDECL right(ios_base& _Iosbase) { // set right in adjustfield

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 267  :     _Iosbase.setf(ios_base::right, ios_base::adjustfield);

	mov	r8d, 448				; 000001c0H
	mov	edx, 128				; 00000080H
	mov	rcx, QWORD PTR _Iosbase$[rsp]
	call	QWORD PTR __imp_?setf@ios_base@std@@QEAAHHH@Z

; 268  :     return _Iosbase;

	mov	rax, QWORD PTR _Iosbase$[rsp]

; 269  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?right@std@@YAAEAVios_base@1@AEAV21@@Z ENDP		; std::right
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ios
;	COMDAT ?fixed@std@@YAAEAVios_base@1@AEAV21@@Z
_TEXT	SEGMENT
_Iosbase$ = 48
?fixed@std@@YAAEAVios_base@1@AEAV21@@Z PROC		; std::fixed, COMDAT

; 201  : inline ios_base& __CLRCALL_OR_CDECL fixed(ios_base& _Iosbase) { // set floatfield to fixed

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 202  :     _Iosbase.setf(ios_base::fixed, ios_base::floatfield);

	mov	r8d, 12288				; 00003000H
	mov	edx, 8192				; 00002000H
	mov	rcx, QWORD PTR _Iosbase$[rsp]
	call	QWORD PTR __imp_?setf@ios_base@std@@QEAAHHH@Z

; 203  :     return _Iosbase;

	mov	rax, QWORD PTR _Iosbase$[rsp]

; 204  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ENDP		; std::fixed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??0order@io@glm@@QEAA@W4order_type@12@@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
??0order@io@glm@@QEAA@W4order_type@12@@Z PROC		; glm::io::order::order, COMDAT

; 94   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 93   : 		: value(a)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	mov	DWORD PTR [rax], ecx

; 94   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0order@io@glm@@QEAA@W4order_type@12@@Z ENDP		; glm::io::order::order
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??0width@io@glm@@QEAA@I@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
??0width@io@glm@@QEAA@I@Z PROC				; glm::io::width::width, COMDAT

; 81   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 80   : 		: value(a)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	mov	DWORD PTR [rax], ecx

; 81   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0width@io@glm@@QEAA@I@Z ENDP				; glm::io::width::width
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\gtx\io.inl
;	COMDAT ??0precision@io@glm@@QEAA@I@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
??0precision@io@glm@@QEAA@I@Z PROC			; glm::io::precision::precision, COMDAT

; 77   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 76   : 		: value(a)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	mov	DWORD PTR [rax], ecx

; 77   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0precision@io@glm@@QEAA@I@Z ENDP			; glm::io::precision::precision
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = 32
tv85 = 88
tv93 = 96
__$ArrayPad$ = 104
this$ = 144
__formal$ = 152
_Lobj$ = 160
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT

; 173  :     void __CLR_OR_THIS_CALL _Getvals(_Elem2, const _Locinfo& _Lobj) { // get values

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 174  :         _Cvt = _Lobj._Getcvt();

	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR _Lobj$[rsp]
	call	QWORD PTR __imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+44]
	mov	rsi, rax
	mov	ecx, 44					; 0000002cH
	rep movsb

; 175  : 
; 176  :         if (is_same_v<_Elem2, wchar_t>) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN2@Getvals

; 177  :             _Days = reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getdays())));

	mov	rcx, QWORD PTR _Lobj$[rsp]
	call	QWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ
	mov	rcx, rax
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 178  :             _Months =

	mov	rcx, QWORD PTR _Lobj$[rsp]
	call	QWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ
	mov	rcx, rax
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+24], rax

; 179  :                 reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getmonths())));
; 180  :             _Ampm = reinterpret_cast<const _Elem*>(_Maklocwcs(L":AM:am:PM:pm"));

	lea	rcx, OFFSET FLAT:??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+32], rax

; 181  :         } else {

	jmp	$LN3@Getvals
$LN2@Getvals:

; 182  :             _Days   = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem*>(nullptr), _Cvt);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 44					; 0000002cH
	mov	QWORD PTR tv85[rsp], rax
	mov	rcx, QWORD PTR _Lobj$[rsp]
	call	QWORD PTR __imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ
	mov	rcx, QWORD PTR tv85[rsp]
	mov	r8, rcx
	xor	edx, edx
	mov	rcx, rax
	call	??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 183  :             _Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem*>(nullptr), _Cvt);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 44					; 0000002cH
	mov	QWORD PTR tv93[rsp], rax
	mov	rcx, QWORD PTR _Lobj$[rsp]
	call	QWORD PTR __imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ
	mov	rcx, QWORD PTR tv93[rsp]
	mov	r8, rcx
	xor	edx, edx
	mov	rcx, rax
	call	??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+24], rax

; 184  :             _Ampm   = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem*>(nullptr), _Cvt);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 44					; 0000002cH
	mov	r8, rax
	xor	edx, edx
	lea	rcx, OFFSET FLAT:??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
	call	??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+32], rax
$LN3@Getvals:

; 185  :         }
; 186  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = 32
tv85 = 88
tv93 = 96
__$ArrayPad$ = 104
this$ = 144
__formal$ = 152
_Lobj$ = 160
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT

; 173  :     void __CLR_OR_THIS_CALL _Getvals(_Elem2, const _Locinfo& _Lobj) { // get values

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 174  :         _Cvt = _Lobj._Getcvt();

	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR _Lobj$[rsp]
	call	QWORD PTR __imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rcx+44]
	mov	rsi, rax
	mov	ecx, 44					; 0000002cH
	rep movsb

; 175  : 
; 176  :         if (is_same_v<_Elem2, wchar_t>) {

	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN2@Getvals

; 177  :             _Days = reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getdays())));

	mov	rcx, QWORD PTR _Lobj$[rsp]
	call	QWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ
	mov	rcx, rax
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 178  :             _Months =

	mov	rcx, QWORD PTR _Lobj$[rsp]
	call	QWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ
	mov	rcx, rax
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+24], rax

; 179  :                 reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getmonths())));
; 180  :             _Ampm = reinterpret_cast<const _Elem*>(_Maklocwcs(L":AM:am:PM:pm"));

	lea	rcx, OFFSET FLAT:??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+32], rax

; 181  :         } else {

	jmp	$LN3@Getvals
$LN2@Getvals:

; 182  :             _Days   = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem*>(nullptr), _Cvt);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 44					; 0000002cH
	mov	QWORD PTR tv85[rsp], rax
	mov	rcx, QWORD PTR _Lobj$[rsp]
	call	QWORD PTR __imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ
	mov	rcx, QWORD PTR tv85[rsp]
	mov	r8, rcx
	xor	edx, edx
	mov	rcx, rax
	call	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 183  :             _Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem*>(nullptr), _Cvt);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 44					; 0000002cH
	mov	QWORD PTR tv93[rsp], rax
	mov	rcx, QWORD PTR _Lobj$[rsp]
	call	QWORD PTR __imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ
	mov	rcx, QWORD PTR tv93[rsp]
	mov	r8, rcx
	xor	edx, edx
	mov	rcx, rax
	call	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+24], rax

; 184  :             _Ampm   = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem*>(nullptr), _Cvt);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 44					; 0000002cH
	mov	r8, rax
	xor	edx, edx
	lea	rcx, OFFSET FLAT:??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
	call	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+32], rax
$LN3@Getvals:

; 185  :         }
; 186  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPEA_WPEB_W@Z
_TEXT	SEGMENT
_Count$ = 48
_Ptrdest$ = 56
_Ptr$ = 80
?_Maklocwcs@std@@YAPEA_WPEB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 90   : inline wchar_t* _Maklocwcs(const wchar_t* _Ptr) { // copy NTWCS to allocated storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 91   :     const size_t _Count = _CSTD wcslen(_Ptr) + 1;

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	QWORD PTR __imp_wcslen
	inc	rax
	mov	QWORD PTR _Count$[rsp], rax

; 92   : 
; 93   :     wchar_t* _Ptrdest = static_cast<wchar_t*>(_calloc_dbg(_Count, sizeof(wchar_t), _CRT_BLOCK, __FILE__, __LINE__));

	mov	DWORD PTR [rsp+32], 93			; 0000005dH
	lea	r9, OFFSET FLAT:??_C@_0GI@IIACENIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	r8d, 2
	mov	edx, 2
	mov	rcx, QWORD PTR _Count$[rsp]
	call	QWORD PTR __imp__calloc_dbg
	mov	QWORD PTR _Ptrdest$[rsp], rax

; 94   : 
; 95   :     if (!_Ptrdest) {

	cmp	QWORD PTR _Ptrdest$[rsp], 0
	jne	SHORT $LN2@Maklocwcs

; 96   :         _Xbad_alloc();

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN2@Maklocwcs:

; 97   :     }
; 98   : 
; 99   :     _CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptrdest$[rsp]
	call	wmemcpy

; 100  :     return _Ptrdest;

	mov	rax, QWORD PTR _Ptrdest$[rsp]
$LN3@Maklocwcs:

; 101  : }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Maklocwcs@std@@YAPEA_WPEB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Count$ = 48
_Count1$ = 56
_Wchars$ = 64
_Ptr1$ = 72
_Bytes$ = 80
_Wc$ = 100
_Mbst1$ = 136
_Ptrdest$ = 152
_Ptrnext$ = 160
_Mbst2$ = 184
_Ptr$ = 224
__formal$ = 232
_Cvt$ = 240
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z PROC ; std::_Maklocstr<wchar_t>, COMDAT

; 540  : inline wchar_t* __CRTDECL _Maklocstr(const char* _Ptr, wchar_t*, const _Locinfo::_Cvtvec& _Cvt) {

$LN12:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 208				; 000000d0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 40					; 00000028H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+224]

; 541  :     // convert C string to wchar_t sequence using _Cvtvec
; 542  :     size_t _Count;
; 543  :     size_t _Count1;
; 544  :     size_t _Wchars;
; 545  :     const char* _Ptr1;
; 546  :     int _Bytes;
; 547  :     wchar_t _Wc;
; 548  :     mbstate_t _Mbst1 = {};

	lea	rax, QWORD PTR _Mbst1$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 8
	rep stosb

; 549  : 
; 550  :     _Count1 = _CSTD strlen(_Ptr) + 1;

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	strlen
	inc	rax
	mov	QWORD PTR _Count1$[rsp], rax

; 551  :     for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count; _Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars) {

	mov	rax, QWORD PTR _Count1$[rsp]
	mov	QWORD PTR _Count$[rsp], rax
	mov	QWORD PTR _Wchars$[rsp], 0
	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	QWORD PTR _Ptr1$[rsp], rax
	jmp	SHORT $LN4@Maklocstr
$LN2@Maklocstr:
	movsxd	rax, DWORD PTR _Bytes$[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax
	movsxd	rax, DWORD PTR _Bytes$[rsp]
	mov	rcx, QWORD PTR _Ptr1$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Ptr1$[rsp], rax
	mov	rax, QWORD PTR _Wchars$[rsp]
	inc	rax
	mov	QWORD PTR _Wchars$[rsp], rax
$LN4@Maklocstr:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Maklocstr

; 552  :         if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0) {

	mov	rax, QWORD PTR _Cvt$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR _Mbst1$[rsp]
	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr1$[rsp]
	lea	rcx, QWORD PTR _Wc$[rsp]
	call	_Mbrtowc
	mov	DWORD PTR _Bytes$[rsp], eax
	cmp	DWORD PTR _Bytes$[rsp], 0
	jg	SHORT $LN8@Maklocstr

; 553  :             break;

	jmp	SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 554  :         }
; 555  :     }

	jmp	SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 556  : 
; 557  :     ++_Wchars; // count terminating nul

	mov	rax, QWORD PTR _Wchars$[rsp]
	inc	rax
	mov	QWORD PTR _Wchars$[rsp], rax

; 558  : 
; 559  :     wchar_t* _Ptrdest = static_cast<wchar_t*>(_calloc_dbg(_Wchars, sizeof(wchar_t), _CRT_BLOCK, __FILE__, __LINE__));

	mov	DWORD PTR [rsp+32], 559			; 0000022fH
	lea	r9, OFFSET FLAT:??_C@_0GI@LEPEPCM@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	r8d, 2
	mov	edx, 2
	mov	rcx, QWORD PTR _Wchars$[rsp]
	call	QWORD PTR __imp__calloc_dbg
	mov	QWORD PTR _Ptrdest$[rsp], rax

; 560  : 
; 561  :     if (!_Ptrdest) {

	cmp	QWORD PTR _Ptrdest$[rsp], 0
	jne	SHORT $LN9@Maklocstr

; 562  :         _Xbad_alloc();

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN9@Maklocstr:

; 563  :     }
; 564  : 
; 565  :     wchar_t* _Ptrnext = _Ptrdest;

	mov	rax, QWORD PTR _Ptrdest$[rsp]
	mov	QWORD PTR _Ptrnext$[rsp], rax

; 566  :     mbstate_t _Mbst2  = {};

	lea	rax, QWORD PTR _Mbst2$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 8
	rep stosb

; 567  : 
; 568  :     for (; 0 < _Wchars; _Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext) {

	jmp	SHORT $LN7@Maklocstr
$LN5@Maklocstr:
	movsxd	rax, DWORD PTR _Bytes$[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax
	movsxd	rax, DWORD PTR _Bytes$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Ptr$[rsp], rax
	mov	rax, QWORD PTR _Wchars$[rsp]
	dec	rax
	mov	QWORD PTR _Wchars$[rsp], rax
	mov	rax, QWORD PTR _Ptrnext$[rsp]
	add	rax, 2
	mov	QWORD PTR _Ptrnext$[rsp], rax
$LN7@Maklocstr:
	cmp	QWORD PTR _Wchars$[rsp], 0
	jbe	SHORT $LN6@Maklocstr

; 569  :         if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0) {

	mov	rax, QWORD PTR _Cvt$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR _Mbst2$[rsp]
	mov	r8, QWORD PTR _Count1$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptrnext$[rsp]
	call	_Mbrtowc
	mov	DWORD PTR _Bytes$[rsp], eax
	cmp	DWORD PTR _Bytes$[rsp], 0
	jg	SHORT $LN10@Maklocstr

; 570  :             break;

	jmp	SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 571  :         }
; 572  :     }

	jmp	$LN5@Maklocstr
$LN6@Maklocstr:

; 573  : 
; 574  :     *_Ptrnext = L'\0';

	xor	eax, eax
	mov	rcx, QWORD PTR _Ptrnext$[rsp]
	mov	WORD PTR [rcx], ax

; 575  : 
; 576  :     return _Ptrdest;

	mov	rax, QWORD PTR _Ptrdest$[rsp]
$LN11@Maklocstr:

; 577  : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 208				; 000000d0H
	pop	rdi
	ret	0
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ENDP ; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xlocale
;	COMDAT ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
_TEXT	SEGMENT
_Facptr$ = 32
_Ptr0$ = 40
tv71 = 48
this$ = 80
_Id$ = 88
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z PROC	; std::locale::_Getfacet, COMDAT

; 373  :     const facet* _Getfacet(size_t _Id) const { // look up a facet in locale object

$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 374  :         const facet* _Facptr = _Id < _Ptr->_Facetcount ? _Ptr->_Facetvec[_Id] : nullptr; // null if id off end

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rax+24]
	cmp	QWORD PTR _Id$[rsp], rax
	jae	SHORT $LN6@Getfacet
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR _Id$[rsp]
	mov	rax, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR tv71[rsp], rax
	jmp	SHORT $LN7@Getfacet
$LN6@Getfacet:
	mov	QWORD PTR tv71[rsp], 0
$LN7@Getfacet:
	mov	rax, QWORD PTR tv71[rsp]
	mov	QWORD PTR _Facptr$[rsp], rax

; 375  :         if (_Facptr || !_Ptr->_Xparent) {

	cmp	QWORD PTR _Facptr$[rsp], 0
	jne	SHORT $LN3@Getfacet
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	movzx	eax, BYTE PTR [rax+36]
	test	eax, eax
	jne	SHORT $LN2@Getfacet
$LN3@Getfacet:

; 376  :             return _Facptr; // found facet or not transparent

	mov	rax, QWORD PTR _Facptr$[rsp]
	jmp	SHORT $LN1@Getfacet
$LN2@Getfacet:

; 377  :         }
; 378  : 
; 379  :         // look in current locale
; 380  :         locale::_Locimp* _Ptr0 = _Getgloballocale();

	call	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	mov	QWORD PTR _Ptr0$[rsp], rax

; 381  :         if (_Id < _Ptr0->_Facetcount) {

	mov	rax, QWORD PTR _Ptr0$[rsp]
	mov	rax, QWORD PTR [rax+24]
	cmp	QWORD PTR _Id$[rsp], rax
	jae	SHORT $LN4@Getfacet

; 382  :             return _Ptr0->_Facetvec[_Id]; // get from current locale

	mov	rax, QWORD PTR _Ptr0$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR _Id$[rsp]
	mov	rax, QWORD PTR [rax+rcx*8]
	jmp	SHORT $LN1@Getfacet
$LN4@Getfacet:

; 383  :         }
; 384  : 
; 385  :         return nullptr; // no entry in current locale

	xor	eax, eax
$LN1@Getfacet:

; 386  :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ENDP	; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xlocale
;	COMDAT ??1locale@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
tv84 = 40
this$ = 64
??1locale@std@@QEAA@XZ PROC				; std::locale::~locale, COMDAT

; 350  :     ~locale() noexcept {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 351  :         if (_Ptr) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@locale

; 352  :             delete _Ptr->_Decref();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN4@locale
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv84[rsp], rax
	jmp	SHORT $LN2@locale
$LN4@locale:
	mov	QWORD PTR tv84[rsp], 0
$LN2@locale:

; 353  :         }
; 354  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1locale@std@@QEAA@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\typeinfo
;	COMDAT ?_Throw_bad_cast@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_cast@std@@YAXXZ PROC			; std::_Throw_bad_cast, COMDAT

; 64   : [[noreturn]] inline void _Throw_bad_cast() {

$LN3:
	push	rdi
	sub	rsp, 64					; 00000040H

; 65   :     _THROW(bad_cast{});

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0bad_cast@std@@QEAA@XZ		; std::bad_cast::bad_cast
	lea	rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
$LN2@Throw_bad_:

; 66   : }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Throw_bad_cast@std@@YAXXZ ENDP			; std::_Throw_bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_cast@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_cast@std@@UEAAPEAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_cast@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_cast@std@@UEAAPEAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_cast@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_cast@std@@QEAA@AEBV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_cast@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_cast@std@@QEAA@AEBV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_cast@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_cast@std@@UEAA@XZ PROC				; std::bad_cast::~bad_cast, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1bad_cast@std@@UEAA@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_typeinfo.h
;	COMDAT ??0bad_cast@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_cast@std@@QEAA@XZ PROC				; std::bad_cast::bad_cast, COMDAT

; 137  :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 136  :         : exception("bad cast", 1)

	mov	r8d, 1
	lea	rdx, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast@
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@QEBDH@Z		; std::exception::exception

; 137  :     {

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_cast@std@@6B@
	mov	QWORD PTR [rax], rcx

; 138  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_cast@std@@QEAA@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_typeinfo.h
;	COMDAT ?name@type_info@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?name@type_info@@QEBAPEBDXZ PROC			; type_info::name, COMDAT

; 99   :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 100  :         #ifdef _M_CEE_PURE
; 101  :         return __std_type_info_name(&_Data, static_cast<__type_info_node*>(__type_info_root_node.ToPointer()));
; 102  :         #else
; 103  :         return __std_type_info_name(&_Data, &__type_info_root_node);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	lea	rdx, OFFSET FLAT:?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	rcx, rax
	call	__std_type_info_name

; 104  :         #endif
; 105  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?name@type_info@@QEBAPEBDXZ ENDP			; type_info::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_typeinfo.h
;	COMDAT ??8type_info@@QEBA_NAEBV0@@Z
_TEXT	SEGMENT
tv70 = 32
this$ = 64
_Other$ = 72
??8type_info@@QEBA_NAEBV0@@Z PROC			; type_info::operator==, COMDAT

; 82   :     {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 83   :         return __std_type_info_compare(&_Data, &_Other._Data) == 0;

	mov	rax, QWORD PTR _Other$[rsp]
	add	rax, 8
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	__std_type_info_compare
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv70[rsp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[rsp], 0
$LN4@operator:
	movzx	eax, BYTE PTR tv70[rsp]

; 84   :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??8type_info@@QEBA_NAEBV0@@Z ENDP			; type_info::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal, COMDAT

; 4654 :     _CONSTEXPR20_CONTAINER const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4655 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 4656 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal, COMDAT

; 4650 :     _CONSTEXPR20_CONTAINER _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4651 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 4652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Swap_proxy_and_iterators, COMDAT

; 4646 :     _CONSTEXPR20_CONTAINER void _Swap_proxy_and_iterators(basic_string& _Right) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4647 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4648 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 32
_Al$2 = 40
$T3 = 48
this$ = 80
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate, COMDAT

; 4616 :     _CONSTEXPR20_CONTAINER void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 4617 :         _Mypair._Myval2._Orphan_all();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Tidy_deall

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR _Ptr$1[rsp], rax

; 4620 :             auto& _Al          = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	mov	QWORD PTR _Al$2[rsp], rax

; 4621 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z ; std::_Destroy_in_place<wchar_t *>

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+32]
	inc	rax
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$1[rsp]
	mov	rcx, QWORD PTR _Al$2[rsp]
	call	?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ; std::allocator<wchar_t>::deallocate
$LN2@Tidy_deall:

; 4623 :         }
; 4624 : 
; 4625 : #ifdef __cpp_lib_constexpr_string
; 4626 :         if (_STD is_constant_evaluated()) {
; 4627 :             _Mypair._Myval2._Bx._Ptr = nullptr;
; 4628 :             _Mypair._Myval2._Mysize  = 0;
; 4629 :             _Mypair._Myval2._Myres   = 0;
; 4630 :         } else
; 4631 : #endif // __cpp_lib_constexpr_string
; 4632 :         {
; 4633 :             _Mypair._Myval2._Mysize = 0;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 7

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

	xor	eax, eax
	mov	WORD PTR $T3[rsp], ax
	mov	eax, 2
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+8]
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, rax
	call	?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign
	npad	1

; 4637 :         }
; 4638 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init, COMDAT

; 4594 :     _CONSTEXPR20_CONTAINER void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 4595 :         auto& _My_data   = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 4596 :         _My_data._Mysize = 0;

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	QWORD PTR [rax+24], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	QWORD PTR [rax+32], 7

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	xor	eax, eax
	mov	WORD PTR $T1[rsp], ax
	mov	eax, 2
	imul	rax, rax, 0
	mov	rcx, QWORD PTR _My_data$[rsp]
	lea	rax, QWORD PTR [rcx+rax+8]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rax
	call	?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 4613 :         }
; 4614 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Requested$ = 56
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth, COMDAT

; 4500 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4501 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	mov	r8, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+32]
	mov	rcx, QWORD PTR _Requested$[rsp]
	call	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth

; 4502 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 40
$T4 = 56
_Requested$ = 80
_Old$ = 88
_Max$ = 96
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth, COMDAT

; 4487 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 4488 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rax, QWORD PTR _Requested$[rsp]
	or	rax, 7
	mov	QWORD PTR _Masked$[rsp], rax

; 4489 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	mov	rax, QWORD PTR _Max$[rsp]
	cmp	QWORD PTR _Masked$[rsp], rax
	jbe	SHORT $LN2@Calculate_

; 4490 :             return _Max;

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4491 :         }
; 4492 : 
; 4493 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

	xor	edx, edx
	mov	rax, QWORD PTR _Old$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Old$[rsp], rax
	jbe	SHORT $LN3@Calculate_

; 4494 :             return _Max;

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4495 :         }
; 4496 : 
; 4497 :         return (_STD max)(_Masked, _Old + _Old / 2);

	xor	edx, edx
	mov	rax, QWORD PTR _Old$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Old$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR $T4[rsp], rax
	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR _Masked$[rsp]
	call	??$max@_K@std@@YAAEB_KAEB_K0@Z		; std::max<unsigned __int64>
	mov	rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4498 :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 40
_Storage_max$ = 56
$T4 = 64
$T5 = 72
$T6 = 80
this$ = 112
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT

; 3943 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 3944 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
	mov	QWORD PTR _Alloc_max$[rsp], rax

; 3945 :         const size_type _Storage_max = // can always store small string

	mov	QWORD PTR $T4[rsp], 8
	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR _Alloc_max$[rsp]
	call	??$max@_K@std@@YAAEB_KAEB_K0@Z		; std::max<unsigned __int64>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Storage_max$[rsp], rax

; 3946 :             (_STD max)(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3947 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

	mov	rax, QWORD PTR _Storage_max$[rsp]
	dec	rax
	mov	QWORD PTR $T5[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T6[rsp], rax
	lea	rdx, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR $T6[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 3948 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3949 :         );
; 3950 :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size, COMDAT

; 3939 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3940 :         return _Mypair._Myval2._Mysize;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+24]

; 3941 :     }

	pop	rdi
	ret	0
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
this$ = 48
?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::data, COMDAT

; 3925 :     _NODISCARD _CONSTEXPR20_CONTAINER _Ret_z_ const _Elem* data() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 3926 :         return _Mypair._Myval2._Myptr();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr

; 3927 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 32
$T2 = 40
$T3 = 42
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 3244 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 3245 :         // assign [_Ptr, _Ptr + _Count)
; 3246 :         if (_Count <= _Mypair._Myval2._Myres) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+32]
	cmp	QWORD PTR _Count$[rsp], rax
	ja	SHORT $LN2@assign

; 3247 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	QWORD PTR _Old_ptr$1[rsp], rax

; 3248 :             _Mypair._Myval2._Mysize = _Count;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	mov	QWORD PTR [rax+24], rcx

; 3249 :             _Traits::move(_Old_ptr, _Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Old_ptr$1[rsp]
	call	?move@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_Char_traits<wchar_t,unsigned short>::move

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

	xor	eax, eax
	mov	WORD PTR $T2[rsp], ax
	mov	rax, QWORD PTR _Old_ptr$1[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rax
	call	?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 3251 :             return *this;

	mov	rax, QWORD PTR this$[rsp]
	jmp	SHORT $LN1@assign
$LN2@assign:

; 3252 :         }
; 3253 : 
; 3254 :         return _Reallocate_for(

	lea	rax, QWORD PTR $T3[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	mov	r9, QWORD PTR _Ptr$[rsp]
	movzx	r8d, BYTE PTR $T3[rsp]
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>
$LN1@assign:

; 3255 :             _Count,
; 3256 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 3257 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 3259 :             },
; 3260 :             _Ptr);
; 3261 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S5$ = 52
_To_delete$ = 72
this$ = 96
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 3002 :     _CONSTEXPR20_CONTAINER ~basic_string() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 3003 :         _Tidy_deallocate();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 3004 : #if _ITERATOR_DEBUG_LEVEL != 0
; 3005 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S5$[rsp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
	lea	rax, QWORD PTR $S5$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 3006 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _To_delete$[rsp], rax

; 3007 :         _Mypair._Myval2._Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 3008 :         _Delete_plain_internal(_Alproxy, _To_delete);

	mov	rdx, QWORD PTR _To_delete$[rsp]
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 3009 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 3010 :     }

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Right_data$ = 40
tv136 = 48
this$ = 80
_Right$ = 88
?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents, COMDAT

; 2872 :     _CONSTEXPR20_CONTAINER void _Take_contents(basic_string& _Right) noexcept {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 2873 :         // assign by stealing _Right's buffer
; 2874 :         // pre: this != &_Right
; 2875 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2876 :         // pre: *this owns no memory, iterators orphaned
; 2877 :         // (note: _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2878 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 2879 :         auto& _Right_data = _Right._Mypair._Myval2;

	mov	rax, QWORD PTR _Right$[rsp]
	mov	QWORD PTR _Right_data$[rsp], rax

; 2880 : 
; 2881 :         if constexpr (_Can_memcpy_val) {
; 2882 : #ifdef __cpp_lib_constexpr_string
; 2883 :             if (!_STD is_constant_evaluated())
; 2884 : #endif // __cpp_lib_constexpr_string
; 2885 :             {
; 2886 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2887 :                 if (_Right_data._Large_string_engaged()) {

	mov	rcx, QWORD PTR _Right_data$[rsp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Take_conte

; 2888 :                     // take ownership of _Right's iterators along with its buffer
; 2889 :                     _Swap_proxy_and_iterators(_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Swap_proxy_and_iterators

; 2890 :                 } else {

	jmp	SHORT $LN3@Take_conte
$LN2@Take_conte:

; 2891 :                     _Right_data._Orphan_all();

	mov	rcx, QWORD PTR _Right_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
$LN3@Take_conte:

; 2892 :                 }
; 2893 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2894 : 
; 2895 :                 _Memcpy_val_from(_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Memcpy_val_from

; 2896 :                 _Right._Tidy_init();

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init

; 2897 :                 return;

	jmp	$LN1@Take_conte

; 2898 :             }
; 2899 :         }
; 2900 : 
; 2901 :         if (_Right_data._Large_string_engaged()) { // steal buffer

	mov	rcx, QWORD PTR _Right_data$[rsp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@Take_conte

; 2902 :             _Construct_in_place(_My_data._Bx._Ptr, _Right_data._Bx._Ptr);

	mov	rax, QWORD PTR _Right_data$[rsp]
	add	rax, 8
	mov	rcx, QWORD PTR _My_data$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	??$_Construct_in_place@PEA_WAEAPEA_W@std@@YAXAEAPEA_W0@Z ; std::_Construct_in_place<wchar_t *,wchar_t * &>

; 2903 :             _Right_data._Bx._Ptr = nullptr;

	mov	rax, QWORD PTR _Right_data$[rsp]
	mov	QWORD PTR [rax+8], 0

; 2904 :             _Swap_proxy_and_iterators(_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Swap_proxy_and_iterators

; 2905 :         } else { // copy small string buffer

	jmp	SHORT $LN5@Take_conte
$LN4@Take_conte:

; 2906 :             _Traits::copy(_My_data._Bx._Buf, _Right_data._Bx._Buf, _Right_data._Mysize + 1);

	mov	rax, QWORD PTR _Right_data$[rsp]
	mov	rax, QWORD PTR [rax+24]
	inc	rax
	mov	rcx, QWORD PTR _Right_data$[rsp]
	add	rcx, 8
	mov	rdx, QWORD PTR _My_data$[rsp]
	add	rdx, 8
	mov	QWORD PTR tv136[rsp], rdx
	mov	r8, rax
	mov	rdx, rcx
	mov	rax, QWORD PTR tv136[rsp]
	mov	rcx, rax
	call	?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_Char_traits<wchar_t,unsigned short>::copy

; 2907 :             _Right_data._Orphan_all();

	mov	rcx, QWORD PTR _Right_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
$LN5@Take_conte:

; 2908 :         }
; 2909 : 
; 2910 :         _My_data._Mysize = _Right_data._Mysize;

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _Right_data$[rsp]
	mov	rcx, QWORD PTR [rcx+24]
	mov	QWORD PTR [rax+24], rcx

; 2911 :         _My_data._Myres  = _Right_data._Myres;

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _Right_data$[rsp]
	mov	rcx, QWORD PTR [rcx+32]
	mov	QWORD PTR [rax+32], rcx

; 2912 :         _Right._Tidy_init();

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
	npad	1
$LN1@Take_conte:

; 2913 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_My_data_mem$ = 32
_Right_data_mem$ = 40
this$ = 64
_Right$ = 72
?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Memcpy_val_from, COMDAT

; 2863 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 2864 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2865 :         const auto _My_data_mem =

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >
	add	rax, 8
	mov	QWORD PTR _My_data_mem$[rsp], rax

; 2866 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2867 :         const auto _Right_data_mem =

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rcx, rax
	call	??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > const >
	add	rax, 8
	mov	QWORD PTR _Right_data_mem$[rsp], rax

; 2868 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	mov	r8d, 32					; 00000020H
	mov	rdx, QWORD PTR _Right_data_mem$[rsp]
	mov	rcx, QWORD PTR _My_data_mem$[rsp]
	call	memcpy

; 2870 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
_Right$ = 72
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2605 :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal())) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	mov	rcx, rax
	call	??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ; std::move<std::allocator<wchar_t> &>
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8, rax
	movzx	edx, BYTE PTR $T1[rsp]
	call	??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >

; 2606 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2607 :         _Take_contents(_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents

; 2608 :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
_Al$ = 72
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$allocator@_W@1@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2473 :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>

; 2474 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2475 :         _Tidy_init();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init

; 2476 :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$allocator@_W@1@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT

; 2348 :         _CONSTEXPR20_CONTAINER ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty, COMDAT

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged, COMDAT

; 2313 :     _CONSTEXPR20_CONTAINER bool _Large_string_engaged() const noexcept {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 2314 : #ifdef __cpp_lib_constexpr_string
; 2315 :         if (_STD is_constant_evaluated()) {
; 2316 :             return true;
; 2317 :         }
; 2318 : #endif // __cpp_lib_constexpr_string
; 2319 :         return _BUF_SIZE <= _Myres;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 8
	jb	SHORT $LN3@Large_stri
	mov	DWORD PTR tv66[rsp], 1
	jmp	SHORT $LN4@Large_stri
$LN3@Large_stri:
	mov	DWORD PTR tv66[rsp], 0
$LN4@Large_stri:
	movzx	eax, BYTE PTR tv66[rsp]

; 2320 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 2304 :     _CONSTEXPR20_CONTAINER const value_type* _Myptr() const noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 2305 :         const value_type* _Result = _Bx._Buf;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	QWORD PTR _Result$[rsp], rax

; 2306 :         if (_Large_string_engaged()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z	; std::_Unfancy<wchar_t>
	mov	QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2308 :         }
; 2309 : 
; 2310 :         return _Result;

	mov	rax, QWORD PTR _Result$[rsp]

; 2311 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 2295 :     _CONSTEXPR20_CONTAINER value_type* _Myptr() noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 2296 :         value_type* _Result = _Bx._Buf;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	QWORD PTR _Result$[rsp], rax

; 2297 :         if (_Large_string_engaged()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z	; std::_Unfancy<wchar_t>
	mov	QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2299 :         }
; 2300 : 
; 2301 :         return _Result;

	mov	rax, QWORD PTR _Result$[rsp]

; 2302 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT

; 2284 :     _CONSTEXPR20_CONTAINER _String_val() noexcept : _Bx() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty

; 2285 : 
; 2286 :     // length of internal buffer, [1, 16]:
; 2287 :     static constexpr size_type _BUF_SIZE = 16 / sizeof(value_type) < 1 ? 1 : 16 / sizeof(value_type);
; 2288 :     // roundup mask for allocated buffers, [0, 15]:
; 2289 :     static constexpr size_type _ALLOC_MASK = sizeof(value_type) <= 1 ? 15
; 2290 :                                            : sizeof(value_type) <= 2 ? 7
; 2291 :                                            : sizeof(value_type) <= 4 ? 3
; 2292 :                                            : sizeof(value_type) <= 8 ? 1
; 2293 :                                                                      : 0;
; 2294 : 
; 2295 :     _CONSTEXPR20_CONTAINER value_type* _Myptr() noexcept {
; 2296 :         value_type* _Result = _Bx._Buf;
; 2297 :         if (_Large_string_engaged()) {
; 2298 :             _Result = _Unfancy(_Bx._Ptr);
; 2299 :         }
; 2300 : 
; 2301 :         return _Result;
; 2302 :     }
; 2303 : 
; 2304 :     _CONSTEXPR20_CONTAINER const value_type* _Myptr() const noexcept {
; 2305 :         const value_type* _Result = _Bx._Buf;
; 2306 :         if (_Large_string_engaged()) {
; 2307 :             _Result = _Unfancy(_Bx._Ptr);
; 2308 :         }
; 2309 : 
; 2310 :         return _Result;
; 2311 :     }
; 2312 : 
; 2313 :     _CONSTEXPR20_CONTAINER bool _Large_string_engaged() const noexcept {
; 2314 : #ifdef __cpp_lib_constexpr_string
; 2315 :         if (_STD is_constant_evaluated()) {
; 2316 :             return true;
; 2317 :         }
; 2318 : #endif // __cpp_lib_constexpr_string
; 2319 :         return _BUF_SIZE <= _Myres;
; 2320 :     }
; 2321 : 
; 2322 :     _CONSTEXPR20_CONTAINER void _Check_offset(const size_type _Off) const {
; 2323 :         // checks whether _Off is in the bounds of [0, size()]
; 2324 :         if (_Mysize < _Off) {
; 2325 :             _Xran();
; 2326 :         }
; 2327 :     }
; 2328 : 
; 2329 :     _CONSTEXPR20_CONTAINER void _Check_offset_exclusive(const size_type _Off) const {
; 2330 :         // checks whether _Off is in the bounds of [0, size())
; 2331 :         if (_Mysize <= _Off) {
; 2332 :             _Xran();
; 2333 :         }
; 2334 :     }
; 2335 : 
; 2336 :     [[noreturn]] static void _Xran() {
; 2337 :         _Xout_of_range("invalid string position");
; 2338 :     }
; 2339 : 
; 2340 :     _CONSTEXPR20_CONTAINER size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {
; 2341 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2342 :         return (_STD min)(_Size, _Mysize - _Off);
; 2343 :     }
; 2344 : 
; 2345 :     union _Bxty { // storage for small buffer or pointer to larger one
; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers
; 2347 : 
; 2348 :         _CONSTEXPR20_CONTAINER ~_Bxty() noexcept {} // user-provided, for fancy pointers
; 2349 : 
; 2350 :         value_type _Buf[_BUF_SIZE];
; 2351 :         pointer _Ptr;
; 2352 :         char _Alias[_BUF_SIZE]; // TRANSITION, ABI: _Alias is preserved for binary compatibility (especially /clr)
; 2353 :     } _Bx;
; 2354 : 
; 2355 :     size_type _Mysize = 0; // current length of string

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 0

; 2284 :     _CONSTEXPR20_CONTAINER _String_val() noexcept : _Bx() {}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT

; 727  :     _NODISCARD static _CONSTEXPR20_DYNALLOC size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 728  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 729  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z PROC	; std::allocator<wchar_t>::allocate, COMDAT

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$01@std@@YA_K_K@Z	; std::_Get_size_of_n<2>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 840  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ENDP	; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	shl	rax, 1
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 836  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0?$allocator@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@_W@std@@QEAA@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT

; 825  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@_W@std@@QEAA@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4654 :     _CONSTEXPR20_CONTAINER const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4655 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4656 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4650 :     _CONSTEXPR20_CONTAINER _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4651 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT

; 4646 :     _CONSTEXPR20_CONTAINER void _Swap_proxy_and_iterators(basic_string& _Right) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4647 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4648 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 32
_Al$2 = 40
$T3 = 48
this$ = 80
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4616 :     _CONSTEXPR20_CONTAINER void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 4617 :         _Mypair._Myval2._Orphan_all();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Tidy_deall

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR _Ptr$1[rsp], rax

; 4620 :             auto& _Al          = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	QWORD PTR _Al$2[rsp], rax

; 4621 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+32]
	inc	rax
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$1[rsp]
	mov	rcx, QWORD PTR _Al$2[rsp]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN2@Tidy_deall:

; 4623 :         }
; 4624 : 
; 4625 : #ifdef __cpp_lib_constexpr_string
; 4626 :         if (_STD is_constant_evaluated()) {
; 4627 :             _Mypair._Myval2._Bx._Ptr = nullptr;
; 4628 :             _Mypair._Myval2._Mysize  = 0;
; 4629 :             _Mypair._Myval2._Myres   = 0;
; 4630 :         } else
; 4631 : #endif // __cpp_lib_constexpr_string
; 4632 :         {
; 4633 :             _Mypair._Myval2._Mysize = 0;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 15

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T3[rsp], 0
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+8]
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
	npad	1

; 4637 :         }
; 4638 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4594 :     _CONSTEXPR20_CONTAINER void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 4595 :         auto& _My_data   = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 4596 :         _My_data._Mysize = 0;

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	QWORD PTR [rax+24], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	QWORD PTR [rax+32], 15

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T1[rsp], 0
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR _My_data$[rsp]
	lea	rax, QWORD PTR [rcx+rax+8]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4613 :         }
; 4614 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Requested$ = 56
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4500 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4501 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	r8, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+32]
	mov	rcx, QWORD PTR _Requested$[rsp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4502 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 40
$T4 = 56
_Requested$ = 80
_Old$ = 88
_Max$ = 96
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4487 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 4488 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rax, QWORD PTR _Requested$[rsp]
	or	rax, 15
	mov	QWORD PTR _Masked$[rsp], rax

; 4489 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	mov	rax, QWORD PTR _Max$[rsp]
	cmp	QWORD PTR _Masked$[rsp], rax
	jbe	SHORT $LN2@Calculate_

; 4490 :             return _Max;

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4491 :         }
; 4492 : 
; 4493 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

	xor	edx, edx
	mov	rax, QWORD PTR _Old$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Old$[rsp], rax
	jbe	SHORT $LN3@Calculate_

; 4494 :             return _Max;

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4495 :         }
; 4496 : 
; 4497 :         return (_STD max)(_Masked, _Old + _Old / 2);

	xor	edx, edx
	mov	rax, QWORD PTR _Old$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Old$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR $T4[rsp], rax
	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR _Masked$[rsp]
	call	??$max@_K@std@@YAAEB_KAEB_K0@Z		; std::max<unsigned __int64>
	mov	rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4498 :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 40
_Storage_max$ = 56
$T4 = 64
$T5 = 72
$T6 = 80
this$ = 112
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3943 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 3944 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
	mov	QWORD PTR _Alloc_max$[rsp], rax

; 3945 :         const size_type _Storage_max = // can always store small string

	mov	QWORD PTR $T4[rsp], 16
	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR _Alloc_max$[rsp]
	call	??$max@_K@std@@YAAEB_KAEB_K0@Z		; std::max<unsigned __int64>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Storage_max$[rsp], rax

; 3946 :             (_STD max)(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3947 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

	mov	rax, QWORD PTR _Storage_max$[rsp]
	dec	rax
	mov	QWORD PTR $T5[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T6[rsp], rax
	lea	rdx, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR $T6[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 3948 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3949 :         );
; 3950 :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 3939 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3940 :         return _Mypair._Myval2._Mysize;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+24]

; 3941 :     }

	pop	rdi
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT

; 3925 :     _NODISCARD _CONSTEXPR20_CONTAINER _Ret_z_ const _Elem* data() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 3926 :         return _Mypair._Myval2._Myptr();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 3927 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 32
$T2 = 40
$T3 = 41
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 3244 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 3245 :         // assign [_Ptr, _Ptr + _Count)
; 3246 :         if (_Count <= _Mypair._Myval2._Myres) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+32]
	cmp	QWORD PTR _Count$[rsp], rax
	ja	SHORT $LN2@assign

; 3247 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	QWORD PTR _Old_ptr$1[rsp], rax

; 3248 :             _Mypair._Myval2._Mysize = _Count;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	mov	QWORD PTR [rax+24], rcx

; 3249 :             _Traits::move(_Old_ptr, _Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Old_ptr$1[rsp]
	call	?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::move

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

	mov	BYTE PTR $T2[rsp], 0
	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Old_ptr$1[rsp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3251 :             return *this;

	mov	rax, QWORD PTR this$[rsp]
	jmp	SHORT $LN1@assign
$LN2@assign:

; 3252 :         }
; 3253 : 
; 3254 :         return _Reallocate_for(

	lea	rax, QWORD PTR $T3[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	mov	r9, QWORD PTR _Ptr$[rsp]
	movzx	r8d, BYTE PTR $T3[rsp]
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
$LN1@assign:

; 3255 :             _Count,
; 3256 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 3257 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 3259 :             },
; 3260 :             _Ptr);
; 3261 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S8$ = 52
_To_delete$ = 72
this$ = 96
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 3002 :     _CONSTEXPR20_CONTAINER ~basic_string() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 3003 :         _Tidy_deallocate();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 3004 : #if _ITERATOR_DEBUG_LEVEL != 0
; 3005 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S8$[rsp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	rax, QWORD PTR $S8$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 3006 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _To_delete$[rsp], rax

; 3007 :         _Mypair._Myval2._Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 3008 :         _Delete_plain_internal(_Alproxy, _To_delete);

	mov	rdx, QWORD PTR _To_delete$[rsp]
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 3009 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 3010 :     }

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Right_data$ = 40
tv136 = 48
this$ = 80
_Right$ = 88
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT

; 2872 :     _CONSTEXPR20_CONTAINER void _Take_contents(basic_string& _Right) noexcept {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 2873 :         // assign by stealing _Right's buffer
; 2874 :         // pre: this != &_Right
; 2875 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2876 :         // pre: *this owns no memory, iterators orphaned
; 2877 :         // (note: _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2878 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 2879 :         auto& _Right_data = _Right._Mypair._Myval2;

	mov	rax, QWORD PTR _Right$[rsp]
	mov	QWORD PTR _Right_data$[rsp], rax

; 2880 : 
; 2881 :         if constexpr (_Can_memcpy_val) {
; 2882 : #ifdef __cpp_lib_constexpr_string
; 2883 :             if (!_STD is_constant_evaluated())
; 2884 : #endif // __cpp_lib_constexpr_string
; 2885 :             {
; 2886 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2887 :                 if (_Right_data._Large_string_engaged()) {

	mov	rcx, QWORD PTR _Right_data$[rsp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Take_conte

; 2888 :                     // take ownership of _Right's iterators along with its buffer
; 2889 :                     _Swap_proxy_and_iterators(_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators

; 2890 :                 } else {

	jmp	SHORT $LN3@Take_conte
$LN2@Take_conte:

; 2891 :                     _Right_data._Orphan_all();

	mov	rcx, QWORD PTR _Right_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
$LN3@Take_conte:

; 2892 :                 }
; 2893 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2894 : 
; 2895 :                 _Memcpy_val_from(_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from

; 2896 :                 _Right._Tidy_init();

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2897 :                 return;

	jmp	$LN1@Take_conte

; 2898 :             }
; 2899 :         }
; 2900 : 
; 2901 :         if (_Right_data._Large_string_engaged()) { // steal buffer

	mov	rcx, QWORD PTR _Right_data$[rsp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@Take_conte

; 2902 :             _Construct_in_place(_My_data._Bx._Ptr, _Right_data._Bx._Ptr);

	mov	rax, QWORD PTR _Right_data$[rsp]
	add	rax, 8
	mov	rcx, QWORD PTR _My_data$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z ; std::_Construct_in_place<char *,char * &>

; 2903 :             _Right_data._Bx._Ptr = nullptr;

	mov	rax, QWORD PTR _Right_data$[rsp]
	mov	QWORD PTR [rax+8], 0

; 2904 :             _Swap_proxy_and_iterators(_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators

; 2905 :         } else { // copy small string buffer

	jmp	SHORT $LN5@Take_conte
$LN4@Take_conte:

; 2906 :             _Traits::copy(_My_data._Bx._Buf, _Right_data._Bx._Buf, _Right_data._Mysize + 1);

	mov	rax, QWORD PTR _Right_data$[rsp]
	mov	rax, QWORD PTR [rax+24]
	inc	rax
	mov	rcx, QWORD PTR _Right_data$[rsp]
	add	rcx, 8
	mov	rdx, QWORD PTR _My_data$[rsp]
	add	rdx, 8
	mov	QWORD PTR tv136[rsp], rdx
	mov	r8, rax
	mov	rdx, rcx
	mov	rax, QWORD PTR tv136[rsp]
	mov	rcx, rax
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2907 :             _Right_data._Orphan_all();

	mov	rcx, QWORD PTR _Right_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
$LN5@Take_conte:

; 2908 :         }
; 2909 : 
; 2910 :         _My_data._Mysize = _Right_data._Mysize;

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _Right_data$[rsp]
	mov	rcx, QWORD PTR [rcx+24]
	mov	QWORD PTR [rax+24], rcx

; 2911 :         _My_data._Myres  = _Right_data._Myres;

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _Right_data$[rsp]
	mov	rcx, QWORD PTR [rcx+32]
	mov	QWORD PTR [rax+32], rcx

; 2912 :         _Right._Tidy_init();

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
	npad	1
$LN1@Take_conte:

; 2913 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_My_data_mem$ = 32
_Right_data_mem$ = 40
this$ = 64
_Right$ = 72
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT

; 2863 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 2864 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2865 :         const auto _My_data_mem =

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
	add	rax, 8
	mov	QWORD PTR _My_data_mem$[rsp], rax

; 2866 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2867 :         const auto _Right_data_mem =

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rcx, rax
	call	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
	add	rax, 8
	mov	QWORD PTR _Right_data_mem$[rsp], rax

; 2868 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	mov	r8d, 32					; 00000020H
	mov	rdx, QWORD PTR _Right_data_mem$[rsp]
	mov	rcx, QWORD PTR _My_data_mem$[rsp]
	call	memcpy

; 2870 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
_Right$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2605 :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal())) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rcx, rax
	call	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8, rax
	movzx	edx, BYTE PTR $T1[rsp]
	call	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >

; 2606 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2607 :         _Take_contents(_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents

; 2608 :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
_Al$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2473 :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>

; 2474 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2475 :         _Tidy_init();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2476 :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2348 :         _CONSTEXPR20_CONTAINER ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2313 :     _CONSTEXPR20_CONTAINER bool _Large_string_engaged() const noexcept {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 2314 : #ifdef __cpp_lib_constexpr_string
; 2315 :         if (_STD is_constant_evaluated()) {
; 2316 :             return true;
; 2317 :         }
; 2318 : #endif // __cpp_lib_constexpr_string
; 2319 :         return _BUF_SIZE <= _Myres;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 16
	jb	SHORT $LN3@Large_stri
	mov	DWORD PTR tv66[rsp], 1
	jmp	SHORT $LN4@Large_stri
$LN3@Large_stri:
	mov	DWORD PTR tv66[rsp], 0
$LN4@Large_stri:
	movzx	eax, BYTE PTR tv66[rsp]

; 2320 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2304 :     _CONSTEXPR20_CONTAINER const value_type* _Myptr() const noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 2305 :         const value_type* _Result = _Bx._Buf;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	QWORD PTR _Result$[rsp], rax

; 2306 :         if (_Large_string_engaged()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2308 :         }
; 2309 : 
; 2310 :         return _Result;

	mov	rax, QWORD PTR _Result$[rsp]

; 2311 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2295 :     _CONSTEXPR20_CONTAINER value_type* _Myptr() noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 2296 :         value_type* _Result = _Bx._Buf;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	QWORD PTR _Result$[rsp], rax

; 2297 :         if (_Large_string_engaged()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2299 :         }
; 2300 : 
; 2301 :         return _Result;

	mov	rax, QWORD PTR _Result$[rsp]

; 2302 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2284 :     _CONSTEXPR20_CONTAINER _String_val() noexcept : _Bx() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty

; 2285 : 
; 2286 :     // length of internal buffer, [1, 16]:
; 2287 :     static constexpr size_type _BUF_SIZE = 16 / sizeof(value_type) < 1 ? 1 : 16 / sizeof(value_type);
; 2288 :     // roundup mask for allocated buffers, [0, 15]:
; 2289 :     static constexpr size_type _ALLOC_MASK = sizeof(value_type) <= 1 ? 15
; 2290 :                                            : sizeof(value_type) <= 2 ? 7
; 2291 :                                            : sizeof(value_type) <= 4 ? 3
; 2292 :                                            : sizeof(value_type) <= 8 ? 1
; 2293 :                                                                      : 0;
; 2294 : 
; 2295 :     _CONSTEXPR20_CONTAINER value_type* _Myptr() noexcept {
; 2296 :         value_type* _Result = _Bx._Buf;
; 2297 :         if (_Large_string_engaged()) {
; 2298 :             _Result = _Unfancy(_Bx._Ptr);
; 2299 :         }
; 2300 : 
; 2301 :         return _Result;
; 2302 :     }
; 2303 : 
; 2304 :     _CONSTEXPR20_CONTAINER const value_type* _Myptr() const noexcept {
; 2305 :         const value_type* _Result = _Bx._Buf;
; 2306 :         if (_Large_string_engaged()) {
; 2307 :             _Result = _Unfancy(_Bx._Ptr);
; 2308 :         }
; 2309 : 
; 2310 :         return _Result;
; 2311 :     }
; 2312 : 
; 2313 :     _CONSTEXPR20_CONTAINER bool _Large_string_engaged() const noexcept {
; 2314 : #ifdef __cpp_lib_constexpr_string
; 2315 :         if (_STD is_constant_evaluated()) {
; 2316 :             return true;
; 2317 :         }
; 2318 : #endif // __cpp_lib_constexpr_string
; 2319 :         return _BUF_SIZE <= _Myres;
; 2320 :     }
; 2321 : 
; 2322 :     _CONSTEXPR20_CONTAINER void _Check_offset(const size_type _Off) const {
; 2323 :         // checks whether _Off is in the bounds of [0, size()]
; 2324 :         if (_Mysize < _Off) {
; 2325 :             _Xran();
; 2326 :         }
; 2327 :     }
; 2328 : 
; 2329 :     _CONSTEXPR20_CONTAINER void _Check_offset_exclusive(const size_type _Off) const {
; 2330 :         // checks whether _Off is in the bounds of [0, size())
; 2331 :         if (_Mysize <= _Off) {
; 2332 :             _Xran();
; 2333 :         }
; 2334 :     }
; 2335 : 
; 2336 :     [[noreturn]] static void _Xran() {
; 2337 :         _Xout_of_range("invalid string position");
; 2338 :     }
; 2339 : 
; 2340 :     _CONSTEXPR20_CONTAINER size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {
; 2341 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2342 :         return (_STD min)(_Size, _Mysize - _Off);
; 2343 :     }
; 2344 : 
; 2345 :     union _Bxty { // storage for small buffer or pointer to larger one
; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers
; 2347 : 
; 2348 :         _CONSTEXPR20_CONTAINER ~_Bxty() noexcept {} // user-provided, for fancy pointers
; 2349 : 
; 2350 :         value_type _Buf[_BUF_SIZE];
; 2351 :         pointer _Ptr;
; 2352 :         char _Alias[_BUF_SIZE]; // TRANSITION, ABI: _Alias is preserved for binary compatibility (especially /clr)
; 2353 :     } _Bx;
; 2354 : 
; 2355 :     size_type _Mysize = 0; // current length of string

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 0

; 2284 :     _CONSTEXPR20_CONTAINER _String_val() noexcept : _Bx() {}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 727  :     _NODISCARD static _CONSTEXPR20_DYNALLOC size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 728  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, -1

; 729  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$00@std@@YA_K_K@Z	; std::_Get_size_of_n<1>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 840  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 836  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 825  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2373 : [[noreturn]] inline void _Xlen_string() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 2374 :     _Xlength_error("string too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlen_strin:

; 2375 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT

; 477  :     _NODISCARD static constexpr int_type eof() noexcept {

$LN3:
	push	rdi

; 478  :         return static_cast<int_type>(EOF);

	mov	eax, -1

; 479  :     }

	pop	rdi
	ret	0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z
_TEXT	SEGMENT
tv69 = 32
tv68 = 36
_Meta$ = 64
?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z PROC	; std::_Narrow_char_traits<char,int>::not_eof, COMDAT

; 473  :     _NODISCARD static constexpr int_type not_eof(const int_type& _Meta) noexcept {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 474  :         return _Meta != eof() ? _Meta : !eof();

	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	rcx, QWORD PTR _Meta$[rsp]
	cmp	DWORD PTR [rcx], eax
	je	SHORT $LN5@not_eof
	mov	rax, QWORD PTR _Meta$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv69[rsp], eax
	jmp	SHORT $LN6@not_eof
$LN5@not_eof:
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	test	eax, eax
	jne	SHORT $LN3@not_eof
	mov	DWORD PTR tv68[rsp], 1
	jmp	SHORT $LN4@not_eof
$LN3@not_eof:
	mov	DWORD PTR tv68[rsp], 0
$LN4@not_eof:
	mov	eax, DWORD PTR tv68[rsp]
	mov	DWORD PTR tv69[rsp], eax
$LN6@not_eof:
	mov	eax, DWORD PTR tv69[rsp]

; 475  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ENDP	; std::_Narrow_char_traits<char,int>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 0
_Left$ = 32
_Right$ = 40
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT

; 469  :     _NODISCARD static constexpr bool eq_int_type(const int_type& _Left, const int_type& _Right) noexcept {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 470  :         return _Left == _Right;

	mov	rax, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv65[rsp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv65[rsp], 0
$LN4@eq_int_typ:
	movzx	eax, BYTE PTR tv65[rsp]

; 471  :     }

	add	rsp, 16
	pop	rdi
	ret	0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z
_TEXT	SEGMENT
_Ch$ = 16
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::to_int_type, COMDAT

; 465  :     _NODISCARD static constexpr int_type to_int_type(const _Elem& _Ch) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 466  :         return static_cast<unsigned char>(_Ch);

	mov	rax, QWORD PTR _Ch$[rsp]
	movzx	eax, BYTE PTR [rax]

; 467  :     }

	pop	rdi
	ret	0
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z
_TEXT	SEGMENT
_Meta$ = 16
?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z PROC ; std::_Narrow_char_traits<char,int>::to_char_type, COMDAT

; 461  :     _NODISCARD static constexpr _Elem to_char_type(const int_type& _Meta) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 462  :         return static_cast<_Elem>(_Meta);

	mov	rax, QWORD PTR _Meta$[rsp]
	movzx	eax, BYTE PTR [rax]

; 463  :     }

	pop	rdi
	ret	0
?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ENDP ; std::_Narrow_char_traits<char,int>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z
_TEXT	SEGMENT
tv67 = 0
_Left$ = 32
_Right$ = 40
?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z PROC	; std::_Narrow_char_traits<char,int>::eq, COMDAT

; 453  :     _NODISCARD static constexpr bool eq(const _Elem& _Left, const _Elem& _Right) noexcept {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 454  :         return _Left == _Right;

	mov	rax, QWORD PTR _Left$[rsp]
	movsx	eax, BYTE PTR [rax]
	mov	rcx, QWORD PTR _Right$[rsp]
	movsx	ecx, BYTE PTR [rcx]
	cmp	eax, ecx
	jne	SHORT $LN3@eq
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN4@eq
$LN3@eq:
	mov	DWORD PTR tv67[rsp], 0
$LN4@eq:
	movzx	eax, BYTE PTR tv67[rsp]

; 455  :     }

	add	rsp, 16
	pop	rdi
	ret	0
?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z ENDP	; std::_Narrow_char_traits<char,int>::eq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 449  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 450  :         _Left = _Right;

	mov	rax, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	movzx	ecx, BYTE PTR [rcx]
	mov	BYTE PTR [rax], cl

; 451  :     }

	pop	rdi
	ret	0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 48
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 396  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 397  :         // find length of null-terminated string
; 398  : #if _HAS_CXX17
; 399  : #ifdef __cpp_char8_t
; 400  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 401  : #if _HAS_U8_INTRINSICS
; 402  :             return __builtin_u8strlen(_First);
; 403  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 404  :             return _Primary_char_traits::length(_First);
; 405  : #endif // _HAS_U8_INTRINSICS
; 406  :         } else
; 407  : #endif // __cpp_char8_t
; 408  :         {
; 409  :             return __builtin_strlen(_First);
; 410  :         }
; 411  : #else // _HAS_CXX17
; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	mov	rcx, QWORD PTR _First$[rsp]
	call	strlen

; 413  : #endif // _HAS_CXX17
; 414  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::move, COMDAT

; 80   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 81   :         // copy [_First2, _First2 + _Count) to [_First1, ...), allowing overlap
; 82   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 83   :         __builtin_memmove(_First1, _First2, _Count * sizeof(_Elem));
; 84   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^ / vvv !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 85   : #ifdef __cpp_lib_is_constant_evaluated
; 86   :         if (_STD is_constant_evaluated()) {
; 87   :             // dest: [_First1, _First1 + _Count)
; 88   :             // src: [_First2, _First2 + _Count)
; 89   :             // We need to handle overlapping ranges.
; 90   :             // If _First1 is in the src range, we need a backward loop.
; 91   :             // Otherwise, the forward loop works (even if the back of dest overlaps the front of src).
; 92   : 
; 93   :             if (_First1 == _First2) {
; 94   :                 return _First1; // Self-assignment; either loop would work, but returning immediately is faster.
; 95   :             }
; 96   : 
; 97   :             // Usually, we would compare pointers with less-than, even though they could belong to different arrays.
; 98   :             // However, we're not allowed to do that during constant evaluation, so we need a linear scan for equality.
; 99   :             bool _Loop_forward = true;
; 100  : 
; 101  :             for (const _Elem* _Src = _First2; _Src != _First2 + _Count; ++_Src) {
; 102  :                 if (_First1 == _Src) {
; 103  :                     _Loop_forward = false;
; 104  :                     break;
; 105  :                 }
; 106  :             }
; 107  : 
; 108  :             if (_Loop_forward) {
; 109  :                 for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {
; 110  :                     _First1[_Idx] = _First2[_Idx];
; 111  :                 }
; 112  :             } else {
; 113  :                 for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {
; 114  :                     _First1[_Count - 1 - _Idx] = _First2[_Count - 1 - _Idx];
; 115  :                 }
; 116  :             }
; 117  : 
; 118  :             return _First1;
; 119  :         }
; 120  : #endif // __cpp_lib_is_constant_evaluated
; 121  : 
; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First2$[rsp]
	mov	rcx, QWORD PTR _First1$[rsp]
	call	memmove

; 123  : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 124  : 
; 125  :         return _First1;

	mov	rax, QWORD PTR _First1$[rsp]

; 126  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::copy, COMDAT

; 49   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 50   :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 51   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 52   :         __builtin_memcpy(_First1, _First2, _Count * sizeof(_Elem));
; 53   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^ / vvv !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 54   : #ifdef __cpp_lib_is_constant_evaluated
; 55   :         if (_STD is_constant_evaluated()) {
; 56   :             // pre: [_First1, _First1 + _Count) and [_First2, _First2 + _Count) do not overlap; see LWG-3085
; 57   :             for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {
; 58   :                 _First1[_Idx] = _First2[_Idx];
; 59   :             }
; 60   : 
; 61   :             return _First1;
; 62   :         }
; 63   : #endif // __cpp_lib_is_constant_evaluated
; 64   : 
; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First2$[rsp]
	mov	rcx, QWORD PTR _First1$[rsp]
	call	memcpy

; 66   : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 67   : 
; 68   :         return _First1;

	mov	rax, QWORD PTR _First1$[rsp]

; 69   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?eof@?$_WChar_traits@_W@std@@SAGXZ
_TEXT	SEGMENT
?eof@?$_WChar_traits@_W@std@@SAGXZ PROC			; std::_WChar_traits<wchar_t>::eof, COMDAT

; 328  :     _NODISCARD static constexpr int_type eof() noexcept {

$LN3:
	push	rdi

; 329  :         return WEOF;

	mov	eax, 65535				; 0000ffffH

; 330  :     }

	pop	rdi
	ret	0
?eof@?$_WChar_traits@_W@std@@SAGXZ ENDP			; std::_WChar_traits<wchar_t>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?not_eof@?$_WChar_traits@_W@std@@SAGAEBG@Z
_TEXT	SEGMENT
tv64 = 32
tv72 = 36
tv71 = 38
_Meta$ = 64
?not_eof@?$_WChar_traits@_W@std@@SAGAEBG@Z PROC		; std::_WChar_traits<wchar_t>::not_eof, COMDAT

; 324  :     _NODISCARD static constexpr int_type not_eof(const int_type& _Meta) noexcept {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 325  :         return _Meta != eof() ? _Meta : static_cast<int_type>(!eof());

	mov	rax, QWORD PTR _Meta$[rsp]
	movzx	eax, WORD PTR [rax]
	mov	DWORD PTR tv64[rsp], eax
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	movzx	eax, ax
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN5@not_eof
	mov	rax, QWORD PTR _Meta$[rsp]
	movzx	eax, WORD PTR [rax]
	mov	WORD PTR tv72[rsp], ax
	jmp	SHORT $LN6@not_eof
$LN5@not_eof:
	call	?eof@?$_WChar_traits@_W@std@@SAGXZ	; std::_WChar_traits<wchar_t>::eof
	movzx	eax, ax
	test	eax, eax
	jne	SHORT $LN3@not_eof
	mov	eax, 1
	mov	WORD PTR tv71[rsp], ax
	jmp	SHORT $LN4@not_eof
$LN3@not_eof:
	xor	eax, eax
	mov	WORD PTR tv71[rsp], ax
$LN4@not_eof:
	movzx	eax, WORD PTR tv71[rsp]
	mov	WORD PTR tv72[rsp], ax
$LN6@not_eof:
	movzx	eax, WORD PTR tv72[rsp]

; 326  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?not_eof@?$_WChar_traits@_W@std@@SAGAEBG@Z ENDP		; std::_WChar_traits<wchar_t>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z
_TEXT	SEGMENT
tv67 = 0
_Left$ = 32
_Right$ = 40
?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z PROC	; std::_WChar_traits<wchar_t>::eq_int_type, COMDAT

; 320  :     _NODISCARD static constexpr bool eq_int_type(const int_type& _Left, const int_type& _Right) noexcept {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 321  :         return _Left == _Right;

	mov	rax, QWORD PTR _Left$[rsp]
	movzx	eax, WORD PTR [rax]
	mov	rcx, QWORD PTR _Right$[rsp]
	movzx	ecx, WORD PTR [rcx]
	cmp	eax, ecx
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv67[rsp], 0
$LN4@eq_int_typ:
	movzx	eax, BYTE PTR tv67[rsp]

; 322  :     }

	add	rsp, 16
	pop	rdi
	ret	0
?eq_int_type@?$_WChar_traits@_W@std@@SA_NAEBG0@Z ENDP	; std::_WChar_traits<wchar_t>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?to_int_type@?$_WChar_traits@_W@std@@SAGAEB_W@Z
_TEXT	SEGMENT
_Ch$ = 16
?to_int_type@?$_WChar_traits@_W@std@@SAGAEB_W@Z PROC	; std::_WChar_traits<wchar_t>::to_int_type, COMDAT

; 316  :     _NODISCARD static constexpr int_type to_int_type(const _Elem& _Ch) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 317  :         return _Ch;

	mov	rax, QWORD PTR _Ch$[rsp]
	movzx	eax, WORD PTR [rax]

; 318  :     }

	pop	rdi
	ret	0
?to_int_type@?$_WChar_traits@_W@std@@SAGAEB_W@Z ENDP	; std::_WChar_traits<wchar_t>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?to_char_type@?$_WChar_traits@_W@std@@SA_WAEBG@Z
_TEXT	SEGMENT
_Meta$ = 16
?to_char_type@?$_WChar_traits@_W@std@@SA_WAEBG@Z PROC	; std::_WChar_traits<wchar_t>::to_char_type, COMDAT

; 312  :     _NODISCARD static constexpr _Elem to_char_type(const int_type& _Meta) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 313  :         return _Meta;

	mov	rax, QWORD PTR _Meta$[rsp]
	movzx	eax, WORD PTR [rax]

; 314  :     }

	pop	rdi
	ret	0
?to_char_type@?$_WChar_traits@_W@std@@SA_WAEBG@Z ENDP	; std::_WChar_traits<wchar_t>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?eq@?$_WChar_traits@_W@std@@SA_NAEB_W0@Z
_TEXT	SEGMENT
tv67 = 0
_Left$ = 32
_Right$ = 40
?eq@?$_WChar_traits@_W@std@@SA_NAEB_W0@Z PROC		; std::_WChar_traits<wchar_t>::eq, COMDAT

; 304  :     _NODISCARD static constexpr bool eq(const _Elem& _Left, const _Elem& _Right) noexcept {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 305  :         return _Left == _Right;

	mov	rax, QWORD PTR _Left$[rsp]
	movzx	eax, WORD PTR [rax]
	mov	rcx, QWORD PTR _Right$[rsp]
	movzx	ecx, WORD PTR [rcx]
	cmp	eax, ecx
	jne	SHORT $LN3@eq
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN4@eq
$LN3@eq:
	mov	DWORD PTR tv67[rsp], 0
$LN4@eq:
	movzx	eax, BYTE PTR tv67[rsp]

; 306  :     }

	add	rsp, 16
	pop	rdi
	ret	0
?eq@?$_WChar_traits@_W@std@@SA_NAEB_W0@Z ENDP		; std::_WChar_traits<wchar_t>::eq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z PROC	; std::_WChar_traits<wchar_t>::assign, COMDAT

; 300  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 301  :         _Left = _Right;

	mov	rax, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	movzx	ecx, WORD PTR [rcx]
	mov	WORD PTR [rax], cx

; 302  :     }

	pop	rdi
	ret	0
?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ENDP	; std::_WChar_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?move@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z PROC ; std::_Char_traits<wchar_t,unsigned short>::move, COMDAT

; 80   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 81   :         // copy [_First2, _First2 + _Count) to [_First1, ...), allowing overlap
; 82   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 83   :         __builtin_memmove(_First1, _First2, _Count * sizeof(_Elem));
; 84   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^ / vvv !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 85   : #ifdef __cpp_lib_is_constant_evaluated
; 86   :         if (_STD is_constant_evaluated()) {
; 87   :             // dest: [_First1, _First1 + _Count)
; 88   :             // src: [_First2, _First2 + _Count)
; 89   :             // We need to handle overlapping ranges.
; 90   :             // If _First1 is in the src range, we need a backward loop.
; 91   :             // Otherwise, the forward loop works (even if the back of dest overlaps the front of src).
; 92   : 
; 93   :             if (_First1 == _First2) {
; 94   :                 return _First1; // Self-assignment; either loop would work, but returning immediately is faster.
; 95   :             }
; 96   : 
; 97   :             // Usually, we would compare pointers with less-than, even though they could belong to different arrays.
; 98   :             // However, we're not allowed to do that during constant evaluation, so we need a linear scan for equality.
; 99   :             bool _Loop_forward = true;
; 100  : 
; 101  :             for (const _Elem* _Src = _First2; _Src != _First2 + _Count; ++_Src) {
; 102  :                 if (_First1 == _Src) {
; 103  :                     _Loop_forward = false;
; 104  :                     break;
; 105  :                 }
; 106  :             }
; 107  : 
; 108  :             if (_Loop_forward) {
; 109  :                 for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {
; 110  :                     _First1[_Idx] = _First2[_Idx];
; 111  :                 }
; 112  :             } else {
; 113  :                 for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {
; 114  :                     _First1[_Count - 1 - _Idx] = _First2[_Count - 1 - _Idx];
; 115  :                 }
; 116  :             }
; 117  : 
; 118  :             return _First1;
; 119  :         }
; 120  : #endif // __cpp_lib_is_constant_evaluated
; 121  : 
; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	rax, QWORD PTR _Count$[rsp]
	shl	rax, 1
	mov	r8, rax
	mov	rdx, QWORD PTR _First2$[rsp]
	mov	rcx, QWORD PTR _First1$[rsp]
	call	memmove

; 123  : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 124  : 
; 125  :         return _First1;

	mov	rax, QWORD PTR _First1$[rsp]

; 126  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?move@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z ENDP ; std::_Char_traits<wchar_t,unsigned short>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
;	COMDAT ?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z PROC ; std::_Char_traits<wchar_t,unsigned short>::copy, COMDAT

; 49   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 50   :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 51   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 52   :         __builtin_memcpy(_First1, _First2, _Count * sizeof(_Elem));
; 53   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^ / vvv !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 54   : #ifdef __cpp_lib_is_constant_evaluated
; 55   :         if (_STD is_constant_evaluated()) {
; 56   :             // pre: [_First1, _First1 + _Count) and [_First2, _First2 + _Count) do not overlap; see LWG-3085
; 57   :             for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {
; 58   :                 _First1[_Idx] = _First2[_Idx];
; 59   :             }
; 60   : 
; 61   :             return _First1;
; 62   :         }
; 63   : #endif // __cpp_lib_is_constant_evaluated
; 64   : 
; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rax, QWORD PTR _Count$[rsp]
	shl	rax, 1
	mov	r8, rax
	mov	rdx, QWORD PTR _First2$[rsp]
	mov	rcx, QWORD PTR _First1$[rsp]
	call	memcpy

; 66   : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 67   : 
; 68   :         return _First1;

	mov	rax, QWORD PTR _First1$[rsp]

; 69   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z ENDP ; std::_Char_traits<wchar_t,unsigned short>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
_Right$ = 88
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators_locked, COMDAT

; 1100 :     void _Swap_proxy_and_iterators_locked(_Container_base12& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 1101 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1102 :         _Swap_proxy_and_iterators_unlocked(_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked

; 1103 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ PROC	; std::_Container_base12::_Orphan_all_locked, COMDAT

; 1095 :     void _Orphan_all_locked() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 1096 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1097 :         _Orphan_all_unlocked();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked

; 1098 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ ENDP	; std::_Container_base12::_Orphan_all_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z
_TEXT	SEGMENT
_Temp$ = 0
this$ = 32
_Right$ = 40
?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked, COMDAT

; 1242 : _CONSTEXPR20_CONTAINER void _Container_base12::_Swap_proxy_and_iterators_unlocked(_Container_base12& _Right) noexcept {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1243 :     _Container_proxy* _Temp = _Myproxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$[rsp], rax

; 1244 :     _Myproxy                = _Right._Myproxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 1245 :     _Right._Myproxy         = _Temp;

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR _Temp$[rsp]
	mov	QWORD PTR [rax], rcx

; 1246 : 
; 1247 :     if (_Myproxy) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Swap_proxy

; 1248 :         _Myproxy->_Mycont = this;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], rcx
$LN2@Swap_proxy:

; 1249 :     }
; 1250 : 
; 1251 :     if (_Right._Myproxy) {

	mov	rax, QWORD PTR _Right$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Swap_proxy

; 1252 :         _Right._Myproxy->_Mycont = &_Right;

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Right$[rsp]
	mov	QWORD PTR [rax], rcx
$LN3@Swap_proxy:

; 1253 :     }
; 1254 : }

	add	rsp, 16
	pop	rdi
	ret	0
?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 0
this$ = 32
?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked, COMDAT

; 1220 : _CONSTEXPR20_CONTAINER void _Container_base12::_Orphan_all_unlocked() noexcept {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1221 :     for (auto& _Pnext = _Myproxy->_Myfirstiter; _Pnext; _Pnext = _Pnext->_Mynextiter) { // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rsp], rax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN4@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_all

; 1222 :         _Pnext->_Myproxy = nullptr;

	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0

; 1223 :     }

	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1224 :     _Myproxy->_Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax+8], 0

; 1225 : }

	add	rsp, 16
	pop	rdi
	ret	0
?_Orphan_all_unlocked@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT

; 1256 : _CONSTEXPR20_CONTAINER void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1257 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1258 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1259 :     if (_STD is_constant_evaluated()) {
; 1260 :         _Swap_proxy_and_iterators_unlocked(_Right);
; 1261 :     } else
; 1262 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1263 :     {
; 1264 :         _Swap_proxy_and_iterators_locked(_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_locked

; 1265 :     }
; 1266 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1267 :     _Swap_proxy_and_iterators_unlocked(_Right);
; 1268 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1269 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1227 : _CONSTEXPR20_CONTAINER void _Container_base12::_Orphan_all() noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1228 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1229 :     if (_Myproxy) { // proxy allocated, drain it

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Orphan_all

; 1230 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1231 :         if (_STD is_constant_evaluated()) {
; 1232 :             _Orphan_all_unlocked();
; 1233 :         } else
; 1234 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1235 :         {
; 1236 :             _Orphan_all_locked();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all_locked@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked
$LN2@Orphan_all:

; 1237 :         }
; 1238 :     }
; 1239 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1240 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1064 :     _CONSTEXPR20_CONTAINER _Container_base12() noexcept = default;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1065 : 
; 1066 :     _Container_base12(const _Container_base12&) = delete;
; 1067 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1068 : 
; 1069 :     _CONSTEXPR20_CONTAINER void _Orphan_all() noexcept;
; 1070 :     _CONSTEXPR20_CONTAINER void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1071 : 
; 1072 :     template <class _Alloc>
; 1073 :     _CONSTEXPR20_CONTAINER void _Alloc_proxy(_Alloc&& _Al) {
; 1074 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1075 :         _Construct_in_place(*_New_proxy, this);
; 1076 :         _Myproxy            = _New_proxy;
; 1077 :         _New_proxy->_Mycont = this;
; 1078 :     }
; 1079 : 
; 1080 :     template <class _Alloc>
; 1081 :     _CONSTEXPR20_CONTAINER void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1082 :         // pre: no iterators refer to the existing proxy
; 1083 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1084 :         _Construct_in_place(*_New_proxy, this);
; 1085 :         _New_proxy->_Mycont = this;
; 1086 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1087 :     }
; 1088 : 
; 1089 :     _Container_proxy* _Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1064 :     _CONSTEXPR20_CONTAINER _Container_base12() noexcept = default;

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1056 :     _CONSTEXPR20_CONTAINER _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Mycont_$[rsp]
	mov	QWORD PTR [rax], rcx

; 1057 : 
; 1058 :     const _Container_base12* _Mycont       = nullptr;
; 1059 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 1056 :     _CONSTEXPR20_CONTAINER _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 153  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 154  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 155  :     _Bytes += _Non_user_size;

	mov	rax, QWORD PTR _Bytes$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 47					; 0000002fH
	mov	rcx, QWORD PTR _Bytes$[rsp]
	mov	QWORD PTR [rcx], rax

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr_user$[rsp], rax

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr_user$[rsp]
	mov	rax, QWORD PTR [rcx+rax]
	mov	QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr_user$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	cmp	QWORD PTR [rcx+rax], rdx
	jne	SHORT $LN14@Adjust_man
	jmp	SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 162				; 000000a2H
	lea	rdx, OFFSET FLAT:??_C@_0GI@KDIDHNIL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
	xor	eax, eax
$LN19@Adjust_man:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 162				; 000000a2H
	lea	r8, OFFSET FLAT:??_C@_1NA@FOAKNOEL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN15@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Adjust_man

; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	QWORD PTR _Min_back_shift$[rsp], 16

; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptr_container$[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	QWORD PTR _Back_shift$[rsp], 16
	jb	SHORT $LN16@Adjust_man
	cmp	QWORD PTR _Back_shift$[rsp], 47		; 0000002fH
	ja	SHORT $LN16@Adjust_man
	jmp	SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 172				; 000000acH
	lea	rdx, OFFSET FLAT:??_C@_0GI@KDIDHNIL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
	xor	eax, eax
$LN20@Adjust_man:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 172				; 000000acH
	lea	r8, OFFSET FLAT:??_C@_1NA@FOAKNOEL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN17@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Adjust_man

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptr_container$[rsp]
	mov	QWORD PTR [rax], rcx

; 174  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 84   :         void* _Allocate(const size_t _Bytes) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 85   :         return ::operator new(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	??2@YAPEAX_K@Z				; operator new

; 86   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
	push	rdi
	sub	rsp, 64					; 00000040H

; 321  :     _THROW(bad_array_new_length{});

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0bad_array_new_length@std@@QEAA@XZ	; std::bad_array_new_length::bad_array_new_length
	lea	rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
$LN2@Throw_bad_:

; 322  : }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_array_new_length@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0bad_alloc@std@@QEAA@AEBV01@@Z
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_alloc@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 141  :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 140  :         : bad_alloc("bad array new length")

	lea	rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	rcx, QWORD PTR this$[rsp]
	call	??0bad_alloc@std@@AEAA@QEBD@Z		; std::bad_alloc::bad_alloc

; 141  :     {

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx

; 142  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_alloc@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 130  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 129  :         : exception(_Message, 1)

	mov	r8d, 1
	mov	rdx, QWORD PTR _Message$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@QEBDH@Z		; std::exception::exception

; 130  :     {

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx

; 131  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 94   :     {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@what
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN4@what
$LN3@what:
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	mov	QWORD PTR tv69[rsp], rax
$LN4@what:
	mov	rax, QWORD PTR tv69[rsp]

; 96   :     }

	add	rsp, 16
	pop	rdi
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 90   :         __std_exception_destroy(&_Data);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	__std_exception_destroy

; 91   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 71   :         : _Data()

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, QWORD PTR _Other$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	__std_exception_copy

; 74   :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 65   :         : _Data()

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 67   :         _Data._What = _Message;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Message$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 68   :     }

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec4@M$0A@@glm@@QEAA@XZ PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 163  : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 161  : 				: x(0), y(0), z(0), w(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12], xmm0

; 163  : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@XZ ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tvec4<float,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1IK@NGAJILNN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tvec4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z PROC			; glm::tvec4<float,0>::operator[], COMDAT

; 329  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 330  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 330				; 0000014aH
	lea	rdx, OFFSET FLAT:??_C@_1IK@NGAJILNN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 331  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 332  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z ENDP			; glm::tvec4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@M$0A@@glm@@SAHXZ PROC			; glm::tvec4<float,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@M$0A@@glm@@SAHXZ ENDP			; glm::tvec4<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec2@M$0A@@glm@@QEAA@XZ PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 27   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 25   : 				: x(0), y(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0

; 27   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@XZ ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tvec2<float,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tvec2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z PROC			; glm::tvec2<float,0>::operator[], COMDAT

; 102  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 103  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 103				; 00000067H
	lea	rdx, OFFSET FLAT:??_C@_1IK@DJDECODN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAs?$AA4?$AA0?$AA0?$AA2?$AA6@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 104  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 105  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z ENDP			; glm::tvec2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@M$0A@@glm@@SAHXZ PROC			; glm::tvec2<float,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@M$0A@@glm@@SAHXZ ENDP			; glm::tvec2<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 167  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 168  :         (void)_Size;
; 169  :         return _Where;

	mov	rax, QWORD PTR _Where$[rsp]

; 170  :     }

	pop	rdi
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 647  :     _NODISCARD static constexpr long long(max)() noexcept {

$LN3:
	push	rdi

; 648  :         return LLONG_MAX;

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 649  :     }

	pop	rdi
	ret	0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\wchar.h
;	COMDAT wmemcpy
_TEXT	SEGMENT
_S1$ = 48
_S2$ = 56
_N$ = 64
wmemcpy	PROC						; COMDAT

; 234  :     {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 235  :         #pragma warning(suppress: 6386) // Buffer overrun
; 236  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	rax, QWORD PTR _N$[rsp]
	shl	rax, 1
	mov	r8, rax
	mov	rdx, QWORD PTR _S2$[rsp]
	mov	rcx, QWORD PTR _S1$[rsp]
	call	memcpy

; 237  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
wmemcpy	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\s4002675\Downloads\glm-0.9.8.5\glm\test\gtx\gtx_io.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv66 = 32
tv67 = 40
__t$ = 64
__s$ = 72
__n$ = 80
__f$ = 88
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN2@vector:
	mov	rax, QWORD PTR __n$[rsp]
	mov	QWORD PTR tv66[rsp], rax
	mov	rax, QWORD PTR __n$[rsp]
	dec	rax
	mov	QWORD PTR __n$[rsp], rax
	cmp	QWORD PTR tv66[rsp], 0
	jbe	SHORT $LN5@vector
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN6@vector
$LN5@vector:
	mov	DWORD PTR tv67[rsp], 0
$LN6@vector:
	cmp	DWORD PTR tv67[rsp], 0
	je	SHORT $LN3@vector
	mov	rcx, QWORD PTR __t$[rsp]
	call	QWORD PTR __f$[rsp]
	mov	rax, QWORD PTR __s$[rsp]
	mov	rcx, QWORD PTR __t$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR __t$[rsp], rax
	jmp	SHORT $LN2@vector
$LN3@vector:
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
